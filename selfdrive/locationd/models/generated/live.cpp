#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7457422784797960521) {
   out_7457422784797960521[0] = 0;
   out_7457422784797960521[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7457422784797960521[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7457422784797960521[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7457422784797960521[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7457422784797960521[5] = -sin(in_vec[1]);
   out_7457422784797960521[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7457422784797960521[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7457422784797960521[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7457422784797960521[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7457422784797960521[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7457422784797960521[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7457422784797960521[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7457422784797960521[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7457422784797960521[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7457422784797960521[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7457422784797960521[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7457422784797960521[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3470959261784518961) {
   out_3470959261784518961[0] = delta_x[0] + nom_x[0];
   out_3470959261784518961[1] = delta_x[1] + nom_x[1];
   out_3470959261784518961[2] = delta_x[2] + nom_x[2];
   out_3470959261784518961[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3470959261784518961[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3470959261784518961[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3470959261784518961[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3470959261784518961[7] = delta_x[6] + nom_x[7];
   out_3470959261784518961[8] = delta_x[7] + nom_x[8];
   out_3470959261784518961[9] = delta_x[8] + nom_x[9];
   out_3470959261784518961[10] = delta_x[9] + nom_x[10];
   out_3470959261784518961[11] = delta_x[10] + nom_x[11];
   out_3470959261784518961[12] = delta_x[11] + nom_x[12];
   out_3470959261784518961[13] = delta_x[12] + nom_x[13];
   out_3470959261784518961[14] = delta_x[13] + nom_x[14];
   out_3470959261784518961[15] = delta_x[14] + nom_x[15];
   out_3470959261784518961[16] = delta_x[15] + nom_x[16];
   out_3470959261784518961[17] = delta_x[16] + nom_x[17];
   out_3470959261784518961[18] = delta_x[17] + nom_x[18];
   out_3470959261784518961[19] = delta_x[18] + nom_x[19];
   out_3470959261784518961[20] = delta_x[19] + nom_x[20];
   out_3470959261784518961[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1797346124048533595) {
   out_1797346124048533595[0] = -nom_x[0] + true_x[0];
   out_1797346124048533595[1] = -nom_x[1] + true_x[1];
   out_1797346124048533595[2] = -nom_x[2] + true_x[2];
   out_1797346124048533595[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1797346124048533595[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1797346124048533595[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1797346124048533595[6] = -nom_x[7] + true_x[7];
   out_1797346124048533595[7] = -nom_x[8] + true_x[8];
   out_1797346124048533595[8] = -nom_x[9] + true_x[9];
   out_1797346124048533595[9] = -nom_x[10] + true_x[10];
   out_1797346124048533595[10] = -nom_x[11] + true_x[11];
   out_1797346124048533595[11] = -nom_x[12] + true_x[12];
   out_1797346124048533595[12] = -nom_x[13] + true_x[13];
   out_1797346124048533595[13] = -nom_x[14] + true_x[14];
   out_1797346124048533595[14] = -nom_x[15] + true_x[15];
   out_1797346124048533595[15] = -nom_x[16] + true_x[16];
   out_1797346124048533595[16] = -nom_x[17] + true_x[17];
   out_1797346124048533595[17] = -nom_x[18] + true_x[18];
   out_1797346124048533595[18] = -nom_x[19] + true_x[19];
   out_1797346124048533595[19] = -nom_x[20] + true_x[20];
   out_1797346124048533595[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_8553784297177108843) {
   out_8553784297177108843[0] = 1.0;
   out_8553784297177108843[1] = 0;
   out_8553784297177108843[2] = 0;
   out_8553784297177108843[3] = 0;
   out_8553784297177108843[4] = 0;
   out_8553784297177108843[5] = 0;
   out_8553784297177108843[6] = 0;
   out_8553784297177108843[7] = 0;
   out_8553784297177108843[8] = 0;
   out_8553784297177108843[9] = 0;
   out_8553784297177108843[10] = 0;
   out_8553784297177108843[11] = 0;
   out_8553784297177108843[12] = 0;
   out_8553784297177108843[13] = 0;
   out_8553784297177108843[14] = 0;
   out_8553784297177108843[15] = 0;
   out_8553784297177108843[16] = 0;
   out_8553784297177108843[17] = 0;
   out_8553784297177108843[18] = 0;
   out_8553784297177108843[19] = 0;
   out_8553784297177108843[20] = 0;
   out_8553784297177108843[21] = 0;
   out_8553784297177108843[22] = 1.0;
   out_8553784297177108843[23] = 0;
   out_8553784297177108843[24] = 0;
   out_8553784297177108843[25] = 0;
   out_8553784297177108843[26] = 0;
   out_8553784297177108843[27] = 0;
   out_8553784297177108843[28] = 0;
   out_8553784297177108843[29] = 0;
   out_8553784297177108843[30] = 0;
   out_8553784297177108843[31] = 0;
   out_8553784297177108843[32] = 0;
   out_8553784297177108843[33] = 0;
   out_8553784297177108843[34] = 0;
   out_8553784297177108843[35] = 0;
   out_8553784297177108843[36] = 0;
   out_8553784297177108843[37] = 0;
   out_8553784297177108843[38] = 0;
   out_8553784297177108843[39] = 0;
   out_8553784297177108843[40] = 0;
   out_8553784297177108843[41] = 0;
   out_8553784297177108843[42] = 0;
   out_8553784297177108843[43] = 0;
   out_8553784297177108843[44] = 1.0;
   out_8553784297177108843[45] = 0;
   out_8553784297177108843[46] = 0;
   out_8553784297177108843[47] = 0;
   out_8553784297177108843[48] = 0;
   out_8553784297177108843[49] = 0;
   out_8553784297177108843[50] = 0;
   out_8553784297177108843[51] = 0;
   out_8553784297177108843[52] = 0;
   out_8553784297177108843[53] = 0;
   out_8553784297177108843[54] = 0;
   out_8553784297177108843[55] = 0;
   out_8553784297177108843[56] = 0;
   out_8553784297177108843[57] = 0;
   out_8553784297177108843[58] = 0;
   out_8553784297177108843[59] = 0;
   out_8553784297177108843[60] = 0;
   out_8553784297177108843[61] = 0;
   out_8553784297177108843[62] = 0;
   out_8553784297177108843[63] = 0;
   out_8553784297177108843[64] = 0;
   out_8553784297177108843[65] = 0;
   out_8553784297177108843[66] = -0.5*state[4];
   out_8553784297177108843[67] = -0.5*state[5];
   out_8553784297177108843[68] = -0.5*state[6];
   out_8553784297177108843[69] = 0;
   out_8553784297177108843[70] = 0;
   out_8553784297177108843[71] = 0;
   out_8553784297177108843[72] = 0;
   out_8553784297177108843[73] = 0;
   out_8553784297177108843[74] = 0;
   out_8553784297177108843[75] = 0;
   out_8553784297177108843[76] = 0;
   out_8553784297177108843[77] = 0;
   out_8553784297177108843[78] = 0;
   out_8553784297177108843[79] = 0;
   out_8553784297177108843[80] = 0;
   out_8553784297177108843[81] = 0;
   out_8553784297177108843[82] = 0;
   out_8553784297177108843[83] = 0;
   out_8553784297177108843[84] = 0;
   out_8553784297177108843[85] = 0;
   out_8553784297177108843[86] = 0;
   out_8553784297177108843[87] = 0.5*state[3];
   out_8553784297177108843[88] = 0.5*state[6];
   out_8553784297177108843[89] = -0.5*state[5];
   out_8553784297177108843[90] = 0;
   out_8553784297177108843[91] = 0;
   out_8553784297177108843[92] = 0;
   out_8553784297177108843[93] = 0;
   out_8553784297177108843[94] = 0;
   out_8553784297177108843[95] = 0;
   out_8553784297177108843[96] = 0;
   out_8553784297177108843[97] = 0;
   out_8553784297177108843[98] = 0;
   out_8553784297177108843[99] = 0;
   out_8553784297177108843[100] = 0;
   out_8553784297177108843[101] = 0;
   out_8553784297177108843[102] = 0;
   out_8553784297177108843[103] = 0;
   out_8553784297177108843[104] = 0;
   out_8553784297177108843[105] = 0;
   out_8553784297177108843[106] = 0;
   out_8553784297177108843[107] = 0;
   out_8553784297177108843[108] = -0.5*state[6];
   out_8553784297177108843[109] = 0.5*state[3];
   out_8553784297177108843[110] = 0.5*state[4];
   out_8553784297177108843[111] = 0;
   out_8553784297177108843[112] = 0;
   out_8553784297177108843[113] = 0;
   out_8553784297177108843[114] = 0;
   out_8553784297177108843[115] = 0;
   out_8553784297177108843[116] = 0;
   out_8553784297177108843[117] = 0;
   out_8553784297177108843[118] = 0;
   out_8553784297177108843[119] = 0;
   out_8553784297177108843[120] = 0;
   out_8553784297177108843[121] = 0;
   out_8553784297177108843[122] = 0;
   out_8553784297177108843[123] = 0;
   out_8553784297177108843[124] = 0;
   out_8553784297177108843[125] = 0;
   out_8553784297177108843[126] = 0;
   out_8553784297177108843[127] = 0;
   out_8553784297177108843[128] = 0;
   out_8553784297177108843[129] = 0.5*state[5];
   out_8553784297177108843[130] = -0.5*state[4];
   out_8553784297177108843[131] = 0.5*state[3];
   out_8553784297177108843[132] = 0;
   out_8553784297177108843[133] = 0;
   out_8553784297177108843[134] = 0;
   out_8553784297177108843[135] = 0;
   out_8553784297177108843[136] = 0;
   out_8553784297177108843[137] = 0;
   out_8553784297177108843[138] = 0;
   out_8553784297177108843[139] = 0;
   out_8553784297177108843[140] = 0;
   out_8553784297177108843[141] = 0;
   out_8553784297177108843[142] = 0;
   out_8553784297177108843[143] = 0;
   out_8553784297177108843[144] = 0;
   out_8553784297177108843[145] = 0;
   out_8553784297177108843[146] = 0;
   out_8553784297177108843[147] = 0;
   out_8553784297177108843[148] = 0;
   out_8553784297177108843[149] = 0;
   out_8553784297177108843[150] = 0;
   out_8553784297177108843[151] = 0;
   out_8553784297177108843[152] = 0;
   out_8553784297177108843[153] = 1.0;
   out_8553784297177108843[154] = 0;
   out_8553784297177108843[155] = 0;
   out_8553784297177108843[156] = 0;
   out_8553784297177108843[157] = 0;
   out_8553784297177108843[158] = 0;
   out_8553784297177108843[159] = 0;
   out_8553784297177108843[160] = 0;
   out_8553784297177108843[161] = 0;
   out_8553784297177108843[162] = 0;
   out_8553784297177108843[163] = 0;
   out_8553784297177108843[164] = 0;
   out_8553784297177108843[165] = 0;
   out_8553784297177108843[166] = 0;
   out_8553784297177108843[167] = 0;
   out_8553784297177108843[168] = 0;
   out_8553784297177108843[169] = 0;
   out_8553784297177108843[170] = 0;
   out_8553784297177108843[171] = 0;
   out_8553784297177108843[172] = 0;
   out_8553784297177108843[173] = 0;
   out_8553784297177108843[174] = 0;
   out_8553784297177108843[175] = 1.0;
   out_8553784297177108843[176] = 0;
   out_8553784297177108843[177] = 0;
   out_8553784297177108843[178] = 0;
   out_8553784297177108843[179] = 0;
   out_8553784297177108843[180] = 0;
   out_8553784297177108843[181] = 0;
   out_8553784297177108843[182] = 0;
   out_8553784297177108843[183] = 0;
   out_8553784297177108843[184] = 0;
   out_8553784297177108843[185] = 0;
   out_8553784297177108843[186] = 0;
   out_8553784297177108843[187] = 0;
   out_8553784297177108843[188] = 0;
   out_8553784297177108843[189] = 0;
   out_8553784297177108843[190] = 0;
   out_8553784297177108843[191] = 0;
   out_8553784297177108843[192] = 0;
   out_8553784297177108843[193] = 0;
   out_8553784297177108843[194] = 0;
   out_8553784297177108843[195] = 0;
   out_8553784297177108843[196] = 0;
   out_8553784297177108843[197] = 1.0;
   out_8553784297177108843[198] = 0;
   out_8553784297177108843[199] = 0;
   out_8553784297177108843[200] = 0;
   out_8553784297177108843[201] = 0;
   out_8553784297177108843[202] = 0;
   out_8553784297177108843[203] = 0;
   out_8553784297177108843[204] = 0;
   out_8553784297177108843[205] = 0;
   out_8553784297177108843[206] = 0;
   out_8553784297177108843[207] = 0;
   out_8553784297177108843[208] = 0;
   out_8553784297177108843[209] = 0;
   out_8553784297177108843[210] = 0;
   out_8553784297177108843[211] = 0;
   out_8553784297177108843[212] = 0;
   out_8553784297177108843[213] = 0;
   out_8553784297177108843[214] = 0;
   out_8553784297177108843[215] = 0;
   out_8553784297177108843[216] = 0;
   out_8553784297177108843[217] = 0;
   out_8553784297177108843[218] = 0;
   out_8553784297177108843[219] = 1.0;
   out_8553784297177108843[220] = 0;
   out_8553784297177108843[221] = 0;
   out_8553784297177108843[222] = 0;
   out_8553784297177108843[223] = 0;
   out_8553784297177108843[224] = 0;
   out_8553784297177108843[225] = 0;
   out_8553784297177108843[226] = 0;
   out_8553784297177108843[227] = 0;
   out_8553784297177108843[228] = 0;
   out_8553784297177108843[229] = 0;
   out_8553784297177108843[230] = 0;
   out_8553784297177108843[231] = 0;
   out_8553784297177108843[232] = 0;
   out_8553784297177108843[233] = 0;
   out_8553784297177108843[234] = 0;
   out_8553784297177108843[235] = 0;
   out_8553784297177108843[236] = 0;
   out_8553784297177108843[237] = 0;
   out_8553784297177108843[238] = 0;
   out_8553784297177108843[239] = 0;
   out_8553784297177108843[240] = 0;
   out_8553784297177108843[241] = 1.0;
   out_8553784297177108843[242] = 0;
   out_8553784297177108843[243] = 0;
   out_8553784297177108843[244] = 0;
   out_8553784297177108843[245] = 0;
   out_8553784297177108843[246] = 0;
   out_8553784297177108843[247] = 0;
   out_8553784297177108843[248] = 0;
   out_8553784297177108843[249] = 0;
   out_8553784297177108843[250] = 0;
   out_8553784297177108843[251] = 0;
   out_8553784297177108843[252] = 0;
   out_8553784297177108843[253] = 0;
   out_8553784297177108843[254] = 0;
   out_8553784297177108843[255] = 0;
   out_8553784297177108843[256] = 0;
   out_8553784297177108843[257] = 0;
   out_8553784297177108843[258] = 0;
   out_8553784297177108843[259] = 0;
   out_8553784297177108843[260] = 0;
   out_8553784297177108843[261] = 0;
   out_8553784297177108843[262] = 0;
   out_8553784297177108843[263] = 1.0;
   out_8553784297177108843[264] = 0;
   out_8553784297177108843[265] = 0;
   out_8553784297177108843[266] = 0;
   out_8553784297177108843[267] = 0;
   out_8553784297177108843[268] = 0;
   out_8553784297177108843[269] = 0;
   out_8553784297177108843[270] = 0;
   out_8553784297177108843[271] = 0;
   out_8553784297177108843[272] = 0;
   out_8553784297177108843[273] = 0;
   out_8553784297177108843[274] = 0;
   out_8553784297177108843[275] = 0;
   out_8553784297177108843[276] = 0;
   out_8553784297177108843[277] = 0;
   out_8553784297177108843[278] = 0;
   out_8553784297177108843[279] = 0;
   out_8553784297177108843[280] = 0;
   out_8553784297177108843[281] = 0;
   out_8553784297177108843[282] = 0;
   out_8553784297177108843[283] = 0;
   out_8553784297177108843[284] = 0;
   out_8553784297177108843[285] = 1.0;
   out_8553784297177108843[286] = 0;
   out_8553784297177108843[287] = 0;
   out_8553784297177108843[288] = 0;
   out_8553784297177108843[289] = 0;
   out_8553784297177108843[290] = 0;
   out_8553784297177108843[291] = 0;
   out_8553784297177108843[292] = 0;
   out_8553784297177108843[293] = 0;
   out_8553784297177108843[294] = 0;
   out_8553784297177108843[295] = 0;
   out_8553784297177108843[296] = 0;
   out_8553784297177108843[297] = 0;
   out_8553784297177108843[298] = 0;
   out_8553784297177108843[299] = 0;
   out_8553784297177108843[300] = 0;
   out_8553784297177108843[301] = 0;
   out_8553784297177108843[302] = 0;
   out_8553784297177108843[303] = 0;
   out_8553784297177108843[304] = 0;
   out_8553784297177108843[305] = 0;
   out_8553784297177108843[306] = 0;
   out_8553784297177108843[307] = 1.0;
   out_8553784297177108843[308] = 0;
   out_8553784297177108843[309] = 0;
   out_8553784297177108843[310] = 0;
   out_8553784297177108843[311] = 0;
   out_8553784297177108843[312] = 0;
   out_8553784297177108843[313] = 0;
   out_8553784297177108843[314] = 0;
   out_8553784297177108843[315] = 0;
   out_8553784297177108843[316] = 0;
   out_8553784297177108843[317] = 0;
   out_8553784297177108843[318] = 0;
   out_8553784297177108843[319] = 0;
   out_8553784297177108843[320] = 0;
   out_8553784297177108843[321] = 0;
   out_8553784297177108843[322] = 0;
   out_8553784297177108843[323] = 0;
   out_8553784297177108843[324] = 0;
   out_8553784297177108843[325] = 0;
   out_8553784297177108843[326] = 0;
   out_8553784297177108843[327] = 0;
   out_8553784297177108843[328] = 0;
   out_8553784297177108843[329] = 1.0;
   out_8553784297177108843[330] = 0;
   out_8553784297177108843[331] = 0;
   out_8553784297177108843[332] = 0;
   out_8553784297177108843[333] = 0;
   out_8553784297177108843[334] = 0;
   out_8553784297177108843[335] = 0;
   out_8553784297177108843[336] = 0;
   out_8553784297177108843[337] = 0;
   out_8553784297177108843[338] = 0;
   out_8553784297177108843[339] = 0;
   out_8553784297177108843[340] = 0;
   out_8553784297177108843[341] = 0;
   out_8553784297177108843[342] = 0;
   out_8553784297177108843[343] = 0;
   out_8553784297177108843[344] = 0;
   out_8553784297177108843[345] = 0;
   out_8553784297177108843[346] = 0;
   out_8553784297177108843[347] = 0;
   out_8553784297177108843[348] = 0;
   out_8553784297177108843[349] = 0;
   out_8553784297177108843[350] = 0;
   out_8553784297177108843[351] = 1.0;
   out_8553784297177108843[352] = 0;
   out_8553784297177108843[353] = 0;
   out_8553784297177108843[354] = 0;
   out_8553784297177108843[355] = 0;
   out_8553784297177108843[356] = 0;
   out_8553784297177108843[357] = 0;
   out_8553784297177108843[358] = 0;
   out_8553784297177108843[359] = 0;
   out_8553784297177108843[360] = 0;
   out_8553784297177108843[361] = 0;
   out_8553784297177108843[362] = 0;
   out_8553784297177108843[363] = 0;
   out_8553784297177108843[364] = 0;
   out_8553784297177108843[365] = 0;
   out_8553784297177108843[366] = 0;
   out_8553784297177108843[367] = 0;
   out_8553784297177108843[368] = 0;
   out_8553784297177108843[369] = 0;
   out_8553784297177108843[370] = 0;
   out_8553784297177108843[371] = 0;
   out_8553784297177108843[372] = 0;
   out_8553784297177108843[373] = 1.0;
   out_8553784297177108843[374] = 0;
   out_8553784297177108843[375] = 0;
   out_8553784297177108843[376] = 0;
   out_8553784297177108843[377] = 0;
   out_8553784297177108843[378] = 0;
   out_8553784297177108843[379] = 0;
   out_8553784297177108843[380] = 0;
   out_8553784297177108843[381] = 0;
   out_8553784297177108843[382] = 0;
   out_8553784297177108843[383] = 0;
   out_8553784297177108843[384] = 0;
   out_8553784297177108843[385] = 0;
   out_8553784297177108843[386] = 0;
   out_8553784297177108843[387] = 0;
   out_8553784297177108843[388] = 0;
   out_8553784297177108843[389] = 0;
   out_8553784297177108843[390] = 0;
   out_8553784297177108843[391] = 0;
   out_8553784297177108843[392] = 0;
   out_8553784297177108843[393] = 0;
   out_8553784297177108843[394] = 0;
   out_8553784297177108843[395] = 1.0;
   out_8553784297177108843[396] = 0;
   out_8553784297177108843[397] = 0;
   out_8553784297177108843[398] = 0;
   out_8553784297177108843[399] = 0;
   out_8553784297177108843[400] = 0;
   out_8553784297177108843[401] = 0;
   out_8553784297177108843[402] = 0;
   out_8553784297177108843[403] = 0;
   out_8553784297177108843[404] = 0;
   out_8553784297177108843[405] = 0;
   out_8553784297177108843[406] = 0;
   out_8553784297177108843[407] = 0;
   out_8553784297177108843[408] = 0;
   out_8553784297177108843[409] = 0;
   out_8553784297177108843[410] = 0;
   out_8553784297177108843[411] = 0;
   out_8553784297177108843[412] = 0;
   out_8553784297177108843[413] = 0;
   out_8553784297177108843[414] = 0;
   out_8553784297177108843[415] = 0;
   out_8553784297177108843[416] = 0;
   out_8553784297177108843[417] = 1.0;
   out_8553784297177108843[418] = 0;
   out_8553784297177108843[419] = 0;
   out_8553784297177108843[420] = 0;
   out_8553784297177108843[421] = 0;
   out_8553784297177108843[422] = 0;
   out_8553784297177108843[423] = 0;
   out_8553784297177108843[424] = 0;
   out_8553784297177108843[425] = 0;
   out_8553784297177108843[426] = 0;
   out_8553784297177108843[427] = 0;
   out_8553784297177108843[428] = 0;
   out_8553784297177108843[429] = 0;
   out_8553784297177108843[430] = 0;
   out_8553784297177108843[431] = 0;
   out_8553784297177108843[432] = 0;
   out_8553784297177108843[433] = 0;
   out_8553784297177108843[434] = 0;
   out_8553784297177108843[435] = 0;
   out_8553784297177108843[436] = 0;
   out_8553784297177108843[437] = 0;
   out_8553784297177108843[438] = 0;
   out_8553784297177108843[439] = 1.0;
   out_8553784297177108843[440] = 0;
   out_8553784297177108843[441] = 0;
   out_8553784297177108843[442] = 0;
   out_8553784297177108843[443] = 0;
   out_8553784297177108843[444] = 0;
   out_8553784297177108843[445] = 0;
   out_8553784297177108843[446] = 0;
   out_8553784297177108843[447] = 0;
   out_8553784297177108843[448] = 0;
   out_8553784297177108843[449] = 0;
   out_8553784297177108843[450] = 0;
   out_8553784297177108843[451] = 0;
   out_8553784297177108843[452] = 0;
   out_8553784297177108843[453] = 0;
   out_8553784297177108843[454] = 0;
   out_8553784297177108843[455] = 0;
   out_8553784297177108843[456] = 0;
   out_8553784297177108843[457] = 0;
   out_8553784297177108843[458] = 0;
   out_8553784297177108843[459] = 0;
   out_8553784297177108843[460] = 0;
   out_8553784297177108843[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_8550223565152907424) {
   out_8550223565152907424[0] = dt*state[7] + state[0];
   out_8550223565152907424[1] = dt*state[8] + state[1];
   out_8550223565152907424[2] = dt*state[9] + state[2];
   out_8550223565152907424[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_8550223565152907424[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_8550223565152907424[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_8550223565152907424[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_8550223565152907424[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_8550223565152907424[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_8550223565152907424[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_8550223565152907424[10] = state[10];
   out_8550223565152907424[11] = state[11];
   out_8550223565152907424[12] = state[12];
   out_8550223565152907424[13] = state[13];
   out_8550223565152907424[14] = state[14];
   out_8550223565152907424[15] = state[15];
   out_8550223565152907424[16] = state[16];
   out_8550223565152907424[17] = state[17];
   out_8550223565152907424[18] = state[18];
   out_8550223565152907424[19] = state[19];
   out_8550223565152907424[20] = state[20];
   out_8550223565152907424[21] = state[21];
}
void F_fun(double *state, double dt, double *out_2687924198656063120) {
   out_2687924198656063120[0] = 1;
   out_2687924198656063120[1] = 0;
   out_2687924198656063120[2] = 0;
   out_2687924198656063120[3] = 0;
   out_2687924198656063120[4] = 0;
   out_2687924198656063120[5] = 0;
   out_2687924198656063120[6] = dt;
   out_2687924198656063120[7] = 0;
   out_2687924198656063120[8] = 0;
   out_2687924198656063120[9] = 0;
   out_2687924198656063120[10] = 0;
   out_2687924198656063120[11] = 0;
   out_2687924198656063120[12] = 0;
   out_2687924198656063120[13] = 0;
   out_2687924198656063120[14] = 0;
   out_2687924198656063120[15] = 0;
   out_2687924198656063120[16] = 0;
   out_2687924198656063120[17] = 0;
   out_2687924198656063120[18] = 0;
   out_2687924198656063120[19] = 0;
   out_2687924198656063120[20] = 0;
   out_2687924198656063120[21] = 0;
   out_2687924198656063120[22] = 1;
   out_2687924198656063120[23] = 0;
   out_2687924198656063120[24] = 0;
   out_2687924198656063120[25] = 0;
   out_2687924198656063120[26] = 0;
   out_2687924198656063120[27] = 0;
   out_2687924198656063120[28] = dt;
   out_2687924198656063120[29] = 0;
   out_2687924198656063120[30] = 0;
   out_2687924198656063120[31] = 0;
   out_2687924198656063120[32] = 0;
   out_2687924198656063120[33] = 0;
   out_2687924198656063120[34] = 0;
   out_2687924198656063120[35] = 0;
   out_2687924198656063120[36] = 0;
   out_2687924198656063120[37] = 0;
   out_2687924198656063120[38] = 0;
   out_2687924198656063120[39] = 0;
   out_2687924198656063120[40] = 0;
   out_2687924198656063120[41] = 0;
   out_2687924198656063120[42] = 0;
   out_2687924198656063120[43] = 0;
   out_2687924198656063120[44] = 1;
   out_2687924198656063120[45] = 0;
   out_2687924198656063120[46] = 0;
   out_2687924198656063120[47] = 0;
   out_2687924198656063120[48] = 0;
   out_2687924198656063120[49] = 0;
   out_2687924198656063120[50] = dt;
   out_2687924198656063120[51] = 0;
   out_2687924198656063120[52] = 0;
   out_2687924198656063120[53] = 0;
   out_2687924198656063120[54] = 0;
   out_2687924198656063120[55] = 0;
   out_2687924198656063120[56] = 0;
   out_2687924198656063120[57] = 0;
   out_2687924198656063120[58] = 0;
   out_2687924198656063120[59] = 0;
   out_2687924198656063120[60] = 0;
   out_2687924198656063120[61] = 0;
   out_2687924198656063120[62] = 0;
   out_2687924198656063120[63] = 0;
   out_2687924198656063120[64] = 0;
   out_2687924198656063120[65] = 0;
   out_2687924198656063120[66] = 1;
   out_2687924198656063120[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2687924198656063120[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_2687924198656063120[69] = 0;
   out_2687924198656063120[70] = 0;
   out_2687924198656063120[71] = 0;
   out_2687924198656063120[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2687924198656063120[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2687924198656063120[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2687924198656063120[75] = 0;
   out_2687924198656063120[76] = 0;
   out_2687924198656063120[77] = 0;
   out_2687924198656063120[78] = 0;
   out_2687924198656063120[79] = 0;
   out_2687924198656063120[80] = 0;
   out_2687924198656063120[81] = 0;
   out_2687924198656063120[82] = 0;
   out_2687924198656063120[83] = 0;
   out_2687924198656063120[84] = 0;
   out_2687924198656063120[85] = 0;
   out_2687924198656063120[86] = 0;
   out_2687924198656063120[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2687924198656063120[88] = 1;
   out_2687924198656063120[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_2687924198656063120[90] = 0;
   out_2687924198656063120[91] = 0;
   out_2687924198656063120[92] = 0;
   out_2687924198656063120[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2687924198656063120[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2687924198656063120[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2687924198656063120[96] = 0;
   out_2687924198656063120[97] = 0;
   out_2687924198656063120[98] = 0;
   out_2687924198656063120[99] = 0;
   out_2687924198656063120[100] = 0;
   out_2687924198656063120[101] = 0;
   out_2687924198656063120[102] = 0;
   out_2687924198656063120[103] = 0;
   out_2687924198656063120[104] = 0;
   out_2687924198656063120[105] = 0;
   out_2687924198656063120[106] = 0;
   out_2687924198656063120[107] = 0;
   out_2687924198656063120[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_2687924198656063120[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_2687924198656063120[110] = 1;
   out_2687924198656063120[111] = 0;
   out_2687924198656063120[112] = 0;
   out_2687924198656063120[113] = 0;
   out_2687924198656063120[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2687924198656063120[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2687924198656063120[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2687924198656063120[117] = 0;
   out_2687924198656063120[118] = 0;
   out_2687924198656063120[119] = 0;
   out_2687924198656063120[120] = 0;
   out_2687924198656063120[121] = 0;
   out_2687924198656063120[122] = 0;
   out_2687924198656063120[123] = 0;
   out_2687924198656063120[124] = 0;
   out_2687924198656063120[125] = 0;
   out_2687924198656063120[126] = 0;
   out_2687924198656063120[127] = 0;
   out_2687924198656063120[128] = 0;
   out_2687924198656063120[129] = 0;
   out_2687924198656063120[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2687924198656063120[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_2687924198656063120[132] = 1;
   out_2687924198656063120[133] = 0;
   out_2687924198656063120[134] = 0;
   out_2687924198656063120[135] = 0;
   out_2687924198656063120[136] = 0;
   out_2687924198656063120[137] = 0;
   out_2687924198656063120[138] = 0;
   out_2687924198656063120[139] = 0;
   out_2687924198656063120[140] = 0;
   out_2687924198656063120[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2687924198656063120[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2687924198656063120[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2687924198656063120[144] = 0;
   out_2687924198656063120[145] = 0;
   out_2687924198656063120[146] = 0;
   out_2687924198656063120[147] = 0;
   out_2687924198656063120[148] = 0;
   out_2687924198656063120[149] = 0;
   out_2687924198656063120[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2687924198656063120[151] = 0;
   out_2687924198656063120[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_2687924198656063120[153] = 0;
   out_2687924198656063120[154] = 1;
   out_2687924198656063120[155] = 0;
   out_2687924198656063120[156] = 0;
   out_2687924198656063120[157] = 0;
   out_2687924198656063120[158] = 0;
   out_2687924198656063120[159] = 0;
   out_2687924198656063120[160] = 0;
   out_2687924198656063120[161] = 0;
   out_2687924198656063120[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2687924198656063120[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2687924198656063120[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2687924198656063120[165] = 0;
   out_2687924198656063120[166] = 0;
   out_2687924198656063120[167] = 0;
   out_2687924198656063120[168] = 0;
   out_2687924198656063120[169] = 0;
   out_2687924198656063120[170] = 0;
   out_2687924198656063120[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_2687924198656063120[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_2687924198656063120[173] = 0;
   out_2687924198656063120[174] = 0;
   out_2687924198656063120[175] = 0;
   out_2687924198656063120[176] = 1;
   out_2687924198656063120[177] = 0;
   out_2687924198656063120[178] = 0;
   out_2687924198656063120[179] = 0;
   out_2687924198656063120[180] = 0;
   out_2687924198656063120[181] = 0;
   out_2687924198656063120[182] = 0;
   out_2687924198656063120[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2687924198656063120[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2687924198656063120[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2687924198656063120[186] = 0;
   out_2687924198656063120[187] = 0;
   out_2687924198656063120[188] = 0;
   out_2687924198656063120[189] = 0;
   out_2687924198656063120[190] = 0;
   out_2687924198656063120[191] = 0;
   out_2687924198656063120[192] = 0;
   out_2687924198656063120[193] = 0;
   out_2687924198656063120[194] = 0;
   out_2687924198656063120[195] = 0;
   out_2687924198656063120[196] = 0;
   out_2687924198656063120[197] = 0;
   out_2687924198656063120[198] = 1;
   out_2687924198656063120[199] = 0;
   out_2687924198656063120[200] = 0;
   out_2687924198656063120[201] = 0;
   out_2687924198656063120[202] = 0;
   out_2687924198656063120[203] = 0;
   out_2687924198656063120[204] = 0;
   out_2687924198656063120[205] = 0;
   out_2687924198656063120[206] = 0;
   out_2687924198656063120[207] = 0;
   out_2687924198656063120[208] = 0;
   out_2687924198656063120[209] = 0;
   out_2687924198656063120[210] = 0;
   out_2687924198656063120[211] = 0;
   out_2687924198656063120[212] = 0;
   out_2687924198656063120[213] = 0;
   out_2687924198656063120[214] = 0;
   out_2687924198656063120[215] = 0;
   out_2687924198656063120[216] = 0;
   out_2687924198656063120[217] = 0;
   out_2687924198656063120[218] = 0;
   out_2687924198656063120[219] = 0;
   out_2687924198656063120[220] = 1;
   out_2687924198656063120[221] = 0;
   out_2687924198656063120[222] = 0;
   out_2687924198656063120[223] = 0;
   out_2687924198656063120[224] = 0;
   out_2687924198656063120[225] = 0;
   out_2687924198656063120[226] = 0;
   out_2687924198656063120[227] = 0;
   out_2687924198656063120[228] = 0;
   out_2687924198656063120[229] = 0;
   out_2687924198656063120[230] = 0;
   out_2687924198656063120[231] = 0;
   out_2687924198656063120[232] = 0;
   out_2687924198656063120[233] = 0;
   out_2687924198656063120[234] = 0;
   out_2687924198656063120[235] = 0;
   out_2687924198656063120[236] = 0;
   out_2687924198656063120[237] = 0;
   out_2687924198656063120[238] = 0;
   out_2687924198656063120[239] = 0;
   out_2687924198656063120[240] = 0;
   out_2687924198656063120[241] = 0;
   out_2687924198656063120[242] = 1;
   out_2687924198656063120[243] = 0;
   out_2687924198656063120[244] = 0;
   out_2687924198656063120[245] = 0;
   out_2687924198656063120[246] = 0;
   out_2687924198656063120[247] = 0;
   out_2687924198656063120[248] = 0;
   out_2687924198656063120[249] = 0;
   out_2687924198656063120[250] = 0;
   out_2687924198656063120[251] = 0;
   out_2687924198656063120[252] = 0;
   out_2687924198656063120[253] = 0;
   out_2687924198656063120[254] = 0;
   out_2687924198656063120[255] = 0;
   out_2687924198656063120[256] = 0;
   out_2687924198656063120[257] = 0;
   out_2687924198656063120[258] = 0;
   out_2687924198656063120[259] = 0;
   out_2687924198656063120[260] = 0;
   out_2687924198656063120[261] = 0;
   out_2687924198656063120[262] = 0;
   out_2687924198656063120[263] = 0;
   out_2687924198656063120[264] = 1;
   out_2687924198656063120[265] = 0;
   out_2687924198656063120[266] = 0;
   out_2687924198656063120[267] = 0;
   out_2687924198656063120[268] = 0;
   out_2687924198656063120[269] = 0;
   out_2687924198656063120[270] = 0;
   out_2687924198656063120[271] = 0;
   out_2687924198656063120[272] = 0;
   out_2687924198656063120[273] = 0;
   out_2687924198656063120[274] = 0;
   out_2687924198656063120[275] = 0;
   out_2687924198656063120[276] = 0;
   out_2687924198656063120[277] = 0;
   out_2687924198656063120[278] = 0;
   out_2687924198656063120[279] = 0;
   out_2687924198656063120[280] = 0;
   out_2687924198656063120[281] = 0;
   out_2687924198656063120[282] = 0;
   out_2687924198656063120[283] = 0;
   out_2687924198656063120[284] = 0;
   out_2687924198656063120[285] = 0;
   out_2687924198656063120[286] = 1;
   out_2687924198656063120[287] = 0;
   out_2687924198656063120[288] = 0;
   out_2687924198656063120[289] = 0;
   out_2687924198656063120[290] = 0;
   out_2687924198656063120[291] = 0;
   out_2687924198656063120[292] = 0;
   out_2687924198656063120[293] = 0;
   out_2687924198656063120[294] = 0;
   out_2687924198656063120[295] = 0;
   out_2687924198656063120[296] = 0;
   out_2687924198656063120[297] = 0;
   out_2687924198656063120[298] = 0;
   out_2687924198656063120[299] = 0;
   out_2687924198656063120[300] = 0;
   out_2687924198656063120[301] = 0;
   out_2687924198656063120[302] = 0;
   out_2687924198656063120[303] = 0;
   out_2687924198656063120[304] = 0;
   out_2687924198656063120[305] = 0;
   out_2687924198656063120[306] = 0;
   out_2687924198656063120[307] = 0;
   out_2687924198656063120[308] = 1;
   out_2687924198656063120[309] = 0;
   out_2687924198656063120[310] = 0;
   out_2687924198656063120[311] = 0;
   out_2687924198656063120[312] = 0;
   out_2687924198656063120[313] = 0;
   out_2687924198656063120[314] = 0;
   out_2687924198656063120[315] = 0;
   out_2687924198656063120[316] = 0;
   out_2687924198656063120[317] = 0;
   out_2687924198656063120[318] = 0;
   out_2687924198656063120[319] = 0;
   out_2687924198656063120[320] = 0;
   out_2687924198656063120[321] = 0;
   out_2687924198656063120[322] = 0;
   out_2687924198656063120[323] = 0;
   out_2687924198656063120[324] = 0;
   out_2687924198656063120[325] = 0;
   out_2687924198656063120[326] = 0;
   out_2687924198656063120[327] = 0;
   out_2687924198656063120[328] = 0;
   out_2687924198656063120[329] = 0;
   out_2687924198656063120[330] = 1;
   out_2687924198656063120[331] = 0;
   out_2687924198656063120[332] = 0;
   out_2687924198656063120[333] = 0;
   out_2687924198656063120[334] = 0;
   out_2687924198656063120[335] = 0;
   out_2687924198656063120[336] = 0;
   out_2687924198656063120[337] = 0;
   out_2687924198656063120[338] = 0;
   out_2687924198656063120[339] = 0;
   out_2687924198656063120[340] = 0;
   out_2687924198656063120[341] = 0;
   out_2687924198656063120[342] = 0;
   out_2687924198656063120[343] = 0;
   out_2687924198656063120[344] = 0;
   out_2687924198656063120[345] = 0;
   out_2687924198656063120[346] = 0;
   out_2687924198656063120[347] = 0;
   out_2687924198656063120[348] = 0;
   out_2687924198656063120[349] = 0;
   out_2687924198656063120[350] = 0;
   out_2687924198656063120[351] = 0;
   out_2687924198656063120[352] = 1;
   out_2687924198656063120[353] = 0;
   out_2687924198656063120[354] = 0;
   out_2687924198656063120[355] = 0;
   out_2687924198656063120[356] = 0;
   out_2687924198656063120[357] = 0;
   out_2687924198656063120[358] = 0;
   out_2687924198656063120[359] = 0;
   out_2687924198656063120[360] = 0;
   out_2687924198656063120[361] = 0;
   out_2687924198656063120[362] = 0;
   out_2687924198656063120[363] = 0;
   out_2687924198656063120[364] = 0;
   out_2687924198656063120[365] = 0;
   out_2687924198656063120[366] = 0;
   out_2687924198656063120[367] = 0;
   out_2687924198656063120[368] = 0;
   out_2687924198656063120[369] = 0;
   out_2687924198656063120[370] = 0;
   out_2687924198656063120[371] = 0;
   out_2687924198656063120[372] = 0;
   out_2687924198656063120[373] = 0;
   out_2687924198656063120[374] = 1;
   out_2687924198656063120[375] = 0;
   out_2687924198656063120[376] = 0;
   out_2687924198656063120[377] = 0;
   out_2687924198656063120[378] = 0;
   out_2687924198656063120[379] = 0;
   out_2687924198656063120[380] = 0;
   out_2687924198656063120[381] = 0;
   out_2687924198656063120[382] = 0;
   out_2687924198656063120[383] = 0;
   out_2687924198656063120[384] = 0;
   out_2687924198656063120[385] = 0;
   out_2687924198656063120[386] = 0;
   out_2687924198656063120[387] = 0;
   out_2687924198656063120[388] = 0;
   out_2687924198656063120[389] = 0;
   out_2687924198656063120[390] = 0;
   out_2687924198656063120[391] = 0;
   out_2687924198656063120[392] = 0;
   out_2687924198656063120[393] = 0;
   out_2687924198656063120[394] = 0;
   out_2687924198656063120[395] = 0;
   out_2687924198656063120[396] = 1;
   out_2687924198656063120[397] = 0;
   out_2687924198656063120[398] = 0;
   out_2687924198656063120[399] = 0;
   out_2687924198656063120[400] = 0;
   out_2687924198656063120[401] = 0;
   out_2687924198656063120[402] = 0;
   out_2687924198656063120[403] = 0;
   out_2687924198656063120[404] = 0;
   out_2687924198656063120[405] = 0;
   out_2687924198656063120[406] = 0;
   out_2687924198656063120[407] = 0;
   out_2687924198656063120[408] = 0;
   out_2687924198656063120[409] = 0;
   out_2687924198656063120[410] = 0;
   out_2687924198656063120[411] = 0;
   out_2687924198656063120[412] = 0;
   out_2687924198656063120[413] = 0;
   out_2687924198656063120[414] = 0;
   out_2687924198656063120[415] = 0;
   out_2687924198656063120[416] = 0;
   out_2687924198656063120[417] = 0;
   out_2687924198656063120[418] = 1;
   out_2687924198656063120[419] = 0;
   out_2687924198656063120[420] = 0;
   out_2687924198656063120[421] = 0;
   out_2687924198656063120[422] = 0;
   out_2687924198656063120[423] = 0;
   out_2687924198656063120[424] = 0;
   out_2687924198656063120[425] = 0;
   out_2687924198656063120[426] = 0;
   out_2687924198656063120[427] = 0;
   out_2687924198656063120[428] = 0;
   out_2687924198656063120[429] = 0;
   out_2687924198656063120[430] = 0;
   out_2687924198656063120[431] = 0;
   out_2687924198656063120[432] = 0;
   out_2687924198656063120[433] = 0;
   out_2687924198656063120[434] = 0;
   out_2687924198656063120[435] = 0;
   out_2687924198656063120[436] = 0;
   out_2687924198656063120[437] = 0;
   out_2687924198656063120[438] = 0;
   out_2687924198656063120[439] = 0;
   out_2687924198656063120[440] = 1;
}
void h_4(double *state, double *unused, double *out_7204517438101592670) {
   out_7204517438101592670[0] = state[10] + state[13];
   out_7204517438101592670[1] = state[11] + state[14];
   out_7204517438101592670[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_7325098029227874372) {
   out_7325098029227874372[0] = 0;
   out_7325098029227874372[1] = 0;
   out_7325098029227874372[2] = 0;
   out_7325098029227874372[3] = 0;
   out_7325098029227874372[4] = 0;
   out_7325098029227874372[5] = 0;
   out_7325098029227874372[6] = 0;
   out_7325098029227874372[7] = 0;
   out_7325098029227874372[8] = 0;
   out_7325098029227874372[9] = 0;
   out_7325098029227874372[10] = 1;
   out_7325098029227874372[11] = 0;
   out_7325098029227874372[12] = 0;
   out_7325098029227874372[13] = 1;
   out_7325098029227874372[14] = 0;
   out_7325098029227874372[15] = 0;
   out_7325098029227874372[16] = 0;
   out_7325098029227874372[17] = 0;
   out_7325098029227874372[18] = 0;
   out_7325098029227874372[19] = 0;
   out_7325098029227874372[20] = 0;
   out_7325098029227874372[21] = 0;
   out_7325098029227874372[22] = 0;
   out_7325098029227874372[23] = 0;
   out_7325098029227874372[24] = 0;
   out_7325098029227874372[25] = 0;
   out_7325098029227874372[26] = 0;
   out_7325098029227874372[27] = 0;
   out_7325098029227874372[28] = 0;
   out_7325098029227874372[29] = 0;
   out_7325098029227874372[30] = 0;
   out_7325098029227874372[31] = 0;
   out_7325098029227874372[32] = 0;
   out_7325098029227874372[33] = 1;
   out_7325098029227874372[34] = 0;
   out_7325098029227874372[35] = 0;
   out_7325098029227874372[36] = 1;
   out_7325098029227874372[37] = 0;
   out_7325098029227874372[38] = 0;
   out_7325098029227874372[39] = 0;
   out_7325098029227874372[40] = 0;
   out_7325098029227874372[41] = 0;
   out_7325098029227874372[42] = 0;
   out_7325098029227874372[43] = 0;
   out_7325098029227874372[44] = 0;
   out_7325098029227874372[45] = 0;
   out_7325098029227874372[46] = 0;
   out_7325098029227874372[47] = 0;
   out_7325098029227874372[48] = 0;
   out_7325098029227874372[49] = 0;
   out_7325098029227874372[50] = 0;
   out_7325098029227874372[51] = 0;
   out_7325098029227874372[52] = 0;
   out_7325098029227874372[53] = 0;
   out_7325098029227874372[54] = 0;
   out_7325098029227874372[55] = 0;
   out_7325098029227874372[56] = 1;
   out_7325098029227874372[57] = 0;
   out_7325098029227874372[58] = 0;
   out_7325098029227874372[59] = 1;
   out_7325098029227874372[60] = 0;
   out_7325098029227874372[61] = 0;
   out_7325098029227874372[62] = 0;
   out_7325098029227874372[63] = 0;
   out_7325098029227874372[64] = 0;
   out_7325098029227874372[65] = 0;
}
void h_9(double *state, double *unused, double *out_9147253032187164228) {
   out_9147253032187164228[0] = state[10];
   out_9147253032187164228[1] = state[11];
   out_9147253032187164228[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7566287675857465017) {
   out_7566287675857465017[0] = 0;
   out_7566287675857465017[1] = 0;
   out_7566287675857465017[2] = 0;
   out_7566287675857465017[3] = 0;
   out_7566287675857465017[4] = 0;
   out_7566287675857465017[5] = 0;
   out_7566287675857465017[6] = 0;
   out_7566287675857465017[7] = 0;
   out_7566287675857465017[8] = 0;
   out_7566287675857465017[9] = 0;
   out_7566287675857465017[10] = 1;
   out_7566287675857465017[11] = 0;
   out_7566287675857465017[12] = 0;
   out_7566287675857465017[13] = 0;
   out_7566287675857465017[14] = 0;
   out_7566287675857465017[15] = 0;
   out_7566287675857465017[16] = 0;
   out_7566287675857465017[17] = 0;
   out_7566287675857465017[18] = 0;
   out_7566287675857465017[19] = 0;
   out_7566287675857465017[20] = 0;
   out_7566287675857465017[21] = 0;
   out_7566287675857465017[22] = 0;
   out_7566287675857465017[23] = 0;
   out_7566287675857465017[24] = 0;
   out_7566287675857465017[25] = 0;
   out_7566287675857465017[26] = 0;
   out_7566287675857465017[27] = 0;
   out_7566287675857465017[28] = 0;
   out_7566287675857465017[29] = 0;
   out_7566287675857465017[30] = 0;
   out_7566287675857465017[31] = 0;
   out_7566287675857465017[32] = 0;
   out_7566287675857465017[33] = 1;
   out_7566287675857465017[34] = 0;
   out_7566287675857465017[35] = 0;
   out_7566287675857465017[36] = 0;
   out_7566287675857465017[37] = 0;
   out_7566287675857465017[38] = 0;
   out_7566287675857465017[39] = 0;
   out_7566287675857465017[40] = 0;
   out_7566287675857465017[41] = 0;
   out_7566287675857465017[42] = 0;
   out_7566287675857465017[43] = 0;
   out_7566287675857465017[44] = 0;
   out_7566287675857465017[45] = 0;
   out_7566287675857465017[46] = 0;
   out_7566287675857465017[47] = 0;
   out_7566287675857465017[48] = 0;
   out_7566287675857465017[49] = 0;
   out_7566287675857465017[50] = 0;
   out_7566287675857465017[51] = 0;
   out_7566287675857465017[52] = 0;
   out_7566287675857465017[53] = 0;
   out_7566287675857465017[54] = 0;
   out_7566287675857465017[55] = 0;
   out_7566287675857465017[56] = 1;
   out_7566287675857465017[57] = 0;
   out_7566287675857465017[58] = 0;
   out_7566287675857465017[59] = 0;
   out_7566287675857465017[60] = 0;
   out_7566287675857465017[61] = 0;
   out_7566287675857465017[62] = 0;
   out_7566287675857465017[63] = 0;
   out_7566287675857465017[64] = 0;
   out_7566287675857465017[65] = 0;
}
void h_10(double *state, double *unused, double *out_5220684388615811881) {
   out_5220684388615811881[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_5220684388615811881[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_5220684388615811881[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_2284770634911041421) {
   out_2284770634911041421[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2284770634911041421[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2284770634911041421[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_2284770634911041421[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2284770634911041421[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2284770634911041421[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2284770634911041421[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2284770634911041421[7] = 0;
   out_2284770634911041421[8] = 0;
   out_2284770634911041421[9] = 0;
   out_2284770634911041421[10] = 0;
   out_2284770634911041421[11] = 0;
   out_2284770634911041421[12] = 0;
   out_2284770634911041421[13] = 0;
   out_2284770634911041421[14] = 0;
   out_2284770634911041421[15] = 0;
   out_2284770634911041421[16] = 1;
   out_2284770634911041421[17] = 0;
   out_2284770634911041421[18] = 0;
   out_2284770634911041421[19] = 1;
   out_2284770634911041421[20] = 0;
   out_2284770634911041421[21] = 0;
   out_2284770634911041421[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2284770634911041421[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2284770634911041421[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_2284770634911041421[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2284770634911041421[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2284770634911041421[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2284770634911041421[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2284770634911041421[29] = 0;
   out_2284770634911041421[30] = 0;
   out_2284770634911041421[31] = 0;
   out_2284770634911041421[32] = 0;
   out_2284770634911041421[33] = 0;
   out_2284770634911041421[34] = 0;
   out_2284770634911041421[35] = 0;
   out_2284770634911041421[36] = 0;
   out_2284770634911041421[37] = 0;
   out_2284770634911041421[38] = 0;
   out_2284770634911041421[39] = 1;
   out_2284770634911041421[40] = 0;
   out_2284770634911041421[41] = 0;
   out_2284770634911041421[42] = 1;
   out_2284770634911041421[43] = 0;
   out_2284770634911041421[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_2284770634911041421[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_2284770634911041421[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2284770634911041421[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2284770634911041421[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2284770634911041421[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2284770634911041421[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2284770634911041421[51] = 0;
   out_2284770634911041421[52] = 0;
   out_2284770634911041421[53] = 0;
   out_2284770634911041421[54] = 0;
   out_2284770634911041421[55] = 0;
   out_2284770634911041421[56] = 0;
   out_2284770634911041421[57] = 0;
   out_2284770634911041421[58] = 0;
   out_2284770634911041421[59] = 0;
   out_2284770634911041421[60] = 0;
   out_2284770634911041421[61] = 0;
   out_2284770634911041421[62] = 1;
   out_2284770634911041421[63] = 0;
   out_2284770634911041421[64] = 0;
   out_2284770634911041421[65] = 1;
}
void h_12(double *state, double *unused, double *out_1549710670992380127) {
   out_1549710670992380127[0] = state[0];
   out_1549710670992380127[1] = state[1];
   out_1549710670992380127[2] = state[2];
}
void H_12(double *state, double *unused, double *out_6102189636449715449) {
   out_6102189636449715449[0] = 1;
   out_6102189636449715449[1] = 0;
   out_6102189636449715449[2] = 0;
   out_6102189636449715449[3] = 0;
   out_6102189636449715449[4] = 0;
   out_6102189636449715449[5] = 0;
   out_6102189636449715449[6] = 0;
   out_6102189636449715449[7] = 0;
   out_6102189636449715449[8] = 0;
   out_6102189636449715449[9] = 0;
   out_6102189636449715449[10] = 0;
   out_6102189636449715449[11] = 0;
   out_6102189636449715449[12] = 0;
   out_6102189636449715449[13] = 0;
   out_6102189636449715449[14] = 0;
   out_6102189636449715449[15] = 0;
   out_6102189636449715449[16] = 0;
   out_6102189636449715449[17] = 0;
   out_6102189636449715449[18] = 0;
   out_6102189636449715449[19] = 0;
   out_6102189636449715449[20] = 0;
   out_6102189636449715449[21] = 0;
   out_6102189636449715449[22] = 0;
   out_6102189636449715449[23] = 1;
   out_6102189636449715449[24] = 0;
   out_6102189636449715449[25] = 0;
   out_6102189636449715449[26] = 0;
   out_6102189636449715449[27] = 0;
   out_6102189636449715449[28] = 0;
   out_6102189636449715449[29] = 0;
   out_6102189636449715449[30] = 0;
   out_6102189636449715449[31] = 0;
   out_6102189636449715449[32] = 0;
   out_6102189636449715449[33] = 0;
   out_6102189636449715449[34] = 0;
   out_6102189636449715449[35] = 0;
   out_6102189636449715449[36] = 0;
   out_6102189636449715449[37] = 0;
   out_6102189636449715449[38] = 0;
   out_6102189636449715449[39] = 0;
   out_6102189636449715449[40] = 0;
   out_6102189636449715449[41] = 0;
   out_6102189636449715449[42] = 0;
   out_6102189636449715449[43] = 0;
   out_6102189636449715449[44] = 0;
   out_6102189636449715449[45] = 0;
   out_6102189636449715449[46] = 1;
   out_6102189636449715449[47] = 0;
   out_6102189636449715449[48] = 0;
   out_6102189636449715449[49] = 0;
   out_6102189636449715449[50] = 0;
   out_6102189636449715449[51] = 0;
   out_6102189636449715449[52] = 0;
   out_6102189636449715449[53] = 0;
   out_6102189636449715449[54] = 0;
   out_6102189636449715449[55] = 0;
   out_6102189636449715449[56] = 0;
   out_6102189636449715449[57] = 0;
   out_6102189636449715449[58] = 0;
   out_6102189636449715449[59] = 0;
   out_6102189636449715449[60] = 0;
   out_6102189636449715449[61] = 0;
   out_6102189636449715449[62] = 0;
   out_6102189636449715449[63] = 0;
   out_6102189636449715449[64] = 0;
   out_6102189636449715449[65] = 0;
}
void h_31(double *state, double *unused, double *out_4733520265523424407) {
   out_4733520265523424407[0] = state[7];
   out_4733520265523424407[1] = state[8];
   out_4733520265523424407[2] = state[9];
}
void H_31(double *state, double *unused, double *out_7754983987109069868) {
   out_7754983987109069868[0] = 0;
   out_7754983987109069868[1] = 0;
   out_7754983987109069868[2] = 0;
   out_7754983987109069868[3] = 0;
   out_7754983987109069868[4] = 0;
   out_7754983987109069868[5] = 0;
   out_7754983987109069868[6] = 0;
   out_7754983987109069868[7] = 1;
   out_7754983987109069868[8] = 0;
   out_7754983987109069868[9] = 0;
   out_7754983987109069868[10] = 0;
   out_7754983987109069868[11] = 0;
   out_7754983987109069868[12] = 0;
   out_7754983987109069868[13] = 0;
   out_7754983987109069868[14] = 0;
   out_7754983987109069868[15] = 0;
   out_7754983987109069868[16] = 0;
   out_7754983987109069868[17] = 0;
   out_7754983987109069868[18] = 0;
   out_7754983987109069868[19] = 0;
   out_7754983987109069868[20] = 0;
   out_7754983987109069868[21] = 0;
   out_7754983987109069868[22] = 0;
   out_7754983987109069868[23] = 0;
   out_7754983987109069868[24] = 0;
   out_7754983987109069868[25] = 0;
   out_7754983987109069868[26] = 0;
   out_7754983987109069868[27] = 0;
   out_7754983987109069868[28] = 0;
   out_7754983987109069868[29] = 0;
   out_7754983987109069868[30] = 1;
   out_7754983987109069868[31] = 0;
   out_7754983987109069868[32] = 0;
   out_7754983987109069868[33] = 0;
   out_7754983987109069868[34] = 0;
   out_7754983987109069868[35] = 0;
   out_7754983987109069868[36] = 0;
   out_7754983987109069868[37] = 0;
   out_7754983987109069868[38] = 0;
   out_7754983987109069868[39] = 0;
   out_7754983987109069868[40] = 0;
   out_7754983987109069868[41] = 0;
   out_7754983987109069868[42] = 0;
   out_7754983987109069868[43] = 0;
   out_7754983987109069868[44] = 0;
   out_7754983987109069868[45] = 0;
   out_7754983987109069868[46] = 0;
   out_7754983987109069868[47] = 0;
   out_7754983987109069868[48] = 0;
   out_7754983987109069868[49] = 0;
   out_7754983987109069868[50] = 0;
   out_7754983987109069868[51] = 0;
   out_7754983987109069868[52] = 0;
   out_7754983987109069868[53] = 1;
   out_7754983987109069868[54] = 0;
   out_7754983987109069868[55] = 0;
   out_7754983987109069868[56] = 0;
   out_7754983987109069868[57] = 0;
   out_7754983987109069868[58] = 0;
   out_7754983987109069868[59] = 0;
   out_7754983987109069868[60] = 0;
   out_7754983987109069868[61] = 0;
   out_7754983987109069868[62] = 0;
   out_7754983987109069868[63] = 0;
   out_7754983987109069868[64] = 0;
   out_7754983987109069868[65] = 0;
}
void h_32(double *state, double *unused, double *out_1456985045138936089) {
   out_1456985045138936089[0] = state[3];
   out_1456985045138936089[1] = state[4];
   out_1456985045138936089[2] = state[5];
   out_1456985045138936089[3] = state[6];
}
void H_32(double *state, double *unused, double *out_1953679614901457310) {
   out_1953679614901457310[0] = 0;
   out_1953679614901457310[1] = 0;
   out_1953679614901457310[2] = 0;
   out_1953679614901457310[3] = 1;
   out_1953679614901457310[4] = 0;
   out_1953679614901457310[5] = 0;
   out_1953679614901457310[6] = 0;
   out_1953679614901457310[7] = 0;
   out_1953679614901457310[8] = 0;
   out_1953679614901457310[9] = 0;
   out_1953679614901457310[10] = 0;
   out_1953679614901457310[11] = 0;
   out_1953679614901457310[12] = 0;
   out_1953679614901457310[13] = 0;
   out_1953679614901457310[14] = 0;
   out_1953679614901457310[15] = 0;
   out_1953679614901457310[16] = 0;
   out_1953679614901457310[17] = 0;
   out_1953679614901457310[18] = 0;
   out_1953679614901457310[19] = 0;
   out_1953679614901457310[20] = 0;
   out_1953679614901457310[21] = 0;
   out_1953679614901457310[22] = 0;
   out_1953679614901457310[23] = 0;
   out_1953679614901457310[24] = 0;
   out_1953679614901457310[25] = 0;
   out_1953679614901457310[26] = 1;
   out_1953679614901457310[27] = 0;
   out_1953679614901457310[28] = 0;
   out_1953679614901457310[29] = 0;
   out_1953679614901457310[30] = 0;
   out_1953679614901457310[31] = 0;
   out_1953679614901457310[32] = 0;
   out_1953679614901457310[33] = 0;
   out_1953679614901457310[34] = 0;
   out_1953679614901457310[35] = 0;
   out_1953679614901457310[36] = 0;
   out_1953679614901457310[37] = 0;
   out_1953679614901457310[38] = 0;
   out_1953679614901457310[39] = 0;
   out_1953679614901457310[40] = 0;
   out_1953679614901457310[41] = 0;
   out_1953679614901457310[42] = 0;
   out_1953679614901457310[43] = 0;
   out_1953679614901457310[44] = 0;
   out_1953679614901457310[45] = 0;
   out_1953679614901457310[46] = 0;
   out_1953679614901457310[47] = 0;
   out_1953679614901457310[48] = 0;
   out_1953679614901457310[49] = 1;
   out_1953679614901457310[50] = 0;
   out_1953679614901457310[51] = 0;
   out_1953679614901457310[52] = 0;
   out_1953679614901457310[53] = 0;
   out_1953679614901457310[54] = 0;
   out_1953679614901457310[55] = 0;
   out_1953679614901457310[56] = 0;
   out_1953679614901457310[57] = 0;
   out_1953679614901457310[58] = 0;
   out_1953679614901457310[59] = 0;
   out_1953679614901457310[60] = 0;
   out_1953679614901457310[61] = 0;
   out_1953679614901457310[62] = 0;
   out_1953679614901457310[63] = 0;
   out_1953679614901457310[64] = 0;
   out_1953679614901457310[65] = 0;
   out_1953679614901457310[66] = 0;
   out_1953679614901457310[67] = 0;
   out_1953679614901457310[68] = 0;
   out_1953679614901457310[69] = 0;
   out_1953679614901457310[70] = 0;
   out_1953679614901457310[71] = 0;
   out_1953679614901457310[72] = 1;
   out_1953679614901457310[73] = 0;
   out_1953679614901457310[74] = 0;
   out_1953679614901457310[75] = 0;
   out_1953679614901457310[76] = 0;
   out_1953679614901457310[77] = 0;
   out_1953679614901457310[78] = 0;
   out_1953679614901457310[79] = 0;
   out_1953679614901457310[80] = 0;
   out_1953679614901457310[81] = 0;
   out_1953679614901457310[82] = 0;
   out_1953679614901457310[83] = 0;
   out_1953679614901457310[84] = 0;
   out_1953679614901457310[85] = 0;
   out_1953679614901457310[86] = 0;
   out_1953679614901457310[87] = 0;
}
void h_13(double *state, double *unused, double *out_1435016025948278781) {
   out_1435016025948278781[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1435016025948278781[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1435016025948278781[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_5192973418431082081) {
   out_5192973418431082081[0] = 0;
   out_5192973418431082081[1] = 0;
   out_5192973418431082081[2] = 0;
   out_5192973418431082081[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5192973418431082081[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5192973418431082081[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_5192973418431082081[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5192973418431082081[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_5192973418431082081[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_5192973418431082081[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_5192973418431082081[10] = 0;
   out_5192973418431082081[11] = 0;
   out_5192973418431082081[12] = 0;
   out_5192973418431082081[13] = 0;
   out_5192973418431082081[14] = 0;
   out_5192973418431082081[15] = 0;
   out_5192973418431082081[16] = 0;
   out_5192973418431082081[17] = 0;
   out_5192973418431082081[18] = 0;
   out_5192973418431082081[19] = 0;
   out_5192973418431082081[20] = 0;
   out_5192973418431082081[21] = 0;
   out_5192973418431082081[22] = 0;
   out_5192973418431082081[23] = 0;
   out_5192973418431082081[24] = 0;
   out_5192973418431082081[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5192973418431082081[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5192973418431082081[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5192973418431082081[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_5192973418431082081[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_5192973418431082081[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_5192973418431082081[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_5192973418431082081[32] = 0;
   out_5192973418431082081[33] = 0;
   out_5192973418431082081[34] = 0;
   out_5192973418431082081[35] = 0;
   out_5192973418431082081[36] = 0;
   out_5192973418431082081[37] = 0;
   out_5192973418431082081[38] = 0;
   out_5192973418431082081[39] = 0;
   out_5192973418431082081[40] = 0;
   out_5192973418431082081[41] = 0;
   out_5192973418431082081[42] = 0;
   out_5192973418431082081[43] = 0;
   out_5192973418431082081[44] = 0;
   out_5192973418431082081[45] = 0;
   out_5192973418431082081[46] = 0;
   out_5192973418431082081[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5192973418431082081[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_5192973418431082081[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5192973418431082081[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5192973418431082081[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_5192973418431082081[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_5192973418431082081[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_5192973418431082081[54] = 0;
   out_5192973418431082081[55] = 0;
   out_5192973418431082081[56] = 0;
   out_5192973418431082081[57] = 0;
   out_5192973418431082081[58] = 0;
   out_5192973418431082081[59] = 0;
   out_5192973418431082081[60] = 0;
   out_5192973418431082081[61] = 0;
   out_5192973418431082081[62] = 0;
   out_5192973418431082081[63] = 0;
   out_5192973418431082081[64] = 0;
   out_5192973418431082081[65] = 0;
}
void h_14(double *state, double *unused, double *out_9147253032187164228) {
   out_9147253032187164228[0] = state[10];
   out_9147253032187164228[1] = state[11];
   out_9147253032187164228[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7566287675857465017) {
   out_7566287675857465017[0] = 0;
   out_7566287675857465017[1] = 0;
   out_7566287675857465017[2] = 0;
   out_7566287675857465017[3] = 0;
   out_7566287675857465017[4] = 0;
   out_7566287675857465017[5] = 0;
   out_7566287675857465017[6] = 0;
   out_7566287675857465017[7] = 0;
   out_7566287675857465017[8] = 0;
   out_7566287675857465017[9] = 0;
   out_7566287675857465017[10] = 1;
   out_7566287675857465017[11] = 0;
   out_7566287675857465017[12] = 0;
   out_7566287675857465017[13] = 0;
   out_7566287675857465017[14] = 0;
   out_7566287675857465017[15] = 0;
   out_7566287675857465017[16] = 0;
   out_7566287675857465017[17] = 0;
   out_7566287675857465017[18] = 0;
   out_7566287675857465017[19] = 0;
   out_7566287675857465017[20] = 0;
   out_7566287675857465017[21] = 0;
   out_7566287675857465017[22] = 0;
   out_7566287675857465017[23] = 0;
   out_7566287675857465017[24] = 0;
   out_7566287675857465017[25] = 0;
   out_7566287675857465017[26] = 0;
   out_7566287675857465017[27] = 0;
   out_7566287675857465017[28] = 0;
   out_7566287675857465017[29] = 0;
   out_7566287675857465017[30] = 0;
   out_7566287675857465017[31] = 0;
   out_7566287675857465017[32] = 0;
   out_7566287675857465017[33] = 1;
   out_7566287675857465017[34] = 0;
   out_7566287675857465017[35] = 0;
   out_7566287675857465017[36] = 0;
   out_7566287675857465017[37] = 0;
   out_7566287675857465017[38] = 0;
   out_7566287675857465017[39] = 0;
   out_7566287675857465017[40] = 0;
   out_7566287675857465017[41] = 0;
   out_7566287675857465017[42] = 0;
   out_7566287675857465017[43] = 0;
   out_7566287675857465017[44] = 0;
   out_7566287675857465017[45] = 0;
   out_7566287675857465017[46] = 0;
   out_7566287675857465017[47] = 0;
   out_7566287675857465017[48] = 0;
   out_7566287675857465017[49] = 0;
   out_7566287675857465017[50] = 0;
   out_7566287675857465017[51] = 0;
   out_7566287675857465017[52] = 0;
   out_7566287675857465017[53] = 0;
   out_7566287675857465017[54] = 0;
   out_7566287675857465017[55] = 0;
   out_7566287675857465017[56] = 1;
   out_7566287675857465017[57] = 0;
   out_7566287675857465017[58] = 0;
   out_7566287675857465017[59] = 0;
   out_7566287675857465017[60] = 0;
   out_7566287675857465017[61] = 0;
   out_7566287675857465017[62] = 0;
   out_7566287675857465017[63] = 0;
   out_7566287675857465017[64] = 0;
   out_7566287675857465017[65] = 0;
}
void h_33(double *state, double *unused, double *out_1896070629801626530) {
   out_1896070629801626530[0] = state[16];
   out_1896070629801626530[1] = state[17];
   out_1896070629801626530[2] = state[18];
}
void H_33(double *state, double *unused, double *out_4604426982470212264) {
   out_4604426982470212264[0] = 0;
   out_4604426982470212264[1] = 0;
   out_4604426982470212264[2] = 0;
   out_4604426982470212264[3] = 0;
   out_4604426982470212264[4] = 0;
   out_4604426982470212264[5] = 0;
   out_4604426982470212264[6] = 0;
   out_4604426982470212264[7] = 0;
   out_4604426982470212264[8] = 0;
   out_4604426982470212264[9] = 0;
   out_4604426982470212264[10] = 0;
   out_4604426982470212264[11] = 0;
   out_4604426982470212264[12] = 0;
   out_4604426982470212264[13] = 0;
   out_4604426982470212264[14] = 0;
   out_4604426982470212264[15] = 0;
   out_4604426982470212264[16] = 1;
   out_4604426982470212264[17] = 0;
   out_4604426982470212264[18] = 0;
   out_4604426982470212264[19] = 0;
   out_4604426982470212264[20] = 0;
   out_4604426982470212264[21] = 0;
   out_4604426982470212264[22] = 0;
   out_4604426982470212264[23] = 0;
   out_4604426982470212264[24] = 0;
   out_4604426982470212264[25] = 0;
   out_4604426982470212264[26] = 0;
   out_4604426982470212264[27] = 0;
   out_4604426982470212264[28] = 0;
   out_4604426982470212264[29] = 0;
   out_4604426982470212264[30] = 0;
   out_4604426982470212264[31] = 0;
   out_4604426982470212264[32] = 0;
   out_4604426982470212264[33] = 0;
   out_4604426982470212264[34] = 0;
   out_4604426982470212264[35] = 0;
   out_4604426982470212264[36] = 0;
   out_4604426982470212264[37] = 0;
   out_4604426982470212264[38] = 0;
   out_4604426982470212264[39] = 1;
   out_4604426982470212264[40] = 0;
   out_4604426982470212264[41] = 0;
   out_4604426982470212264[42] = 0;
   out_4604426982470212264[43] = 0;
   out_4604426982470212264[44] = 0;
   out_4604426982470212264[45] = 0;
   out_4604426982470212264[46] = 0;
   out_4604426982470212264[47] = 0;
   out_4604426982470212264[48] = 0;
   out_4604426982470212264[49] = 0;
   out_4604426982470212264[50] = 0;
   out_4604426982470212264[51] = 0;
   out_4604426982470212264[52] = 0;
   out_4604426982470212264[53] = 0;
   out_4604426982470212264[54] = 0;
   out_4604426982470212264[55] = 0;
   out_4604426982470212264[56] = 0;
   out_4604426982470212264[57] = 0;
   out_4604426982470212264[58] = 0;
   out_4604426982470212264[59] = 0;
   out_4604426982470212264[60] = 0;
   out_4604426982470212264[61] = 0;
   out_4604426982470212264[62] = 1;
   out_4604426982470212264[63] = 0;
   out_4604426982470212264[64] = 0;
   out_4604426982470212264[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7457422784797960521) {
  H(in_vec, out_7457422784797960521);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3470959261784518961) {
  err_fun(nom_x, delta_x, out_3470959261784518961);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1797346124048533595) {
  inv_err_fun(nom_x, true_x, out_1797346124048533595);
}
void live_H_mod_fun(double *state, double *out_8553784297177108843) {
  H_mod_fun(state, out_8553784297177108843);
}
void live_f_fun(double *state, double dt, double *out_8550223565152907424) {
  f_fun(state,  dt, out_8550223565152907424);
}
void live_F_fun(double *state, double dt, double *out_2687924198656063120) {
  F_fun(state,  dt, out_2687924198656063120);
}
void live_h_4(double *state, double *unused, double *out_7204517438101592670) {
  h_4(state, unused, out_7204517438101592670);
}
void live_H_4(double *state, double *unused, double *out_7325098029227874372) {
  H_4(state, unused, out_7325098029227874372);
}
void live_h_9(double *state, double *unused, double *out_9147253032187164228) {
  h_9(state, unused, out_9147253032187164228);
}
void live_H_9(double *state, double *unused, double *out_7566287675857465017) {
  H_9(state, unused, out_7566287675857465017);
}
void live_h_10(double *state, double *unused, double *out_5220684388615811881) {
  h_10(state, unused, out_5220684388615811881);
}
void live_H_10(double *state, double *unused, double *out_2284770634911041421) {
  H_10(state, unused, out_2284770634911041421);
}
void live_h_12(double *state, double *unused, double *out_1549710670992380127) {
  h_12(state, unused, out_1549710670992380127);
}
void live_H_12(double *state, double *unused, double *out_6102189636449715449) {
  H_12(state, unused, out_6102189636449715449);
}
void live_h_31(double *state, double *unused, double *out_4733520265523424407) {
  h_31(state, unused, out_4733520265523424407);
}
void live_H_31(double *state, double *unused, double *out_7754983987109069868) {
  H_31(state, unused, out_7754983987109069868);
}
void live_h_32(double *state, double *unused, double *out_1456985045138936089) {
  h_32(state, unused, out_1456985045138936089);
}
void live_H_32(double *state, double *unused, double *out_1953679614901457310) {
  H_32(state, unused, out_1953679614901457310);
}
void live_h_13(double *state, double *unused, double *out_1435016025948278781) {
  h_13(state, unused, out_1435016025948278781);
}
void live_H_13(double *state, double *unused, double *out_5192973418431082081) {
  H_13(state, unused, out_5192973418431082081);
}
void live_h_14(double *state, double *unused, double *out_9147253032187164228) {
  h_14(state, unused, out_9147253032187164228);
}
void live_H_14(double *state, double *unused, double *out_7566287675857465017) {
  H_14(state, unused, out_7566287675857465017);
}
void live_h_33(double *state, double *unused, double *out_1896070629801626530) {
  h_33(state, unused, out_1896070629801626530);
}
void live_H_33(double *state, double *unused, double *out_4604426982470212264) {
  H_33(state, unused, out_4604426982470212264);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
