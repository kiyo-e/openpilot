#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_3483100787921365159) {
   out_3483100787921365159[0] = 0;
   out_3483100787921365159[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_3483100787921365159[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_3483100787921365159[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_3483100787921365159[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_3483100787921365159[5] = -sin(in_vec[1]);
   out_3483100787921365159[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3483100787921365159[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3483100787921365159[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_3483100787921365159[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_3483100787921365159[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_3483100787921365159[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_3483100787921365159[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3483100787921365159[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3483100787921365159[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_3483100787921365159[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_3483100787921365159[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_3483100787921365159[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_6250513862940019271) {
   out_6250513862940019271[0] = delta_x[0] + nom_x[0];
   out_6250513862940019271[1] = delta_x[1] + nom_x[1];
   out_6250513862940019271[2] = delta_x[2] + nom_x[2];
   out_6250513862940019271[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_6250513862940019271[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_6250513862940019271[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_6250513862940019271[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_6250513862940019271[7] = delta_x[6] + nom_x[7];
   out_6250513862940019271[8] = delta_x[7] + nom_x[8];
   out_6250513862940019271[9] = delta_x[8] + nom_x[9];
   out_6250513862940019271[10] = delta_x[9] + nom_x[10];
   out_6250513862940019271[11] = delta_x[10] + nom_x[11];
   out_6250513862940019271[12] = delta_x[11] + nom_x[12];
   out_6250513862940019271[13] = delta_x[12] + nom_x[13];
   out_6250513862940019271[14] = delta_x[13] + nom_x[14];
   out_6250513862940019271[15] = delta_x[14] + nom_x[15];
   out_6250513862940019271[16] = delta_x[15] + nom_x[16];
   out_6250513862940019271[17] = delta_x[16] + nom_x[17];
   out_6250513862940019271[18] = delta_x[17] + nom_x[18];
   out_6250513862940019271[19] = delta_x[18] + nom_x[19];
   out_6250513862940019271[20] = delta_x[19] + nom_x[20];
   out_6250513862940019271[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_2438799314880860478) {
   out_2438799314880860478[0] = -nom_x[0] + true_x[0];
   out_2438799314880860478[1] = -nom_x[1] + true_x[1];
   out_2438799314880860478[2] = -nom_x[2] + true_x[2];
   out_2438799314880860478[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_2438799314880860478[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_2438799314880860478[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_2438799314880860478[6] = -nom_x[7] + true_x[7];
   out_2438799314880860478[7] = -nom_x[8] + true_x[8];
   out_2438799314880860478[8] = -nom_x[9] + true_x[9];
   out_2438799314880860478[9] = -nom_x[10] + true_x[10];
   out_2438799314880860478[10] = -nom_x[11] + true_x[11];
   out_2438799314880860478[11] = -nom_x[12] + true_x[12];
   out_2438799314880860478[12] = -nom_x[13] + true_x[13];
   out_2438799314880860478[13] = -nom_x[14] + true_x[14];
   out_2438799314880860478[14] = -nom_x[15] + true_x[15];
   out_2438799314880860478[15] = -nom_x[16] + true_x[16];
   out_2438799314880860478[16] = -nom_x[17] + true_x[17];
   out_2438799314880860478[17] = -nom_x[18] + true_x[18];
   out_2438799314880860478[18] = -nom_x[19] + true_x[19];
   out_2438799314880860478[19] = -nom_x[20] + true_x[20];
   out_2438799314880860478[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6134002557142884385) {
   out_6134002557142884385[0] = 1.0;
   out_6134002557142884385[1] = 0;
   out_6134002557142884385[2] = 0;
   out_6134002557142884385[3] = 0;
   out_6134002557142884385[4] = 0;
   out_6134002557142884385[5] = 0;
   out_6134002557142884385[6] = 0;
   out_6134002557142884385[7] = 0;
   out_6134002557142884385[8] = 0;
   out_6134002557142884385[9] = 0;
   out_6134002557142884385[10] = 0;
   out_6134002557142884385[11] = 0;
   out_6134002557142884385[12] = 0;
   out_6134002557142884385[13] = 0;
   out_6134002557142884385[14] = 0;
   out_6134002557142884385[15] = 0;
   out_6134002557142884385[16] = 0;
   out_6134002557142884385[17] = 0;
   out_6134002557142884385[18] = 0;
   out_6134002557142884385[19] = 0;
   out_6134002557142884385[20] = 0;
   out_6134002557142884385[21] = 0;
   out_6134002557142884385[22] = 1.0;
   out_6134002557142884385[23] = 0;
   out_6134002557142884385[24] = 0;
   out_6134002557142884385[25] = 0;
   out_6134002557142884385[26] = 0;
   out_6134002557142884385[27] = 0;
   out_6134002557142884385[28] = 0;
   out_6134002557142884385[29] = 0;
   out_6134002557142884385[30] = 0;
   out_6134002557142884385[31] = 0;
   out_6134002557142884385[32] = 0;
   out_6134002557142884385[33] = 0;
   out_6134002557142884385[34] = 0;
   out_6134002557142884385[35] = 0;
   out_6134002557142884385[36] = 0;
   out_6134002557142884385[37] = 0;
   out_6134002557142884385[38] = 0;
   out_6134002557142884385[39] = 0;
   out_6134002557142884385[40] = 0;
   out_6134002557142884385[41] = 0;
   out_6134002557142884385[42] = 0;
   out_6134002557142884385[43] = 0;
   out_6134002557142884385[44] = 1.0;
   out_6134002557142884385[45] = 0;
   out_6134002557142884385[46] = 0;
   out_6134002557142884385[47] = 0;
   out_6134002557142884385[48] = 0;
   out_6134002557142884385[49] = 0;
   out_6134002557142884385[50] = 0;
   out_6134002557142884385[51] = 0;
   out_6134002557142884385[52] = 0;
   out_6134002557142884385[53] = 0;
   out_6134002557142884385[54] = 0;
   out_6134002557142884385[55] = 0;
   out_6134002557142884385[56] = 0;
   out_6134002557142884385[57] = 0;
   out_6134002557142884385[58] = 0;
   out_6134002557142884385[59] = 0;
   out_6134002557142884385[60] = 0;
   out_6134002557142884385[61] = 0;
   out_6134002557142884385[62] = 0;
   out_6134002557142884385[63] = 0;
   out_6134002557142884385[64] = 0;
   out_6134002557142884385[65] = 0;
   out_6134002557142884385[66] = -0.5*state[4];
   out_6134002557142884385[67] = -0.5*state[5];
   out_6134002557142884385[68] = -0.5*state[6];
   out_6134002557142884385[69] = 0;
   out_6134002557142884385[70] = 0;
   out_6134002557142884385[71] = 0;
   out_6134002557142884385[72] = 0;
   out_6134002557142884385[73] = 0;
   out_6134002557142884385[74] = 0;
   out_6134002557142884385[75] = 0;
   out_6134002557142884385[76] = 0;
   out_6134002557142884385[77] = 0;
   out_6134002557142884385[78] = 0;
   out_6134002557142884385[79] = 0;
   out_6134002557142884385[80] = 0;
   out_6134002557142884385[81] = 0;
   out_6134002557142884385[82] = 0;
   out_6134002557142884385[83] = 0;
   out_6134002557142884385[84] = 0;
   out_6134002557142884385[85] = 0;
   out_6134002557142884385[86] = 0;
   out_6134002557142884385[87] = 0.5*state[3];
   out_6134002557142884385[88] = 0.5*state[6];
   out_6134002557142884385[89] = -0.5*state[5];
   out_6134002557142884385[90] = 0;
   out_6134002557142884385[91] = 0;
   out_6134002557142884385[92] = 0;
   out_6134002557142884385[93] = 0;
   out_6134002557142884385[94] = 0;
   out_6134002557142884385[95] = 0;
   out_6134002557142884385[96] = 0;
   out_6134002557142884385[97] = 0;
   out_6134002557142884385[98] = 0;
   out_6134002557142884385[99] = 0;
   out_6134002557142884385[100] = 0;
   out_6134002557142884385[101] = 0;
   out_6134002557142884385[102] = 0;
   out_6134002557142884385[103] = 0;
   out_6134002557142884385[104] = 0;
   out_6134002557142884385[105] = 0;
   out_6134002557142884385[106] = 0;
   out_6134002557142884385[107] = 0;
   out_6134002557142884385[108] = -0.5*state[6];
   out_6134002557142884385[109] = 0.5*state[3];
   out_6134002557142884385[110] = 0.5*state[4];
   out_6134002557142884385[111] = 0;
   out_6134002557142884385[112] = 0;
   out_6134002557142884385[113] = 0;
   out_6134002557142884385[114] = 0;
   out_6134002557142884385[115] = 0;
   out_6134002557142884385[116] = 0;
   out_6134002557142884385[117] = 0;
   out_6134002557142884385[118] = 0;
   out_6134002557142884385[119] = 0;
   out_6134002557142884385[120] = 0;
   out_6134002557142884385[121] = 0;
   out_6134002557142884385[122] = 0;
   out_6134002557142884385[123] = 0;
   out_6134002557142884385[124] = 0;
   out_6134002557142884385[125] = 0;
   out_6134002557142884385[126] = 0;
   out_6134002557142884385[127] = 0;
   out_6134002557142884385[128] = 0;
   out_6134002557142884385[129] = 0.5*state[5];
   out_6134002557142884385[130] = -0.5*state[4];
   out_6134002557142884385[131] = 0.5*state[3];
   out_6134002557142884385[132] = 0;
   out_6134002557142884385[133] = 0;
   out_6134002557142884385[134] = 0;
   out_6134002557142884385[135] = 0;
   out_6134002557142884385[136] = 0;
   out_6134002557142884385[137] = 0;
   out_6134002557142884385[138] = 0;
   out_6134002557142884385[139] = 0;
   out_6134002557142884385[140] = 0;
   out_6134002557142884385[141] = 0;
   out_6134002557142884385[142] = 0;
   out_6134002557142884385[143] = 0;
   out_6134002557142884385[144] = 0;
   out_6134002557142884385[145] = 0;
   out_6134002557142884385[146] = 0;
   out_6134002557142884385[147] = 0;
   out_6134002557142884385[148] = 0;
   out_6134002557142884385[149] = 0;
   out_6134002557142884385[150] = 0;
   out_6134002557142884385[151] = 0;
   out_6134002557142884385[152] = 0;
   out_6134002557142884385[153] = 1.0;
   out_6134002557142884385[154] = 0;
   out_6134002557142884385[155] = 0;
   out_6134002557142884385[156] = 0;
   out_6134002557142884385[157] = 0;
   out_6134002557142884385[158] = 0;
   out_6134002557142884385[159] = 0;
   out_6134002557142884385[160] = 0;
   out_6134002557142884385[161] = 0;
   out_6134002557142884385[162] = 0;
   out_6134002557142884385[163] = 0;
   out_6134002557142884385[164] = 0;
   out_6134002557142884385[165] = 0;
   out_6134002557142884385[166] = 0;
   out_6134002557142884385[167] = 0;
   out_6134002557142884385[168] = 0;
   out_6134002557142884385[169] = 0;
   out_6134002557142884385[170] = 0;
   out_6134002557142884385[171] = 0;
   out_6134002557142884385[172] = 0;
   out_6134002557142884385[173] = 0;
   out_6134002557142884385[174] = 0;
   out_6134002557142884385[175] = 1.0;
   out_6134002557142884385[176] = 0;
   out_6134002557142884385[177] = 0;
   out_6134002557142884385[178] = 0;
   out_6134002557142884385[179] = 0;
   out_6134002557142884385[180] = 0;
   out_6134002557142884385[181] = 0;
   out_6134002557142884385[182] = 0;
   out_6134002557142884385[183] = 0;
   out_6134002557142884385[184] = 0;
   out_6134002557142884385[185] = 0;
   out_6134002557142884385[186] = 0;
   out_6134002557142884385[187] = 0;
   out_6134002557142884385[188] = 0;
   out_6134002557142884385[189] = 0;
   out_6134002557142884385[190] = 0;
   out_6134002557142884385[191] = 0;
   out_6134002557142884385[192] = 0;
   out_6134002557142884385[193] = 0;
   out_6134002557142884385[194] = 0;
   out_6134002557142884385[195] = 0;
   out_6134002557142884385[196] = 0;
   out_6134002557142884385[197] = 1.0;
   out_6134002557142884385[198] = 0;
   out_6134002557142884385[199] = 0;
   out_6134002557142884385[200] = 0;
   out_6134002557142884385[201] = 0;
   out_6134002557142884385[202] = 0;
   out_6134002557142884385[203] = 0;
   out_6134002557142884385[204] = 0;
   out_6134002557142884385[205] = 0;
   out_6134002557142884385[206] = 0;
   out_6134002557142884385[207] = 0;
   out_6134002557142884385[208] = 0;
   out_6134002557142884385[209] = 0;
   out_6134002557142884385[210] = 0;
   out_6134002557142884385[211] = 0;
   out_6134002557142884385[212] = 0;
   out_6134002557142884385[213] = 0;
   out_6134002557142884385[214] = 0;
   out_6134002557142884385[215] = 0;
   out_6134002557142884385[216] = 0;
   out_6134002557142884385[217] = 0;
   out_6134002557142884385[218] = 0;
   out_6134002557142884385[219] = 1.0;
   out_6134002557142884385[220] = 0;
   out_6134002557142884385[221] = 0;
   out_6134002557142884385[222] = 0;
   out_6134002557142884385[223] = 0;
   out_6134002557142884385[224] = 0;
   out_6134002557142884385[225] = 0;
   out_6134002557142884385[226] = 0;
   out_6134002557142884385[227] = 0;
   out_6134002557142884385[228] = 0;
   out_6134002557142884385[229] = 0;
   out_6134002557142884385[230] = 0;
   out_6134002557142884385[231] = 0;
   out_6134002557142884385[232] = 0;
   out_6134002557142884385[233] = 0;
   out_6134002557142884385[234] = 0;
   out_6134002557142884385[235] = 0;
   out_6134002557142884385[236] = 0;
   out_6134002557142884385[237] = 0;
   out_6134002557142884385[238] = 0;
   out_6134002557142884385[239] = 0;
   out_6134002557142884385[240] = 0;
   out_6134002557142884385[241] = 1.0;
   out_6134002557142884385[242] = 0;
   out_6134002557142884385[243] = 0;
   out_6134002557142884385[244] = 0;
   out_6134002557142884385[245] = 0;
   out_6134002557142884385[246] = 0;
   out_6134002557142884385[247] = 0;
   out_6134002557142884385[248] = 0;
   out_6134002557142884385[249] = 0;
   out_6134002557142884385[250] = 0;
   out_6134002557142884385[251] = 0;
   out_6134002557142884385[252] = 0;
   out_6134002557142884385[253] = 0;
   out_6134002557142884385[254] = 0;
   out_6134002557142884385[255] = 0;
   out_6134002557142884385[256] = 0;
   out_6134002557142884385[257] = 0;
   out_6134002557142884385[258] = 0;
   out_6134002557142884385[259] = 0;
   out_6134002557142884385[260] = 0;
   out_6134002557142884385[261] = 0;
   out_6134002557142884385[262] = 0;
   out_6134002557142884385[263] = 1.0;
   out_6134002557142884385[264] = 0;
   out_6134002557142884385[265] = 0;
   out_6134002557142884385[266] = 0;
   out_6134002557142884385[267] = 0;
   out_6134002557142884385[268] = 0;
   out_6134002557142884385[269] = 0;
   out_6134002557142884385[270] = 0;
   out_6134002557142884385[271] = 0;
   out_6134002557142884385[272] = 0;
   out_6134002557142884385[273] = 0;
   out_6134002557142884385[274] = 0;
   out_6134002557142884385[275] = 0;
   out_6134002557142884385[276] = 0;
   out_6134002557142884385[277] = 0;
   out_6134002557142884385[278] = 0;
   out_6134002557142884385[279] = 0;
   out_6134002557142884385[280] = 0;
   out_6134002557142884385[281] = 0;
   out_6134002557142884385[282] = 0;
   out_6134002557142884385[283] = 0;
   out_6134002557142884385[284] = 0;
   out_6134002557142884385[285] = 1.0;
   out_6134002557142884385[286] = 0;
   out_6134002557142884385[287] = 0;
   out_6134002557142884385[288] = 0;
   out_6134002557142884385[289] = 0;
   out_6134002557142884385[290] = 0;
   out_6134002557142884385[291] = 0;
   out_6134002557142884385[292] = 0;
   out_6134002557142884385[293] = 0;
   out_6134002557142884385[294] = 0;
   out_6134002557142884385[295] = 0;
   out_6134002557142884385[296] = 0;
   out_6134002557142884385[297] = 0;
   out_6134002557142884385[298] = 0;
   out_6134002557142884385[299] = 0;
   out_6134002557142884385[300] = 0;
   out_6134002557142884385[301] = 0;
   out_6134002557142884385[302] = 0;
   out_6134002557142884385[303] = 0;
   out_6134002557142884385[304] = 0;
   out_6134002557142884385[305] = 0;
   out_6134002557142884385[306] = 0;
   out_6134002557142884385[307] = 1.0;
   out_6134002557142884385[308] = 0;
   out_6134002557142884385[309] = 0;
   out_6134002557142884385[310] = 0;
   out_6134002557142884385[311] = 0;
   out_6134002557142884385[312] = 0;
   out_6134002557142884385[313] = 0;
   out_6134002557142884385[314] = 0;
   out_6134002557142884385[315] = 0;
   out_6134002557142884385[316] = 0;
   out_6134002557142884385[317] = 0;
   out_6134002557142884385[318] = 0;
   out_6134002557142884385[319] = 0;
   out_6134002557142884385[320] = 0;
   out_6134002557142884385[321] = 0;
   out_6134002557142884385[322] = 0;
   out_6134002557142884385[323] = 0;
   out_6134002557142884385[324] = 0;
   out_6134002557142884385[325] = 0;
   out_6134002557142884385[326] = 0;
   out_6134002557142884385[327] = 0;
   out_6134002557142884385[328] = 0;
   out_6134002557142884385[329] = 1.0;
   out_6134002557142884385[330] = 0;
   out_6134002557142884385[331] = 0;
   out_6134002557142884385[332] = 0;
   out_6134002557142884385[333] = 0;
   out_6134002557142884385[334] = 0;
   out_6134002557142884385[335] = 0;
   out_6134002557142884385[336] = 0;
   out_6134002557142884385[337] = 0;
   out_6134002557142884385[338] = 0;
   out_6134002557142884385[339] = 0;
   out_6134002557142884385[340] = 0;
   out_6134002557142884385[341] = 0;
   out_6134002557142884385[342] = 0;
   out_6134002557142884385[343] = 0;
   out_6134002557142884385[344] = 0;
   out_6134002557142884385[345] = 0;
   out_6134002557142884385[346] = 0;
   out_6134002557142884385[347] = 0;
   out_6134002557142884385[348] = 0;
   out_6134002557142884385[349] = 0;
   out_6134002557142884385[350] = 0;
   out_6134002557142884385[351] = 1.0;
   out_6134002557142884385[352] = 0;
   out_6134002557142884385[353] = 0;
   out_6134002557142884385[354] = 0;
   out_6134002557142884385[355] = 0;
   out_6134002557142884385[356] = 0;
   out_6134002557142884385[357] = 0;
   out_6134002557142884385[358] = 0;
   out_6134002557142884385[359] = 0;
   out_6134002557142884385[360] = 0;
   out_6134002557142884385[361] = 0;
   out_6134002557142884385[362] = 0;
   out_6134002557142884385[363] = 0;
   out_6134002557142884385[364] = 0;
   out_6134002557142884385[365] = 0;
   out_6134002557142884385[366] = 0;
   out_6134002557142884385[367] = 0;
   out_6134002557142884385[368] = 0;
   out_6134002557142884385[369] = 0;
   out_6134002557142884385[370] = 0;
   out_6134002557142884385[371] = 0;
   out_6134002557142884385[372] = 0;
   out_6134002557142884385[373] = 1.0;
   out_6134002557142884385[374] = 0;
   out_6134002557142884385[375] = 0;
   out_6134002557142884385[376] = 0;
   out_6134002557142884385[377] = 0;
   out_6134002557142884385[378] = 0;
   out_6134002557142884385[379] = 0;
   out_6134002557142884385[380] = 0;
   out_6134002557142884385[381] = 0;
   out_6134002557142884385[382] = 0;
   out_6134002557142884385[383] = 0;
   out_6134002557142884385[384] = 0;
   out_6134002557142884385[385] = 0;
   out_6134002557142884385[386] = 0;
   out_6134002557142884385[387] = 0;
   out_6134002557142884385[388] = 0;
   out_6134002557142884385[389] = 0;
   out_6134002557142884385[390] = 0;
   out_6134002557142884385[391] = 0;
   out_6134002557142884385[392] = 0;
   out_6134002557142884385[393] = 0;
   out_6134002557142884385[394] = 0;
   out_6134002557142884385[395] = 1.0;
   out_6134002557142884385[396] = 0;
   out_6134002557142884385[397] = 0;
   out_6134002557142884385[398] = 0;
   out_6134002557142884385[399] = 0;
   out_6134002557142884385[400] = 0;
   out_6134002557142884385[401] = 0;
   out_6134002557142884385[402] = 0;
   out_6134002557142884385[403] = 0;
   out_6134002557142884385[404] = 0;
   out_6134002557142884385[405] = 0;
   out_6134002557142884385[406] = 0;
   out_6134002557142884385[407] = 0;
   out_6134002557142884385[408] = 0;
   out_6134002557142884385[409] = 0;
   out_6134002557142884385[410] = 0;
   out_6134002557142884385[411] = 0;
   out_6134002557142884385[412] = 0;
   out_6134002557142884385[413] = 0;
   out_6134002557142884385[414] = 0;
   out_6134002557142884385[415] = 0;
   out_6134002557142884385[416] = 0;
   out_6134002557142884385[417] = 1.0;
   out_6134002557142884385[418] = 0;
   out_6134002557142884385[419] = 0;
   out_6134002557142884385[420] = 0;
   out_6134002557142884385[421] = 0;
   out_6134002557142884385[422] = 0;
   out_6134002557142884385[423] = 0;
   out_6134002557142884385[424] = 0;
   out_6134002557142884385[425] = 0;
   out_6134002557142884385[426] = 0;
   out_6134002557142884385[427] = 0;
   out_6134002557142884385[428] = 0;
   out_6134002557142884385[429] = 0;
   out_6134002557142884385[430] = 0;
   out_6134002557142884385[431] = 0;
   out_6134002557142884385[432] = 0;
   out_6134002557142884385[433] = 0;
   out_6134002557142884385[434] = 0;
   out_6134002557142884385[435] = 0;
   out_6134002557142884385[436] = 0;
   out_6134002557142884385[437] = 0;
   out_6134002557142884385[438] = 0;
   out_6134002557142884385[439] = 1.0;
   out_6134002557142884385[440] = 0;
   out_6134002557142884385[441] = 0;
   out_6134002557142884385[442] = 0;
   out_6134002557142884385[443] = 0;
   out_6134002557142884385[444] = 0;
   out_6134002557142884385[445] = 0;
   out_6134002557142884385[446] = 0;
   out_6134002557142884385[447] = 0;
   out_6134002557142884385[448] = 0;
   out_6134002557142884385[449] = 0;
   out_6134002557142884385[450] = 0;
   out_6134002557142884385[451] = 0;
   out_6134002557142884385[452] = 0;
   out_6134002557142884385[453] = 0;
   out_6134002557142884385[454] = 0;
   out_6134002557142884385[455] = 0;
   out_6134002557142884385[456] = 0;
   out_6134002557142884385[457] = 0;
   out_6134002557142884385[458] = 0;
   out_6134002557142884385[459] = 0;
   out_6134002557142884385[460] = 0;
   out_6134002557142884385[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_5714529502036206260) {
   out_5714529502036206260[0] = dt*state[7] + state[0];
   out_5714529502036206260[1] = dt*state[8] + state[1];
   out_5714529502036206260[2] = dt*state[9] + state[2];
   out_5714529502036206260[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_5714529502036206260[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_5714529502036206260[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_5714529502036206260[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_5714529502036206260[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_5714529502036206260[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_5714529502036206260[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_5714529502036206260[10] = state[10];
   out_5714529502036206260[11] = state[11];
   out_5714529502036206260[12] = state[12];
   out_5714529502036206260[13] = state[13];
   out_5714529502036206260[14] = state[14];
   out_5714529502036206260[15] = state[15];
   out_5714529502036206260[16] = state[16];
   out_5714529502036206260[17] = state[17];
   out_5714529502036206260[18] = state[18];
   out_5714529502036206260[19] = state[19];
   out_5714529502036206260[20] = state[20];
   out_5714529502036206260[21] = state[21];
}
void F_fun(double *state, double dt, double *out_7501004244675927010) {
   out_7501004244675927010[0] = 1;
   out_7501004244675927010[1] = 0;
   out_7501004244675927010[2] = 0;
   out_7501004244675927010[3] = 0;
   out_7501004244675927010[4] = 0;
   out_7501004244675927010[5] = 0;
   out_7501004244675927010[6] = dt;
   out_7501004244675927010[7] = 0;
   out_7501004244675927010[8] = 0;
   out_7501004244675927010[9] = 0;
   out_7501004244675927010[10] = 0;
   out_7501004244675927010[11] = 0;
   out_7501004244675927010[12] = 0;
   out_7501004244675927010[13] = 0;
   out_7501004244675927010[14] = 0;
   out_7501004244675927010[15] = 0;
   out_7501004244675927010[16] = 0;
   out_7501004244675927010[17] = 0;
   out_7501004244675927010[18] = 0;
   out_7501004244675927010[19] = 0;
   out_7501004244675927010[20] = 0;
   out_7501004244675927010[21] = 0;
   out_7501004244675927010[22] = 1;
   out_7501004244675927010[23] = 0;
   out_7501004244675927010[24] = 0;
   out_7501004244675927010[25] = 0;
   out_7501004244675927010[26] = 0;
   out_7501004244675927010[27] = 0;
   out_7501004244675927010[28] = dt;
   out_7501004244675927010[29] = 0;
   out_7501004244675927010[30] = 0;
   out_7501004244675927010[31] = 0;
   out_7501004244675927010[32] = 0;
   out_7501004244675927010[33] = 0;
   out_7501004244675927010[34] = 0;
   out_7501004244675927010[35] = 0;
   out_7501004244675927010[36] = 0;
   out_7501004244675927010[37] = 0;
   out_7501004244675927010[38] = 0;
   out_7501004244675927010[39] = 0;
   out_7501004244675927010[40] = 0;
   out_7501004244675927010[41] = 0;
   out_7501004244675927010[42] = 0;
   out_7501004244675927010[43] = 0;
   out_7501004244675927010[44] = 1;
   out_7501004244675927010[45] = 0;
   out_7501004244675927010[46] = 0;
   out_7501004244675927010[47] = 0;
   out_7501004244675927010[48] = 0;
   out_7501004244675927010[49] = 0;
   out_7501004244675927010[50] = dt;
   out_7501004244675927010[51] = 0;
   out_7501004244675927010[52] = 0;
   out_7501004244675927010[53] = 0;
   out_7501004244675927010[54] = 0;
   out_7501004244675927010[55] = 0;
   out_7501004244675927010[56] = 0;
   out_7501004244675927010[57] = 0;
   out_7501004244675927010[58] = 0;
   out_7501004244675927010[59] = 0;
   out_7501004244675927010[60] = 0;
   out_7501004244675927010[61] = 0;
   out_7501004244675927010[62] = 0;
   out_7501004244675927010[63] = 0;
   out_7501004244675927010[64] = 0;
   out_7501004244675927010[65] = 0;
   out_7501004244675927010[66] = 1;
   out_7501004244675927010[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7501004244675927010[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_7501004244675927010[69] = 0;
   out_7501004244675927010[70] = 0;
   out_7501004244675927010[71] = 0;
   out_7501004244675927010[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7501004244675927010[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7501004244675927010[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7501004244675927010[75] = 0;
   out_7501004244675927010[76] = 0;
   out_7501004244675927010[77] = 0;
   out_7501004244675927010[78] = 0;
   out_7501004244675927010[79] = 0;
   out_7501004244675927010[80] = 0;
   out_7501004244675927010[81] = 0;
   out_7501004244675927010[82] = 0;
   out_7501004244675927010[83] = 0;
   out_7501004244675927010[84] = 0;
   out_7501004244675927010[85] = 0;
   out_7501004244675927010[86] = 0;
   out_7501004244675927010[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7501004244675927010[88] = 1;
   out_7501004244675927010[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_7501004244675927010[90] = 0;
   out_7501004244675927010[91] = 0;
   out_7501004244675927010[92] = 0;
   out_7501004244675927010[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7501004244675927010[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7501004244675927010[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7501004244675927010[96] = 0;
   out_7501004244675927010[97] = 0;
   out_7501004244675927010[98] = 0;
   out_7501004244675927010[99] = 0;
   out_7501004244675927010[100] = 0;
   out_7501004244675927010[101] = 0;
   out_7501004244675927010[102] = 0;
   out_7501004244675927010[103] = 0;
   out_7501004244675927010[104] = 0;
   out_7501004244675927010[105] = 0;
   out_7501004244675927010[106] = 0;
   out_7501004244675927010[107] = 0;
   out_7501004244675927010[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_7501004244675927010[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_7501004244675927010[110] = 1;
   out_7501004244675927010[111] = 0;
   out_7501004244675927010[112] = 0;
   out_7501004244675927010[113] = 0;
   out_7501004244675927010[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7501004244675927010[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7501004244675927010[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7501004244675927010[117] = 0;
   out_7501004244675927010[118] = 0;
   out_7501004244675927010[119] = 0;
   out_7501004244675927010[120] = 0;
   out_7501004244675927010[121] = 0;
   out_7501004244675927010[122] = 0;
   out_7501004244675927010[123] = 0;
   out_7501004244675927010[124] = 0;
   out_7501004244675927010[125] = 0;
   out_7501004244675927010[126] = 0;
   out_7501004244675927010[127] = 0;
   out_7501004244675927010[128] = 0;
   out_7501004244675927010[129] = 0;
   out_7501004244675927010[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7501004244675927010[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_7501004244675927010[132] = 1;
   out_7501004244675927010[133] = 0;
   out_7501004244675927010[134] = 0;
   out_7501004244675927010[135] = 0;
   out_7501004244675927010[136] = 0;
   out_7501004244675927010[137] = 0;
   out_7501004244675927010[138] = 0;
   out_7501004244675927010[139] = 0;
   out_7501004244675927010[140] = 0;
   out_7501004244675927010[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7501004244675927010[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7501004244675927010[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7501004244675927010[144] = 0;
   out_7501004244675927010[145] = 0;
   out_7501004244675927010[146] = 0;
   out_7501004244675927010[147] = 0;
   out_7501004244675927010[148] = 0;
   out_7501004244675927010[149] = 0;
   out_7501004244675927010[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7501004244675927010[151] = 0;
   out_7501004244675927010[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_7501004244675927010[153] = 0;
   out_7501004244675927010[154] = 1;
   out_7501004244675927010[155] = 0;
   out_7501004244675927010[156] = 0;
   out_7501004244675927010[157] = 0;
   out_7501004244675927010[158] = 0;
   out_7501004244675927010[159] = 0;
   out_7501004244675927010[160] = 0;
   out_7501004244675927010[161] = 0;
   out_7501004244675927010[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7501004244675927010[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7501004244675927010[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7501004244675927010[165] = 0;
   out_7501004244675927010[166] = 0;
   out_7501004244675927010[167] = 0;
   out_7501004244675927010[168] = 0;
   out_7501004244675927010[169] = 0;
   out_7501004244675927010[170] = 0;
   out_7501004244675927010[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_7501004244675927010[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_7501004244675927010[173] = 0;
   out_7501004244675927010[174] = 0;
   out_7501004244675927010[175] = 0;
   out_7501004244675927010[176] = 1;
   out_7501004244675927010[177] = 0;
   out_7501004244675927010[178] = 0;
   out_7501004244675927010[179] = 0;
   out_7501004244675927010[180] = 0;
   out_7501004244675927010[181] = 0;
   out_7501004244675927010[182] = 0;
   out_7501004244675927010[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7501004244675927010[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7501004244675927010[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7501004244675927010[186] = 0;
   out_7501004244675927010[187] = 0;
   out_7501004244675927010[188] = 0;
   out_7501004244675927010[189] = 0;
   out_7501004244675927010[190] = 0;
   out_7501004244675927010[191] = 0;
   out_7501004244675927010[192] = 0;
   out_7501004244675927010[193] = 0;
   out_7501004244675927010[194] = 0;
   out_7501004244675927010[195] = 0;
   out_7501004244675927010[196] = 0;
   out_7501004244675927010[197] = 0;
   out_7501004244675927010[198] = 1;
   out_7501004244675927010[199] = 0;
   out_7501004244675927010[200] = 0;
   out_7501004244675927010[201] = 0;
   out_7501004244675927010[202] = 0;
   out_7501004244675927010[203] = 0;
   out_7501004244675927010[204] = 0;
   out_7501004244675927010[205] = 0;
   out_7501004244675927010[206] = 0;
   out_7501004244675927010[207] = 0;
   out_7501004244675927010[208] = 0;
   out_7501004244675927010[209] = 0;
   out_7501004244675927010[210] = 0;
   out_7501004244675927010[211] = 0;
   out_7501004244675927010[212] = 0;
   out_7501004244675927010[213] = 0;
   out_7501004244675927010[214] = 0;
   out_7501004244675927010[215] = 0;
   out_7501004244675927010[216] = 0;
   out_7501004244675927010[217] = 0;
   out_7501004244675927010[218] = 0;
   out_7501004244675927010[219] = 0;
   out_7501004244675927010[220] = 1;
   out_7501004244675927010[221] = 0;
   out_7501004244675927010[222] = 0;
   out_7501004244675927010[223] = 0;
   out_7501004244675927010[224] = 0;
   out_7501004244675927010[225] = 0;
   out_7501004244675927010[226] = 0;
   out_7501004244675927010[227] = 0;
   out_7501004244675927010[228] = 0;
   out_7501004244675927010[229] = 0;
   out_7501004244675927010[230] = 0;
   out_7501004244675927010[231] = 0;
   out_7501004244675927010[232] = 0;
   out_7501004244675927010[233] = 0;
   out_7501004244675927010[234] = 0;
   out_7501004244675927010[235] = 0;
   out_7501004244675927010[236] = 0;
   out_7501004244675927010[237] = 0;
   out_7501004244675927010[238] = 0;
   out_7501004244675927010[239] = 0;
   out_7501004244675927010[240] = 0;
   out_7501004244675927010[241] = 0;
   out_7501004244675927010[242] = 1;
   out_7501004244675927010[243] = 0;
   out_7501004244675927010[244] = 0;
   out_7501004244675927010[245] = 0;
   out_7501004244675927010[246] = 0;
   out_7501004244675927010[247] = 0;
   out_7501004244675927010[248] = 0;
   out_7501004244675927010[249] = 0;
   out_7501004244675927010[250] = 0;
   out_7501004244675927010[251] = 0;
   out_7501004244675927010[252] = 0;
   out_7501004244675927010[253] = 0;
   out_7501004244675927010[254] = 0;
   out_7501004244675927010[255] = 0;
   out_7501004244675927010[256] = 0;
   out_7501004244675927010[257] = 0;
   out_7501004244675927010[258] = 0;
   out_7501004244675927010[259] = 0;
   out_7501004244675927010[260] = 0;
   out_7501004244675927010[261] = 0;
   out_7501004244675927010[262] = 0;
   out_7501004244675927010[263] = 0;
   out_7501004244675927010[264] = 1;
   out_7501004244675927010[265] = 0;
   out_7501004244675927010[266] = 0;
   out_7501004244675927010[267] = 0;
   out_7501004244675927010[268] = 0;
   out_7501004244675927010[269] = 0;
   out_7501004244675927010[270] = 0;
   out_7501004244675927010[271] = 0;
   out_7501004244675927010[272] = 0;
   out_7501004244675927010[273] = 0;
   out_7501004244675927010[274] = 0;
   out_7501004244675927010[275] = 0;
   out_7501004244675927010[276] = 0;
   out_7501004244675927010[277] = 0;
   out_7501004244675927010[278] = 0;
   out_7501004244675927010[279] = 0;
   out_7501004244675927010[280] = 0;
   out_7501004244675927010[281] = 0;
   out_7501004244675927010[282] = 0;
   out_7501004244675927010[283] = 0;
   out_7501004244675927010[284] = 0;
   out_7501004244675927010[285] = 0;
   out_7501004244675927010[286] = 1;
   out_7501004244675927010[287] = 0;
   out_7501004244675927010[288] = 0;
   out_7501004244675927010[289] = 0;
   out_7501004244675927010[290] = 0;
   out_7501004244675927010[291] = 0;
   out_7501004244675927010[292] = 0;
   out_7501004244675927010[293] = 0;
   out_7501004244675927010[294] = 0;
   out_7501004244675927010[295] = 0;
   out_7501004244675927010[296] = 0;
   out_7501004244675927010[297] = 0;
   out_7501004244675927010[298] = 0;
   out_7501004244675927010[299] = 0;
   out_7501004244675927010[300] = 0;
   out_7501004244675927010[301] = 0;
   out_7501004244675927010[302] = 0;
   out_7501004244675927010[303] = 0;
   out_7501004244675927010[304] = 0;
   out_7501004244675927010[305] = 0;
   out_7501004244675927010[306] = 0;
   out_7501004244675927010[307] = 0;
   out_7501004244675927010[308] = 1;
   out_7501004244675927010[309] = 0;
   out_7501004244675927010[310] = 0;
   out_7501004244675927010[311] = 0;
   out_7501004244675927010[312] = 0;
   out_7501004244675927010[313] = 0;
   out_7501004244675927010[314] = 0;
   out_7501004244675927010[315] = 0;
   out_7501004244675927010[316] = 0;
   out_7501004244675927010[317] = 0;
   out_7501004244675927010[318] = 0;
   out_7501004244675927010[319] = 0;
   out_7501004244675927010[320] = 0;
   out_7501004244675927010[321] = 0;
   out_7501004244675927010[322] = 0;
   out_7501004244675927010[323] = 0;
   out_7501004244675927010[324] = 0;
   out_7501004244675927010[325] = 0;
   out_7501004244675927010[326] = 0;
   out_7501004244675927010[327] = 0;
   out_7501004244675927010[328] = 0;
   out_7501004244675927010[329] = 0;
   out_7501004244675927010[330] = 1;
   out_7501004244675927010[331] = 0;
   out_7501004244675927010[332] = 0;
   out_7501004244675927010[333] = 0;
   out_7501004244675927010[334] = 0;
   out_7501004244675927010[335] = 0;
   out_7501004244675927010[336] = 0;
   out_7501004244675927010[337] = 0;
   out_7501004244675927010[338] = 0;
   out_7501004244675927010[339] = 0;
   out_7501004244675927010[340] = 0;
   out_7501004244675927010[341] = 0;
   out_7501004244675927010[342] = 0;
   out_7501004244675927010[343] = 0;
   out_7501004244675927010[344] = 0;
   out_7501004244675927010[345] = 0;
   out_7501004244675927010[346] = 0;
   out_7501004244675927010[347] = 0;
   out_7501004244675927010[348] = 0;
   out_7501004244675927010[349] = 0;
   out_7501004244675927010[350] = 0;
   out_7501004244675927010[351] = 0;
   out_7501004244675927010[352] = 1;
   out_7501004244675927010[353] = 0;
   out_7501004244675927010[354] = 0;
   out_7501004244675927010[355] = 0;
   out_7501004244675927010[356] = 0;
   out_7501004244675927010[357] = 0;
   out_7501004244675927010[358] = 0;
   out_7501004244675927010[359] = 0;
   out_7501004244675927010[360] = 0;
   out_7501004244675927010[361] = 0;
   out_7501004244675927010[362] = 0;
   out_7501004244675927010[363] = 0;
   out_7501004244675927010[364] = 0;
   out_7501004244675927010[365] = 0;
   out_7501004244675927010[366] = 0;
   out_7501004244675927010[367] = 0;
   out_7501004244675927010[368] = 0;
   out_7501004244675927010[369] = 0;
   out_7501004244675927010[370] = 0;
   out_7501004244675927010[371] = 0;
   out_7501004244675927010[372] = 0;
   out_7501004244675927010[373] = 0;
   out_7501004244675927010[374] = 1;
   out_7501004244675927010[375] = 0;
   out_7501004244675927010[376] = 0;
   out_7501004244675927010[377] = 0;
   out_7501004244675927010[378] = 0;
   out_7501004244675927010[379] = 0;
   out_7501004244675927010[380] = 0;
   out_7501004244675927010[381] = 0;
   out_7501004244675927010[382] = 0;
   out_7501004244675927010[383] = 0;
   out_7501004244675927010[384] = 0;
   out_7501004244675927010[385] = 0;
   out_7501004244675927010[386] = 0;
   out_7501004244675927010[387] = 0;
   out_7501004244675927010[388] = 0;
   out_7501004244675927010[389] = 0;
   out_7501004244675927010[390] = 0;
   out_7501004244675927010[391] = 0;
   out_7501004244675927010[392] = 0;
   out_7501004244675927010[393] = 0;
   out_7501004244675927010[394] = 0;
   out_7501004244675927010[395] = 0;
   out_7501004244675927010[396] = 1;
   out_7501004244675927010[397] = 0;
   out_7501004244675927010[398] = 0;
   out_7501004244675927010[399] = 0;
   out_7501004244675927010[400] = 0;
   out_7501004244675927010[401] = 0;
   out_7501004244675927010[402] = 0;
   out_7501004244675927010[403] = 0;
   out_7501004244675927010[404] = 0;
   out_7501004244675927010[405] = 0;
   out_7501004244675927010[406] = 0;
   out_7501004244675927010[407] = 0;
   out_7501004244675927010[408] = 0;
   out_7501004244675927010[409] = 0;
   out_7501004244675927010[410] = 0;
   out_7501004244675927010[411] = 0;
   out_7501004244675927010[412] = 0;
   out_7501004244675927010[413] = 0;
   out_7501004244675927010[414] = 0;
   out_7501004244675927010[415] = 0;
   out_7501004244675927010[416] = 0;
   out_7501004244675927010[417] = 0;
   out_7501004244675927010[418] = 1;
   out_7501004244675927010[419] = 0;
   out_7501004244675927010[420] = 0;
   out_7501004244675927010[421] = 0;
   out_7501004244675927010[422] = 0;
   out_7501004244675927010[423] = 0;
   out_7501004244675927010[424] = 0;
   out_7501004244675927010[425] = 0;
   out_7501004244675927010[426] = 0;
   out_7501004244675927010[427] = 0;
   out_7501004244675927010[428] = 0;
   out_7501004244675927010[429] = 0;
   out_7501004244675927010[430] = 0;
   out_7501004244675927010[431] = 0;
   out_7501004244675927010[432] = 0;
   out_7501004244675927010[433] = 0;
   out_7501004244675927010[434] = 0;
   out_7501004244675927010[435] = 0;
   out_7501004244675927010[436] = 0;
   out_7501004244675927010[437] = 0;
   out_7501004244675927010[438] = 0;
   out_7501004244675927010[439] = 0;
   out_7501004244675927010[440] = 1;
}
void h_4(double *state, double *unused, double *out_6934495951339207705) {
   out_6934495951339207705[0] = state[10] + state[13];
   out_6934495951339207705[1] = state[11] + state[14];
   out_6934495951339207705[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4394660202728893828) {
   out_4394660202728893828[0] = 0;
   out_4394660202728893828[1] = 0;
   out_4394660202728893828[2] = 0;
   out_4394660202728893828[3] = 0;
   out_4394660202728893828[4] = 0;
   out_4394660202728893828[5] = 0;
   out_4394660202728893828[6] = 0;
   out_4394660202728893828[7] = 0;
   out_4394660202728893828[8] = 0;
   out_4394660202728893828[9] = 0;
   out_4394660202728893828[10] = 1;
   out_4394660202728893828[11] = 0;
   out_4394660202728893828[12] = 0;
   out_4394660202728893828[13] = 1;
   out_4394660202728893828[14] = 0;
   out_4394660202728893828[15] = 0;
   out_4394660202728893828[16] = 0;
   out_4394660202728893828[17] = 0;
   out_4394660202728893828[18] = 0;
   out_4394660202728893828[19] = 0;
   out_4394660202728893828[20] = 0;
   out_4394660202728893828[21] = 0;
   out_4394660202728893828[22] = 0;
   out_4394660202728893828[23] = 0;
   out_4394660202728893828[24] = 0;
   out_4394660202728893828[25] = 0;
   out_4394660202728893828[26] = 0;
   out_4394660202728893828[27] = 0;
   out_4394660202728893828[28] = 0;
   out_4394660202728893828[29] = 0;
   out_4394660202728893828[30] = 0;
   out_4394660202728893828[31] = 0;
   out_4394660202728893828[32] = 0;
   out_4394660202728893828[33] = 1;
   out_4394660202728893828[34] = 0;
   out_4394660202728893828[35] = 0;
   out_4394660202728893828[36] = 1;
   out_4394660202728893828[37] = 0;
   out_4394660202728893828[38] = 0;
   out_4394660202728893828[39] = 0;
   out_4394660202728893828[40] = 0;
   out_4394660202728893828[41] = 0;
   out_4394660202728893828[42] = 0;
   out_4394660202728893828[43] = 0;
   out_4394660202728893828[44] = 0;
   out_4394660202728893828[45] = 0;
   out_4394660202728893828[46] = 0;
   out_4394660202728893828[47] = 0;
   out_4394660202728893828[48] = 0;
   out_4394660202728893828[49] = 0;
   out_4394660202728893828[50] = 0;
   out_4394660202728893828[51] = 0;
   out_4394660202728893828[52] = 0;
   out_4394660202728893828[53] = 0;
   out_4394660202728893828[54] = 0;
   out_4394660202728893828[55] = 0;
   out_4394660202728893828[56] = 1;
   out_4394660202728893828[57] = 0;
   out_4394660202728893828[58] = 0;
   out_4394660202728893828[59] = 1;
   out_4394660202728893828[60] = 0;
   out_4394660202728893828[61] = 0;
   out_4394660202728893828[62] = 0;
   out_4394660202728893828[63] = 0;
   out_4394660202728893828[64] = 0;
   out_4394660202728893828[65] = 0;
}
void h_9(double *state, double *unused, double *out_7387929548916810335) {
   out_7387929548916810335[0] = state[10];
   out_7387929548916810335[1] = state[11];
   out_7387929548916810335[2] = state[12];
}
void H_9(double *state, double *unused, double *out_1505798650448814486) {
   out_1505798650448814486[0] = 0;
   out_1505798650448814486[1] = 0;
   out_1505798650448814486[2] = 0;
   out_1505798650448814486[3] = 0;
   out_1505798650448814486[4] = 0;
   out_1505798650448814486[5] = 0;
   out_1505798650448814486[6] = 0;
   out_1505798650448814486[7] = 0;
   out_1505798650448814486[8] = 0;
   out_1505798650448814486[9] = 0;
   out_1505798650448814486[10] = 1;
   out_1505798650448814486[11] = 0;
   out_1505798650448814486[12] = 0;
   out_1505798650448814486[13] = 0;
   out_1505798650448814486[14] = 0;
   out_1505798650448814486[15] = 0;
   out_1505798650448814486[16] = 0;
   out_1505798650448814486[17] = 0;
   out_1505798650448814486[18] = 0;
   out_1505798650448814486[19] = 0;
   out_1505798650448814486[20] = 0;
   out_1505798650448814486[21] = 0;
   out_1505798650448814486[22] = 0;
   out_1505798650448814486[23] = 0;
   out_1505798650448814486[24] = 0;
   out_1505798650448814486[25] = 0;
   out_1505798650448814486[26] = 0;
   out_1505798650448814486[27] = 0;
   out_1505798650448814486[28] = 0;
   out_1505798650448814486[29] = 0;
   out_1505798650448814486[30] = 0;
   out_1505798650448814486[31] = 0;
   out_1505798650448814486[32] = 0;
   out_1505798650448814486[33] = 1;
   out_1505798650448814486[34] = 0;
   out_1505798650448814486[35] = 0;
   out_1505798650448814486[36] = 0;
   out_1505798650448814486[37] = 0;
   out_1505798650448814486[38] = 0;
   out_1505798650448814486[39] = 0;
   out_1505798650448814486[40] = 0;
   out_1505798650448814486[41] = 0;
   out_1505798650448814486[42] = 0;
   out_1505798650448814486[43] = 0;
   out_1505798650448814486[44] = 0;
   out_1505798650448814486[45] = 0;
   out_1505798650448814486[46] = 0;
   out_1505798650448814486[47] = 0;
   out_1505798650448814486[48] = 0;
   out_1505798650448814486[49] = 0;
   out_1505798650448814486[50] = 0;
   out_1505798650448814486[51] = 0;
   out_1505798650448814486[52] = 0;
   out_1505798650448814486[53] = 0;
   out_1505798650448814486[54] = 0;
   out_1505798650448814486[55] = 0;
   out_1505798650448814486[56] = 1;
   out_1505798650448814486[57] = 0;
   out_1505798650448814486[58] = 0;
   out_1505798650448814486[59] = 0;
   out_1505798650448814486[60] = 0;
   out_1505798650448814486[61] = 0;
   out_1505798650448814486[62] = 0;
   out_1505798650448814486[63] = 0;
   out_1505798650448814486[64] = 0;
   out_1505798650448814486[65] = 0;
}
void h_10(double *state, double *unused, double *out_6022400556223056722) {
   out_6022400556223056722[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_6022400556223056722[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_6022400556223056722[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_1725494204179519976) {
   out_1725494204179519976[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1725494204179519976[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1725494204179519976[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_1725494204179519976[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1725494204179519976[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1725494204179519976[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1725494204179519976[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1725494204179519976[7] = 0;
   out_1725494204179519976[8] = 0;
   out_1725494204179519976[9] = 0;
   out_1725494204179519976[10] = 0;
   out_1725494204179519976[11] = 0;
   out_1725494204179519976[12] = 0;
   out_1725494204179519976[13] = 0;
   out_1725494204179519976[14] = 0;
   out_1725494204179519976[15] = 0;
   out_1725494204179519976[16] = 1;
   out_1725494204179519976[17] = 0;
   out_1725494204179519976[18] = 0;
   out_1725494204179519976[19] = 1;
   out_1725494204179519976[20] = 0;
   out_1725494204179519976[21] = 0;
   out_1725494204179519976[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1725494204179519976[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1725494204179519976[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_1725494204179519976[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1725494204179519976[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1725494204179519976[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1725494204179519976[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1725494204179519976[29] = 0;
   out_1725494204179519976[30] = 0;
   out_1725494204179519976[31] = 0;
   out_1725494204179519976[32] = 0;
   out_1725494204179519976[33] = 0;
   out_1725494204179519976[34] = 0;
   out_1725494204179519976[35] = 0;
   out_1725494204179519976[36] = 0;
   out_1725494204179519976[37] = 0;
   out_1725494204179519976[38] = 0;
   out_1725494204179519976[39] = 1;
   out_1725494204179519976[40] = 0;
   out_1725494204179519976[41] = 0;
   out_1725494204179519976[42] = 1;
   out_1725494204179519976[43] = 0;
   out_1725494204179519976[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_1725494204179519976[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_1725494204179519976[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1725494204179519976[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1725494204179519976[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1725494204179519976[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1725494204179519976[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1725494204179519976[51] = 0;
   out_1725494204179519976[52] = 0;
   out_1725494204179519976[53] = 0;
   out_1725494204179519976[54] = 0;
   out_1725494204179519976[55] = 0;
   out_1725494204179519976[56] = 0;
   out_1725494204179519976[57] = 0;
   out_1725494204179519976[58] = 0;
   out_1725494204179519976[59] = 0;
   out_1725494204179519976[60] = 0;
   out_1725494204179519976[61] = 0;
   out_1725494204179519976[62] = 1;
   out_1725494204179519976[63] = 0;
   out_1725494204179519976[64] = 0;
   out_1725494204179519976[65] = 1;
}
void h_12(double *state, double *unused, double *out_2512725506475548655) {
   out_2512725506475548655[0] = state[0];
   out_2512725506475548655[1] = state[1];
   out_2512725506475548655[2] = state[2];
}
void H_12(double *state, double *unused, double *out_3773561177681300161) {
   out_3773561177681300161[0] = 1;
   out_3773561177681300161[1] = 0;
   out_3773561177681300161[2] = 0;
   out_3773561177681300161[3] = 0;
   out_3773561177681300161[4] = 0;
   out_3773561177681300161[5] = 0;
   out_3773561177681300161[6] = 0;
   out_3773561177681300161[7] = 0;
   out_3773561177681300161[8] = 0;
   out_3773561177681300161[9] = 0;
   out_3773561177681300161[10] = 0;
   out_3773561177681300161[11] = 0;
   out_3773561177681300161[12] = 0;
   out_3773561177681300161[13] = 0;
   out_3773561177681300161[14] = 0;
   out_3773561177681300161[15] = 0;
   out_3773561177681300161[16] = 0;
   out_3773561177681300161[17] = 0;
   out_3773561177681300161[18] = 0;
   out_3773561177681300161[19] = 0;
   out_3773561177681300161[20] = 0;
   out_3773561177681300161[21] = 0;
   out_3773561177681300161[22] = 0;
   out_3773561177681300161[23] = 1;
   out_3773561177681300161[24] = 0;
   out_3773561177681300161[25] = 0;
   out_3773561177681300161[26] = 0;
   out_3773561177681300161[27] = 0;
   out_3773561177681300161[28] = 0;
   out_3773561177681300161[29] = 0;
   out_3773561177681300161[30] = 0;
   out_3773561177681300161[31] = 0;
   out_3773561177681300161[32] = 0;
   out_3773561177681300161[33] = 0;
   out_3773561177681300161[34] = 0;
   out_3773561177681300161[35] = 0;
   out_3773561177681300161[36] = 0;
   out_3773561177681300161[37] = 0;
   out_3773561177681300161[38] = 0;
   out_3773561177681300161[39] = 0;
   out_3773561177681300161[40] = 0;
   out_3773561177681300161[41] = 0;
   out_3773561177681300161[42] = 0;
   out_3773561177681300161[43] = 0;
   out_3773561177681300161[44] = 0;
   out_3773561177681300161[45] = 0;
   out_3773561177681300161[46] = 1;
   out_3773561177681300161[47] = 0;
   out_3773561177681300161[48] = 0;
   out_3773561177681300161[49] = 0;
   out_3773561177681300161[50] = 0;
   out_3773561177681300161[51] = 0;
   out_3773561177681300161[52] = 0;
   out_3773561177681300161[53] = 0;
   out_3773561177681300161[54] = 0;
   out_3773561177681300161[55] = 0;
   out_3773561177681300161[56] = 0;
   out_3773561177681300161[57] = 0;
   out_3773561177681300161[58] = 0;
   out_3773561177681300161[59] = 0;
   out_3773561177681300161[60] = 0;
   out_3773561177681300161[61] = 0;
   out_3773561177681300161[62] = 0;
   out_3773561177681300161[63] = 0;
   out_3773561177681300161[64] = 0;
   out_3773561177681300161[65] = 0;
}
void h_31(double *state, double *unused, double *out_9122883903975310898) {
   out_9122883903975310898[0] = state[7];
   out_9122883903975310898[1] = state[8];
   out_9122883903975310898[2] = state[9];
}
void H_31(double *state, double *unused, double *out_1027998145356286452) {
   out_1027998145356286452[0] = 0;
   out_1027998145356286452[1] = 0;
   out_1027998145356286452[2] = 0;
   out_1027998145356286452[3] = 0;
   out_1027998145356286452[4] = 0;
   out_1027998145356286452[5] = 0;
   out_1027998145356286452[6] = 0;
   out_1027998145356286452[7] = 1;
   out_1027998145356286452[8] = 0;
   out_1027998145356286452[9] = 0;
   out_1027998145356286452[10] = 0;
   out_1027998145356286452[11] = 0;
   out_1027998145356286452[12] = 0;
   out_1027998145356286452[13] = 0;
   out_1027998145356286452[14] = 0;
   out_1027998145356286452[15] = 0;
   out_1027998145356286452[16] = 0;
   out_1027998145356286452[17] = 0;
   out_1027998145356286452[18] = 0;
   out_1027998145356286452[19] = 0;
   out_1027998145356286452[20] = 0;
   out_1027998145356286452[21] = 0;
   out_1027998145356286452[22] = 0;
   out_1027998145356286452[23] = 0;
   out_1027998145356286452[24] = 0;
   out_1027998145356286452[25] = 0;
   out_1027998145356286452[26] = 0;
   out_1027998145356286452[27] = 0;
   out_1027998145356286452[28] = 0;
   out_1027998145356286452[29] = 0;
   out_1027998145356286452[30] = 1;
   out_1027998145356286452[31] = 0;
   out_1027998145356286452[32] = 0;
   out_1027998145356286452[33] = 0;
   out_1027998145356286452[34] = 0;
   out_1027998145356286452[35] = 0;
   out_1027998145356286452[36] = 0;
   out_1027998145356286452[37] = 0;
   out_1027998145356286452[38] = 0;
   out_1027998145356286452[39] = 0;
   out_1027998145356286452[40] = 0;
   out_1027998145356286452[41] = 0;
   out_1027998145356286452[42] = 0;
   out_1027998145356286452[43] = 0;
   out_1027998145356286452[44] = 0;
   out_1027998145356286452[45] = 0;
   out_1027998145356286452[46] = 0;
   out_1027998145356286452[47] = 0;
   out_1027998145356286452[48] = 0;
   out_1027998145356286452[49] = 0;
   out_1027998145356286452[50] = 0;
   out_1027998145356286452[51] = 0;
   out_1027998145356286452[52] = 0;
   out_1027998145356286452[53] = 1;
   out_1027998145356286452[54] = 0;
   out_1027998145356286452[55] = 0;
   out_1027998145356286452[56] = 0;
   out_1027998145356286452[57] = 0;
   out_1027998145356286452[58] = 0;
   out_1027998145356286452[59] = 0;
   out_1027998145356286452[60] = 0;
   out_1027998145356286452[61] = 0;
   out_1027998145356286452[62] = 0;
   out_1027998145356286452[63] = 0;
   out_1027998145356286452[64] = 0;
   out_1027998145356286452[65] = 0;
}
void h_32(double *state, double *unused, double *out_4592011657649615550) {
   out_4592011657649615550[0] = state[3];
   out_4592011657649615550[1] = state[4];
   out_4592011657649615550[2] = state[5];
   out_4592011657649615550[3] = state[6];
}
void H_32(double *state, double *unused, double *out_896833360415545983) {
   out_896833360415545983[0] = 0;
   out_896833360415545983[1] = 0;
   out_896833360415545983[2] = 0;
   out_896833360415545983[3] = 1;
   out_896833360415545983[4] = 0;
   out_896833360415545983[5] = 0;
   out_896833360415545983[6] = 0;
   out_896833360415545983[7] = 0;
   out_896833360415545983[8] = 0;
   out_896833360415545983[9] = 0;
   out_896833360415545983[10] = 0;
   out_896833360415545983[11] = 0;
   out_896833360415545983[12] = 0;
   out_896833360415545983[13] = 0;
   out_896833360415545983[14] = 0;
   out_896833360415545983[15] = 0;
   out_896833360415545983[16] = 0;
   out_896833360415545983[17] = 0;
   out_896833360415545983[18] = 0;
   out_896833360415545983[19] = 0;
   out_896833360415545983[20] = 0;
   out_896833360415545983[21] = 0;
   out_896833360415545983[22] = 0;
   out_896833360415545983[23] = 0;
   out_896833360415545983[24] = 0;
   out_896833360415545983[25] = 0;
   out_896833360415545983[26] = 1;
   out_896833360415545983[27] = 0;
   out_896833360415545983[28] = 0;
   out_896833360415545983[29] = 0;
   out_896833360415545983[30] = 0;
   out_896833360415545983[31] = 0;
   out_896833360415545983[32] = 0;
   out_896833360415545983[33] = 0;
   out_896833360415545983[34] = 0;
   out_896833360415545983[35] = 0;
   out_896833360415545983[36] = 0;
   out_896833360415545983[37] = 0;
   out_896833360415545983[38] = 0;
   out_896833360415545983[39] = 0;
   out_896833360415545983[40] = 0;
   out_896833360415545983[41] = 0;
   out_896833360415545983[42] = 0;
   out_896833360415545983[43] = 0;
   out_896833360415545983[44] = 0;
   out_896833360415545983[45] = 0;
   out_896833360415545983[46] = 0;
   out_896833360415545983[47] = 0;
   out_896833360415545983[48] = 0;
   out_896833360415545983[49] = 1;
   out_896833360415545983[50] = 0;
   out_896833360415545983[51] = 0;
   out_896833360415545983[52] = 0;
   out_896833360415545983[53] = 0;
   out_896833360415545983[54] = 0;
   out_896833360415545983[55] = 0;
   out_896833360415545983[56] = 0;
   out_896833360415545983[57] = 0;
   out_896833360415545983[58] = 0;
   out_896833360415545983[59] = 0;
   out_896833360415545983[60] = 0;
   out_896833360415545983[61] = 0;
   out_896833360415545983[62] = 0;
   out_896833360415545983[63] = 0;
   out_896833360415545983[64] = 0;
   out_896833360415545983[65] = 0;
   out_896833360415545983[66] = 0;
   out_896833360415545983[67] = 0;
   out_896833360415545983[68] = 0;
   out_896833360415545983[69] = 0;
   out_896833360415545983[70] = 0;
   out_896833360415545983[71] = 0;
   out_896833360415545983[72] = 1;
   out_896833360415545983[73] = 0;
   out_896833360415545983[74] = 0;
   out_896833360415545983[75] = 0;
   out_896833360415545983[76] = 0;
   out_896833360415545983[77] = 0;
   out_896833360415545983[78] = 0;
   out_896833360415545983[79] = 0;
   out_896833360415545983[80] = 0;
   out_896833360415545983[81] = 0;
   out_896833360415545983[82] = 0;
   out_896833360415545983[83] = 0;
   out_896833360415545983[84] = 0;
   out_896833360415545983[85] = 0;
   out_896833360415545983[86] = 0;
   out_896833360415545983[87] = 0;
}
void h_13(double *state, double *unused, double *out_3711051745725782804) {
   out_3711051745725782804[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_3711051745725782804[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_3711051745725782804[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_8612442169034944907) {
   out_8612442169034944907[0] = 0;
   out_8612442169034944907[1] = 0;
   out_8612442169034944907[2] = 0;
   out_8612442169034944907[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8612442169034944907[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8612442169034944907[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_8612442169034944907[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8612442169034944907[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_8612442169034944907[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_8612442169034944907[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_8612442169034944907[10] = 0;
   out_8612442169034944907[11] = 0;
   out_8612442169034944907[12] = 0;
   out_8612442169034944907[13] = 0;
   out_8612442169034944907[14] = 0;
   out_8612442169034944907[15] = 0;
   out_8612442169034944907[16] = 0;
   out_8612442169034944907[17] = 0;
   out_8612442169034944907[18] = 0;
   out_8612442169034944907[19] = 0;
   out_8612442169034944907[20] = 0;
   out_8612442169034944907[21] = 0;
   out_8612442169034944907[22] = 0;
   out_8612442169034944907[23] = 0;
   out_8612442169034944907[24] = 0;
   out_8612442169034944907[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8612442169034944907[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8612442169034944907[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8612442169034944907[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_8612442169034944907[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_8612442169034944907[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_8612442169034944907[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_8612442169034944907[32] = 0;
   out_8612442169034944907[33] = 0;
   out_8612442169034944907[34] = 0;
   out_8612442169034944907[35] = 0;
   out_8612442169034944907[36] = 0;
   out_8612442169034944907[37] = 0;
   out_8612442169034944907[38] = 0;
   out_8612442169034944907[39] = 0;
   out_8612442169034944907[40] = 0;
   out_8612442169034944907[41] = 0;
   out_8612442169034944907[42] = 0;
   out_8612442169034944907[43] = 0;
   out_8612442169034944907[44] = 0;
   out_8612442169034944907[45] = 0;
   out_8612442169034944907[46] = 0;
   out_8612442169034944907[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8612442169034944907[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_8612442169034944907[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8612442169034944907[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8612442169034944907[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_8612442169034944907[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_8612442169034944907[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_8612442169034944907[54] = 0;
   out_8612442169034944907[55] = 0;
   out_8612442169034944907[56] = 0;
   out_8612442169034944907[57] = 0;
   out_8612442169034944907[58] = 0;
   out_8612442169034944907[59] = 0;
   out_8612442169034944907[60] = 0;
   out_8612442169034944907[61] = 0;
   out_8612442169034944907[62] = 0;
   out_8612442169034944907[63] = 0;
   out_8612442169034944907[64] = 0;
   out_8612442169034944907[65] = 0;
}
void h_14(double *state, double *unused, double *out_7387929548916810335) {
   out_7387929548916810335[0] = state[10];
   out_7387929548916810335[1] = state[11];
   out_7387929548916810335[2] = state[12];
}
void H_14(double *state, double *unused, double *out_1505798650448814486) {
   out_1505798650448814486[0] = 0;
   out_1505798650448814486[1] = 0;
   out_1505798650448814486[2] = 0;
   out_1505798650448814486[3] = 0;
   out_1505798650448814486[4] = 0;
   out_1505798650448814486[5] = 0;
   out_1505798650448814486[6] = 0;
   out_1505798650448814486[7] = 0;
   out_1505798650448814486[8] = 0;
   out_1505798650448814486[9] = 0;
   out_1505798650448814486[10] = 1;
   out_1505798650448814486[11] = 0;
   out_1505798650448814486[12] = 0;
   out_1505798650448814486[13] = 0;
   out_1505798650448814486[14] = 0;
   out_1505798650448814486[15] = 0;
   out_1505798650448814486[16] = 0;
   out_1505798650448814486[17] = 0;
   out_1505798650448814486[18] = 0;
   out_1505798650448814486[19] = 0;
   out_1505798650448814486[20] = 0;
   out_1505798650448814486[21] = 0;
   out_1505798650448814486[22] = 0;
   out_1505798650448814486[23] = 0;
   out_1505798650448814486[24] = 0;
   out_1505798650448814486[25] = 0;
   out_1505798650448814486[26] = 0;
   out_1505798650448814486[27] = 0;
   out_1505798650448814486[28] = 0;
   out_1505798650448814486[29] = 0;
   out_1505798650448814486[30] = 0;
   out_1505798650448814486[31] = 0;
   out_1505798650448814486[32] = 0;
   out_1505798650448814486[33] = 1;
   out_1505798650448814486[34] = 0;
   out_1505798650448814486[35] = 0;
   out_1505798650448814486[36] = 0;
   out_1505798650448814486[37] = 0;
   out_1505798650448814486[38] = 0;
   out_1505798650448814486[39] = 0;
   out_1505798650448814486[40] = 0;
   out_1505798650448814486[41] = 0;
   out_1505798650448814486[42] = 0;
   out_1505798650448814486[43] = 0;
   out_1505798650448814486[44] = 0;
   out_1505798650448814486[45] = 0;
   out_1505798650448814486[46] = 0;
   out_1505798650448814486[47] = 0;
   out_1505798650448814486[48] = 0;
   out_1505798650448814486[49] = 0;
   out_1505798650448814486[50] = 0;
   out_1505798650448814486[51] = 0;
   out_1505798650448814486[52] = 0;
   out_1505798650448814486[53] = 0;
   out_1505798650448814486[54] = 0;
   out_1505798650448814486[55] = 0;
   out_1505798650448814486[56] = 1;
   out_1505798650448814486[57] = 0;
   out_1505798650448814486[58] = 0;
   out_1505798650448814486[59] = 0;
   out_1505798650448814486[60] = 0;
   out_1505798650448814486[61] = 0;
   out_1505798650448814486[62] = 0;
   out_1505798650448814486[63] = 0;
   out_1505798650448814486[64] = 0;
   out_1505798650448814486[65] = 0;
}
void h_33(double *state, double *unused, double *out_3390743547420780895) {
   out_3390743547420780895[0] = state[16];
   out_3390743547420780895[1] = state[17];
   out_3390743547420780895[2] = state[18];
}
void H_33(double *state, double *unused, double *out_2122558859282571152) {
   out_2122558859282571152[0] = 0;
   out_2122558859282571152[1] = 0;
   out_2122558859282571152[2] = 0;
   out_2122558859282571152[3] = 0;
   out_2122558859282571152[4] = 0;
   out_2122558859282571152[5] = 0;
   out_2122558859282571152[6] = 0;
   out_2122558859282571152[7] = 0;
   out_2122558859282571152[8] = 0;
   out_2122558859282571152[9] = 0;
   out_2122558859282571152[10] = 0;
   out_2122558859282571152[11] = 0;
   out_2122558859282571152[12] = 0;
   out_2122558859282571152[13] = 0;
   out_2122558859282571152[14] = 0;
   out_2122558859282571152[15] = 0;
   out_2122558859282571152[16] = 1;
   out_2122558859282571152[17] = 0;
   out_2122558859282571152[18] = 0;
   out_2122558859282571152[19] = 0;
   out_2122558859282571152[20] = 0;
   out_2122558859282571152[21] = 0;
   out_2122558859282571152[22] = 0;
   out_2122558859282571152[23] = 0;
   out_2122558859282571152[24] = 0;
   out_2122558859282571152[25] = 0;
   out_2122558859282571152[26] = 0;
   out_2122558859282571152[27] = 0;
   out_2122558859282571152[28] = 0;
   out_2122558859282571152[29] = 0;
   out_2122558859282571152[30] = 0;
   out_2122558859282571152[31] = 0;
   out_2122558859282571152[32] = 0;
   out_2122558859282571152[33] = 0;
   out_2122558859282571152[34] = 0;
   out_2122558859282571152[35] = 0;
   out_2122558859282571152[36] = 0;
   out_2122558859282571152[37] = 0;
   out_2122558859282571152[38] = 0;
   out_2122558859282571152[39] = 1;
   out_2122558859282571152[40] = 0;
   out_2122558859282571152[41] = 0;
   out_2122558859282571152[42] = 0;
   out_2122558859282571152[43] = 0;
   out_2122558859282571152[44] = 0;
   out_2122558859282571152[45] = 0;
   out_2122558859282571152[46] = 0;
   out_2122558859282571152[47] = 0;
   out_2122558859282571152[48] = 0;
   out_2122558859282571152[49] = 0;
   out_2122558859282571152[50] = 0;
   out_2122558859282571152[51] = 0;
   out_2122558859282571152[52] = 0;
   out_2122558859282571152[53] = 0;
   out_2122558859282571152[54] = 0;
   out_2122558859282571152[55] = 0;
   out_2122558859282571152[56] = 0;
   out_2122558859282571152[57] = 0;
   out_2122558859282571152[58] = 0;
   out_2122558859282571152[59] = 0;
   out_2122558859282571152[60] = 0;
   out_2122558859282571152[61] = 0;
   out_2122558859282571152[62] = 1;
   out_2122558859282571152[63] = 0;
   out_2122558859282571152[64] = 0;
   out_2122558859282571152[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_3483100787921365159) {
  H(in_vec, out_3483100787921365159);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_6250513862940019271) {
  err_fun(nom_x, delta_x, out_6250513862940019271);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_2438799314880860478) {
  inv_err_fun(nom_x, true_x, out_2438799314880860478);
}
void live_H_mod_fun(double *state, double *out_6134002557142884385) {
  H_mod_fun(state, out_6134002557142884385);
}
void live_f_fun(double *state, double dt, double *out_5714529502036206260) {
  f_fun(state,  dt, out_5714529502036206260);
}
void live_F_fun(double *state, double dt, double *out_7501004244675927010) {
  F_fun(state,  dt, out_7501004244675927010);
}
void live_h_4(double *state, double *unused, double *out_6934495951339207705) {
  h_4(state, unused, out_6934495951339207705);
}
void live_H_4(double *state, double *unused, double *out_4394660202728893828) {
  H_4(state, unused, out_4394660202728893828);
}
void live_h_9(double *state, double *unused, double *out_7387929548916810335) {
  h_9(state, unused, out_7387929548916810335);
}
void live_H_9(double *state, double *unused, double *out_1505798650448814486) {
  H_9(state, unused, out_1505798650448814486);
}
void live_h_10(double *state, double *unused, double *out_6022400556223056722) {
  h_10(state, unused, out_6022400556223056722);
}
void live_H_10(double *state, double *unused, double *out_1725494204179519976) {
  H_10(state, unused, out_1725494204179519976);
}
void live_h_12(double *state, double *unused, double *out_2512725506475548655) {
  h_12(state, unused, out_2512725506475548655);
}
void live_H_12(double *state, double *unused, double *out_3773561177681300161) {
  H_12(state, unused, out_3773561177681300161);
}
void live_h_31(double *state, double *unused, double *out_9122883903975310898) {
  h_31(state, unused, out_9122883903975310898);
}
void live_H_31(double *state, double *unused, double *out_1027998145356286452) {
  H_31(state, unused, out_1027998145356286452);
}
void live_h_32(double *state, double *unused, double *out_4592011657649615550) {
  h_32(state, unused, out_4592011657649615550);
}
void live_H_32(double *state, double *unused, double *out_896833360415545983) {
  H_32(state, unused, out_896833360415545983);
}
void live_h_13(double *state, double *unused, double *out_3711051745725782804) {
  h_13(state, unused, out_3711051745725782804);
}
void live_H_13(double *state, double *unused, double *out_8612442169034944907) {
  H_13(state, unused, out_8612442169034944907);
}
void live_h_14(double *state, double *unused, double *out_7387929548916810335) {
  h_14(state, unused, out_7387929548916810335);
}
void live_H_14(double *state, double *unused, double *out_1505798650448814486) {
  H_14(state, unused, out_1505798650448814486);
}
void live_h_33(double *state, double *unused, double *out_3390743547420780895) {
  h_33(state, unused, out_3390743547420780895);
}
void live_H_33(double *state, double *unused, double *out_2122558859282571152) {
  H_33(state, unused, out_2122558859282571152);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
