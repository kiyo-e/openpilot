#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_5537917853957494860) {
   out_5537917853957494860[0] = 0;
   out_5537917853957494860[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_5537917853957494860[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_5537917853957494860[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_5537917853957494860[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_5537917853957494860[5] = -sin(in_vec[1]);
   out_5537917853957494860[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5537917853957494860[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5537917853957494860[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_5537917853957494860[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_5537917853957494860[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_5537917853957494860[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_5537917853957494860[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5537917853957494860[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5537917853957494860[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_5537917853957494860[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_5537917853957494860[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_5537917853957494860[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3173224133217314314) {
   out_3173224133217314314[0] = delta_x[0] + nom_x[0];
   out_3173224133217314314[1] = delta_x[1] + nom_x[1];
   out_3173224133217314314[2] = delta_x[2] + nom_x[2];
   out_3173224133217314314[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3173224133217314314[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3173224133217314314[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3173224133217314314[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3173224133217314314[7] = delta_x[6] + nom_x[7];
   out_3173224133217314314[8] = delta_x[7] + nom_x[8];
   out_3173224133217314314[9] = delta_x[8] + nom_x[9];
   out_3173224133217314314[10] = delta_x[9] + nom_x[10];
   out_3173224133217314314[11] = delta_x[10] + nom_x[11];
   out_3173224133217314314[12] = delta_x[11] + nom_x[12];
   out_3173224133217314314[13] = delta_x[12] + nom_x[13];
   out_3173224133217314314[14] = delta_x[13] + nom_x[14];
   out_3173224133217314314[15] = delta_x[14] + nom_x[15];
   out_3173224133217314314[16] = delta_x[15] + nom_x[16];
   out_3173224133217314314[17] = delta_x[16] + nom_x[17];
   out_3173224133217314314[18] = delta_x[17] + nom_x[18];
   out_3173224133217314314[19] = delta_x[18] + nom_x[19];
   out_3173224133217314314[20] = delta_x[19] + nom_x[20];
   out_3173224133217314314[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_2801905154792875483) {
   out_2801905154792875483[0] = -nom_x[0] + true_x[0];
   out_2801905154792875483[1] = -nom_x[1] + true_x[1];
   out_2801905154792875483[2] = -nom_x[2] + true_x[2];
   out_2801905154792875483[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_2801905154792875483[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_2801905154792875483[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_2801905154792875483[6] = -nom_x[7] + true_x[7];
   out_2801905154792875483[7] = -nom_x[8] + true_x[8];
   out_2801905154792875483[8] = -nom_x[9] + true_x[9];
   out_2801905154792875483[9] = -nom_x[10] + true_x[10];
   out_2801905154792875483[10] = -nom_x[11] + true_x[11];
   out_2801905154792875483[11] = -nom_x[12] + true_x[12];
   out_2801905154792875483[12] = -nom_x[13] + true_x[13];
   out_2801905154792875483[13] = -nom_x[14] + true_x[14];
   out_2801905154792875483[14] = -nom_x[15] + true_x[15];
   out_2801905154792875483[15] = -nom_x[16] + true_x[16];
   out_2801905154792875483[16] = -nom_x[17] + true_x[17];
   out_2801905154792875483[17] = -nom_x[18] + true_x[18];
   out_2801905154792875483[18] = -nom_x[19] + true_x[19];
   out_2801905154792875483[19] = -nom_x[20] + true_x[20];
   out_2801905154792875483[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_74819044353985183) {
   out_74819044353985183[0] = 1.0;
   out_74819044353985183[1] = 0;
   out_74819044353985183[2] = 0;
   out_74819044353985183[3] = 0;
   out_74819044353985183[4] = 0;
   out_74819044353985183[5] = 0;
   out_74819044353985183[6] = 0;
   out_74819044353985183[7] = 0;
   out_74819044353985183[8] = 0;
   out_74819044353985183[9] = 0;
   out_74819044353985183[10] = 0;
   out_74819044353985183[11] = 0;
   out_74819044353985183[12] = 0;
   out_74819044353985183[13] = 0;
   out_74819044353985183[14] = 0;
   out_74819044353985183[15] = 0;
   out_74819044353985183[16] = 0;
   out_74819044353985183[17] = 0;
   out_74819044353985183[18] = 0;
   out_74819044353985183[19] = 0;
   out_74819044353985183[20] = 0;
   out_74819044353985183[21] = 0;
   out_74819044353985183[22] = 1.0;
   out_74819044353985183[23] = 0;
   out_74819044353985183[24] = 0;
   out_74819044353985183[25] = 0;
   out_74819044353985183[26] = 0;
   out_74819044353985183[27] = 0;
   out_74819044353985183[28] = 0;
   out_74819044353985183[29] = 0;
   out_74819044353985183[30] = 0;
   out_74819044353985183[31] = 0;
   out_74819044353985183[32] = 0;
   out_74819044353985183[33] = 0;
   out_74819044353985183[34] = 0;
   out_74819044353985183[35] = 0;
   out_74819044353985183[36] = 0;
   out_74819044353985183[37] = 0;
   out_74819044353985183[38] = 0;
   out_74819044353985183[39] = 0;
   out_74819044353985183[40] = 0;
   out_74819044353985183[41] = 0;
   out_74819044353985183[42] = 0;
   out_74819044353985183[43] = 0;
   out_74819044353985183[44] = 1.0;
   out_74819044353985183[45] = 0;
   out_74819044353985183[46] = 0;
   out_74819044353985183[47] = 0;
   out_74819044353985183[48] = 0;
   out_74819044353985183[49] = 0;
   out_74819044353985183[50] = 0;
   out_74819044353985183[51] = 0;
   out_74819044353985183[52] = 0;
   out_74819044353985183[53] = 0;
   out_74819044353985183[54] = 0;
   out_74819044353985183[55] = 0;
   out_74819044353985183[56] = 0;
   out_74819044353985183[57] = 0;
   out_74819044353985183[58] = 0;
   out_74819044353985183[59] = 0;
   out_74819044353985183[60] = 0;
   out_74819044353985183[61] = 0;
   out_74819044353985183[62] = 0;
   out_74819044353985183[63] = 0;
   out_74819044353985183[64] = 0;
   out_74819044353985183[65] = 0;
   out_74819044353985183[66] = -0.5*state[4];
   out_74819044353985183[67] = -0.5*state[5];
   out_74819044353985183[68] = -0.5*state[6];
   out_74819044353985183[69] = 0;
   out_74819044353985183[70] = 0;
   out_74819044353985183[71] = 0;
   out_74819044353985183[72] = 0;
   out_74819044353985183[73] = 0;
   out_74819044353985183[74] = 0;
   out_74819044353985183[75] = 0;
   out_74819044353985183[76] = 0;
   out_74819044353985183[77] = 0;
   out_74819044353985183[78] = 0;
   out_74819044353985183[79] = 0;
   out_74819044353985183[80] = 0;
   out_74819044353985183[81] = 0;
   out_74819044353985183[82] = 0;
   out_74819044353985183[83] = 0;
   out_74819044353985183[84] = 0;
   out_74819044353985183[85] = 0;
   out_74819044353985183[86] = 0;
   out_74819044353985183[87] = 0.5*state[3];
   out_74819044353985183[88] = 0.5*state[6];
   out_74819044353985183[89] = -0.5*state[5];
   out_74819044353985183[90] = 0;
   out_74819044353985183[91] = 0;
   out_74819044353985183[92] = 0;
   out_74819044353985183[93] = 0;
   out_74819044353985183[94] = 0;
   out_74819044353985183[95] = 0;
   out_74819044353985183[96] = 0;
   out_74819044353985183[97] = 0;
   out_74819044353985183[98] = 0;
   out_74819044353985183[99] = 0;
   out_74819044353985183[100] = 0;
   out_74819044353985183[101] = 0;
   out_74819044353985183[102] = 0;
   out_74819044353985183[103] = 0;
   out_74819044353985183[104] = 0;
   out_74819044353985183[105] = 0;
   out_74819044353985183[106] = 0;
   out_74819044353985183[107] = 0;
   out_74819044353985183[108] = -0.5*state[6];
   out_74819044353985183[109] = 0.5*state[3];
   out_74819044353985183[110] = 0.5*state[4];
   out_74819044353985183[111] = 0;
   out_74819044353985183[112] = 0;
   out_74819044353985183[113] = 0;
   out_74819044353985183[114] = 0;
   out_74819044353985183[115] = 0;
   out_74819044353985183[116] = 0;
   out_74819044353985183[117] = 0;
   out_74819044353985183[118] = 0;
   out_74819044353985183[119] = 0;
   out_74819044353985183[120] = 0;
   out_74819044353985183[121] = 0;
   out_74819044353985183[122] = 0;
   out_74819044353985183[123] = 0;
   out_74819044353985183[124] = 0;
   out_74819044353985183[125] = 0;
   out_74819044353985183[126] = 0;
   out_74819044353985183[127] = 0;
   out_74819044353985183[128] = 0;
   out_74819044353985183[129] = 0.5*state[5];
   out_74819044353985183[130] = -0.5*state[4];
   out_74819044353985183[131] = 0.5*state[3];
   out_74819044353985183[132] = 0;
   out_74819044353985183[133] = 0;
   out_74819044353985183[134] = 0;
   out_74819044353985183[135] = 0;
   out_74819044353985183[136] = 0;
   out_74819044353985183[137] = 0;
   out_74819044353985183[138] = 0;
   out_74819044353985183[139] = 0;
   out_74819044353985183[140] = 0;
   out_74819044353985183[141] = 0;
   out_74819044353985183[142] = 0;
   out_74819044353985183[143] = 0;
   out_74819044353985183[144] = 0;
   out_74819044353985183[145] = 0;
   out_74819044353985183[146] = 0;
   out_74819044353985183[147] = 0;
   out_74819044353985183[148] = 0;
   out_74819044353985183[149] = 0;
   out_74819044353985183[150] = 0;
   out_74819044353985183[151] = 0;
   out_74819044353985183[152] = 0;
   out_74819044353985183[153] = 1.0;
   out_74819044353985183[154] = 0;
   out_74819044353985183[155] = 0;
   out_74819044353985183[156] = 0;
   out_74819044353985183[157] = 0;
   out_74819044353985183[158] = 0;
   out_74819044353985183[159] = 0;
   out_74819044353985183[160] = 0;
   out_74819044353985183[161] = 0;
   out_74819044353985183[162] = 0;
   out_74819044353985183[163] = 0;
   out_74819044353985183[164] = 0;
   out_74819044353985183[165] = 0;
   out_74819044353985183[166] = 0;
   out_74819044353985183[167] = 0;
   out_74819044353985183[168] = 0;
   out_74819044353985183[169] = 0;
   out_74819044353985183[170] = 0;
   out_74819044353985183[171] = 0;
   out_74819044353985183[172] = 0;
   out_74819044353985183[173] = 0;
   out_74819044353985183[174] = 0;
   out_74819044353985183[175] = 1.0;
   out_74819044353985183[176] = 0;
   out_74819044353985183[177] = 0;
   out_74819044353985183[178] = 0;
   out_74819044353985183[179] = 0;
   out_74819044353985183[180] = 0;
   out_74819044353985183[181] = 0;
   out_74819044353985183[182] = 0;
   out_74819044353985183[183] = 0;
   out_74819044353985183[184] = 0;
   out_74819044353985183[185] = 0;
   out_74819044353985183[186] = 0;
   out_74819044353985183[187] = 0;
   out_74819044353985183[188] = 0;
   out_74819044353985183[189] = 0;
   out_74819044353985183[190] = 0;
   out_74819044353985183[191] = 0;
   out_74819044353985183[192] = 0;
   out_74819044353985183[193] = 0;
   out_74819044353985183[194] = 0;
   out_74819044353985183[195] = 0;
   out_74819044353985183[196] = 0;
   out_74819044353985183[197] = 1.0;
   out_74819044353985183[198] = 0;
   out_74819044353985183[199] = 0;
   out_74819044353985183[200] = 0;
   out_74819044353985183[201] = 0;
   out_74819044353985183[202] = 0;
   out_74819044353985183[203] = 0;
   out_74819044353985183[204] = 0;
   out_74819044353985183[205] = 0;
   out_74819044353985183[206] = 0;
   out_74819044353985183[207] = 0;
   out_74819044353985183[208] = 0;
   out_74819044353985183[209] = 0;
   out_74819044353985183[210] = 0;
   out_74819044353985183[211] = 0;
   out_74819044353985183[212] = 0;
   out_74819044353985183[213] = 0;
   out_74819044353985183[214] = 0;
   out_74819044353985183[215] = 0;
   out_74819044353985183[216] = 0;
   out_74819044353985183[217] = 0;
   out_74819044353985183[218] = 0;
   out_74819044353985183[219] = 1.0;
   out_74819044353985183[220] = 0;
   out_74819044353985183[221] = 0;
   out_74819044353985183[222] = 0;
   out_74819044353985183[223] = 0;
   out_74819044353985183[224] = 0;
   out_74819044353985183[225] = 0;
   out_74819044353985183[226] = 0;
   out_74819044353985183[227] = 0;
   out_74819044353985183[228] = 0;
   out_74819044353985183[229] = 0;
   out_74819044353985183[230] = 0;
   out_74819044353985183[231] = 0;
   out_74819044353985183[232] = 0;
   out_74819044353985183[233] = 0;
   out_74819044353985183[234] = 0;
   out_74819044353985183[235] = 0;
   out_74819044353985183[236] = 0;
   out_74819044353985183[237] = 0;
   out_74819044353985183[238] = 0;
   out_74819044353985183[239] = 0;
   out_74819044353985183[240] = 0;
   out_74819044353985183[241] = 1.0;
   out_74819044353985183[242] = 0;
   out_74819044353985183[243] = 0;
   out_74819044353985183[244] = 0;
   out_74819044353985183[245] = 0;
   out_74819044353985183[246] = 0;
   out_74819044353985183[247] = 0;
   out_74819044353985183[248] = 0;
   out_74819044353985183[249] = 0;
   out_74819044353985183[250] = 0;
   out_74819044353985183[251] = 0;
   out_74819044353985183[252] = 0;
   out_74819044353985183[253] = 0;
   out_74819044353985183[254] = 0;
   out_74819044353985183[255] = 0;
   out_74819044353985183[256] = 0;
   out_74819044353985183[257] = 0;
   out_74819044353985183[258] = 0;
   out_74819044353985183[259] = 0;
   out_74819044353985183[260] = 0;
   out_74819044353985183[261] = 0;
   out_74819044353985183[262] = 0;
   out_74819044353985183[263] = 1.0;
   out_74819044353985183[264] = 0;
   out_74819044353985183[265] = 0;
   out_74819044353985183[266] = 0;
   out_74819044353985183[267] = 0;
   out_74819044353985183[268] = 0;
   out_74819044353985183[269] = 0;
   out_74819044353985183[270] = 0;
   out_74819044353985183[271] = 0;
   out_74819044353985183[272] = 0;
   out_74819044353985183[273] = 0;
   out_74819044353985183[274] = 0;
   out_74819044353985183[275] = 0;
   out_74819044353985183[276] = 0;
   out_74819044353985183[277] = 0;
   out_74819044353985183[278] = 0;
   out_74819044353985183[279] = 0;
   out_74819044353985183[280] = 0;
   out_74819044353985183[281] = 0;
   out_74819044353985183[282] = 0;
   out_74819044353985183[283] = 0;
   out_74819044353985183[284] = 0;
   out_74819044353985183[285] = 1.0;
   out_74819044353985183[286] = 0;
   out_74819044353985183[287] = 0;
   out_74819044353985183[288] = 0;
   out_74819044353985183[289] = 0;
   out_74819044353985183[290] = 0;
   out_74819044353985183[291] = 0;
   out_74819044353985183[292] = 0;
   out_74819044353985183[293] = 0;
   out_74819044353985183[294] = 0;
   out_74819044353985183[295] = 0;
   out_74819044353985183[296] = 0;
   out_74819044353985183[297] = 0;
   out_74819044353985183[298] = 0;
   out_74819044353985183[299] = 0;
   out_74819044353985183[300] = 0;
   out_74819044353985183[301] = 0;
   out_74819044353985183[302] = 0;
   out_74819044353985183[303] = 0;
   out_74819044353985183[304] = 0;
   out_74819044353985183[305] = 0;
   out_74819044353985183[306] = 0;
   out_74819044353985183[307] = 1.0;
   out_74819044353985183[308] = 0;
   out_74819044353985183[309] = 0;
   out_74819044353985183[310] = 0;
   out_74819044353985183[311] = 0;
   out_74819044353985183[312] = 0;
   out_74819044353985183[313] = 0;
   out_74819044353985183[314] = 0;
   out_74819044353985183[315] = 0;
   out_74819044353985183[316] = 0;
   out_74819044353985183[317] = 0;
   out_74819044353985183[318] = 0;
   out_74819044353985183[319] = 0;
   out_74819044353985183[320] = 0;
   out_74819044353985183[321] = 0;
   out_74819044353985183[322] = 0;
   out_74819044353985183[323] = 0;
   out_74819044353985183[324] = 0;
   out_74819044353985183[325] = 0;
   out_74819044353985183[326] = 0;
   out_74819044353985183[327] = 0;
   out_74819044353985183[328] = 0;
   out_74819044353985183[329] = 1.0;
   out_74819044353985183[330] = 0;
   out_74819044353985183[331] = 0;
   out_74819044353985183[332] = 0;
   out_74819044353985183[333] = 0;
   out_74819044353985183[334] = 0;
   out_74819044353985183[335] = 0;
   out_74819044353985183[336] = 0;
   out_74819044353985183[337] = 0;
   out_74819044353985183[338] = 0;
   out_74819044353985183[339] = 0;
   out_74819044353985183[340] = 0;
   out_74819044353985183[341] = 0;
   out_74819044353985183[342] = 0;
   out_74819044353985183[343] = 0;
   out_74819044353985183[344] = 0;
   out_74819044353985183[345] = 0;
   out_74819044353985183[346] = 0;
   out_74819044353985183[347] = 0;
   out_74819044353985183[348] = 0;
   out_74819044353985183[349] = 0;
   out_74819044353985183[350] = 0;
   out_74819044353985183[351] = 1.0;
   out_74819044353985183[352] = 0;
   out_74819044353985183[353] = 0;
   out_74819044353985183[354] = 0;
   out_74819044353985183[355] = 0;
   out_74819044353985183[356] = 0;
   out_74819044353985183[357] = 0;
   out_74819044353985183[358] = 0;
   out_74819044353985183[359] = 0;
   out_74819044353985183[360] = 0;
   out_74819044353985183[361] = 0;
   out_74819044353985183[362] = 0;
   out_74819044353985183[363] = 0;
   out_74819044353985183[364] = 0;
   out_74819044353985183[365] = 0;
   out_74819044353985183[366] = 0;
   out_74819044353985183[367] = 0;
   out_74819044353985183[368] = 0;
   out_74819044353985183[369] = 0;
   out_74819044353985183[370] = 0;
   out_74819044353985183[371] = 0;
   out_74819044353985183[372] = 0;
   out_74819044353985183[373] = 1.0;
   out_74819044353985183[374] = 0;
   out_74819044353985183[375] = 0;
   out_74819044353985183[376] = 0;
   out_74819044353985183[377] = 0;
   out_74819044353985183[378] = 0;
   out_74819044353985183[379] = 0;
   out_74819044353985183[380] = 0;
   out_74819044353985183[381] = 0;
   out_74819044353985183[382] = 0;
   out_74819044353985183[383] = 0;
   out_74819044353985183[384] = 0;
   out_74819044353985183[385] = 0;
   out_74819044353985183[386] = 0;
   out_74819044353985183[387] = 0;
   out_74819044353985183[388] = 0;
   out_74819044353985183[389] = 0;
   out_74819044353985183[390] = 0;
   out_74819044353985183[391] = 0;
   out_74819044353985183[392] = 0;
   out_74819044353985183[393] = 0;
   out_74819044353985183[394] = 0;
   out_74819044353985183[395] = 1.0;
   out_74819044353985183[396] = 0;
   out_74819044353985183[397] = 0;
   out_74819044353985183[398] = 0;
   out_74819044353985183[399] = 0;
   out_74819044353985183[400] = 0;
   out_74819044353985183[401] = 0;
   out_74819044353985183[402] = 0;
   out_74819044353985183[403] = 0;
   out_74819044353985183[404] = 0;
   out_74819044353985183[405] = 0;
   out_74819044353985183[406] = 0;
   out_74819044353985183[407] = 0;
   out_74819044353985183[408] = 0;
   out_74819044353985183[409] = 0;
   out_74819044353985183[410] = 0;
   out_74819044353985183[411] = 0;
   out_74819044353985183[412] = 0;
   out_74819044353985183[413] = 0;
   out_74819044353985183[414] = 0;
   out_74819044353985183[415] = 0;
   out_74819044353985183[416] = 0;
   out_74819044353985183[417] = 1.0;
   out_74819044353985183[418] = 0;
   out_74819044353985183[419] = 0;
   out_74819044353985183[420] = 0;
   out_74819044353985183[421] = 0;
   out_74819044353985183[422] = 0;
   out_74819044353985183[423] = 0;
   out_74819044353985183[424] = 0;
   out_74819044353985183[425] = 0;
   out_74819044353985183[426] = 0;
   out_74819044353985183[427] = 0;
   out_74819044353985183[428] = 0;
   out_74819044353985183[429] = 0;
   out_74819044353985183[430] = 0;
   out_74819044353985183[431] = 0;
   out_74819044353985183[432] = 0;
   out_74819044353985183[433] = 0;
   out_74819044353985183[434] = 0;
   out_74819044353985183[435] = 0;
   out_74819044353985183[436] = 0;
   out_74819044353985183[437] = 0;
   out_74819044353985183[438] = 0;
   out_74819044353985183[439] = 1.0;
   out_74819044353985183[440] = 0;
   out_74819044353985183[441] = 0;
   out_74819044353985183[442] = 0;
   out_74819044353985183[443] = 0;
   out_74819044353985183[444] = 0;
   out_74819044353985183[445] = 0;
   out_74819044353985183[446] = 0;
   out_74819044353985183[447] = 0;
   out_74819044353985183[448] = 0;
   out_74819044353985183[449] = 0;
   out_74819044353985183[450] = 0;
   out_74819044353985183[451] = 0;
   out_74819044353985183[452] = 0;
   out_74819044353985183[453] = 0;
   out_74819044353985183[454] = 0;
   out_74819044353985183[455] = 0;
   out_74819044353985183[456] = 0;
   out_74819044353985183[457] = 0;
   out_74819044353985183[458] = 0;
   out_74819044353985183[459] = 0;
   out_74819044353985183[460] = 0;
   out_74819044353985183[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_4760523032026918799) {
   out_4760523032026918799[0] = dt*state[7] + state[0];
   out_4760523032026918799[1] = dt*state[8] + state[1];
   out_4760523032026918799[2] = dt*state[9] + state[2];
   out_4760523032026918799[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_4760523032026918799[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_4760523032026918799[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_4760523032026918799[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_4760523032026918799[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_4760523032026918799[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_4760523032026918799[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_4760523032026918799[10] = state[10];
   out_4760523032026918799[11] = state[11];
   out_4760523032026918799[12] = state[12];
   out_4760523032026918799[13] = state[13];
   out_4760523032026918799[14] = state[14];
   out_4760523032026918799[15] = state[15];
   out_4760523032026918799[16] = state[16];
   out_4760523032026918799[17] = state[17];
   out_4760523032026918799[18] = state[18];
   out_4760523032026918799[19] = state[19];
   out_4760523032026918799[20] = state[20];
   out_4760523032026918799[21] = state[21];
}
void F_fun(double *state, double dt, double *out_8496492668489745222) {
   out_8496492668489745222[0] = 1;
   out_8496492668489745222[1] = 0;
   out_8496492668489745222[2] = 0;
   out_8496492668489745222[3] = 0;
   out_8496492668489745222[4] = 0;
   out_8496492668489745222[5] = 0;
   out_8496492668489745222[6] = dt;
   out_8496492668489745222[7] = 0;
   out_8496492668489745222[8] = 0;
   out_8496492668489745222[9] = 0;
   out_8496492668489745222[10] = 0;
   out_8496492668489745222[11] = 0;
   out_8496492668489745222[12] = 0;
   out_8496492668489745222[13] = 0;
   out_8496492668489745222[14] = 0;
   out_8496492668489745222[15] = 0;
   out_8496492668489745222[16] = 0;
   out_8496492668489745222[17] = 0;
   out_8496492668489745222[18] = 0;
   out_8496492668489745222[19] = 0;
   out_8496492668489745222[20] = 0;
   out_8496492668489745222[21] = 0;
   out_8496492668489745222[22] = 1;
   out_8496492668489745222[23] = 0;
   out_8496492668489745222[24] = 0;
   out_8496492668489745222[25] = 0;
   out_8496492668489745222[26] = 0;
   out_8496492668489745222[27] = 0;
   out_8496492668489745222[28] = dt;
   out_8496492668489745222[29] = 0;
   out_8496492668489745222[30] = 0;
   out_8496492668489745222[31] = 0;
   out_8496492668489745222[32] = 0;
   out_8496492668489745222[33] = 0;
   out_8496492668489745222[34] = 0;
   out_8496492668489745222[35] = 0;
   out_8496492668489745222[36] = 0;
   out_8496492668489745222[37] = 0;
   out_8496492668489745222[38] = 0;
   out_8496492668489745222[39] = 0;
   out_8496492668489745222[40] = 0;
   out_8496492668489745222[41] = 0;
   out_8496492668489745222[42] = 0;
   out_8496492668489745222[43] = 0;
   out_8496492668489745222[44] = 1;
   out_8496492668489745222[45] = 0;
   out_8496492668489745222[46] = 0;
   out_8496492668489745222[47] = 0;
   out_8496492668489745222[48] = 0;
   out_8496492668489745222[49] = 0;
   out_8496492668489745222[50] = dt;
   out_8496492668489745222[51] = 0;
   out_8496492668489745222[52] = 0;
   out_8496492668489745222[53] = 0;
   out_8496492668489745222[54] = 0;
   out_8496492668489745222[55] = 0;
   out_8496492668489745222[56] = 0;
   out_8496492668489745222[57] = 0;
   out_8496492668489745222[58] = 0;
   out_8496492668489745222[59] = 0;
   out_8496492668489745222[60] = 0;
   out_8496492668489745222[61] = 0;
   out_8496492668489745222[62] = 0;
   out_8496492668489745222[63] = 0;
   out_8496492668489745222[64] = 0;
   out_8496492668489745222[65] = 0;
   out_8496492668489745222[66] = 1;
   out_8496492668489745222[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8496492668489745222[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_8496492668489745222[69] = 0;
   out_8496492668489745222[70] = 0;
   out_8496492668489745222[71] = 0;
   out_8496492668489745222[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8496492668489745222[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8496492668489745222[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8496492668489745222[75] = 0;
   out_8496492668489745222[76] = 0;
   out_8496492668489745222[77] = 0;
   out_8496492668489745222[78] = 0;
   out_8496492668489745222[79] = 0;
   out_8496492668489745222[80] = 0;
   out_8496492668489745222[81] = 0;
   out_8496492668489745222[82] = 0;
   out_8496492668489745222[83] = 0;
   out_8496492668489745222[84] = 0;
   out_8496492668489745222[85] = 0;
   out_8496492668489745222[86] = 0;
   out_8496492668489745222[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8496492668489745222[88] = 1;
   out_8496492668489745222[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_8496492668489745222[90] = 0;
   out_8496492668489745222[91] = 0;
   out_8496492668489745222[92] = 0;
   out_8496492668489745222[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8496492668489745222[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8496492668489745222[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8496492668489745222[96] = 0;
   out_8496492668489745222[97] = 0;
   out_8496492668489745222[98] = 0;
   out_8496492668489745222[99] = 0;
   out_8496492668489745222[100] = 0;
   out_8496492668489745222[101] = 0;
   out_8496492668489745222[102] = 0;
   out_8496492668489745222[103] = 0;
   out_8496492668489745222[104] = 0;
   out_8496492668489745222[105] = 0;
   out_8496492668489745222[106] = 0;
   out_8496492668489745222[107] = 0;
   out_8496492668489745222[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_8496492668489745222[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_8496492668489745222[110] = 1;
   out_8496492668489745222[111] = 0;
   out_8496492668489745222[112] = 0;
   out_8496492668489745222[113] = 0;
   out_8496492668489745222[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8496492668489745222[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8496492668489745222[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8496492668489745222[117] = 0;
   out_8496492668489745222[118] = 0;
   out_8496492668489745222[119] = 0;
   out_8496492668489745222[120] = 0;
   out_8496492668489745222[121] = 0;
   out_8496492668489745222[122] = 0;
   out_8496492668489745222[123] = 0;
   out_8496492668489745222[124] = 0;
   out_8496492668489745222[125] = 0;
   out_8496492668489745222[126] = 0;
   out_8496492668489745222[127] = 0;
   out_8496492668489745222[128] = 0;
   out_8496492668489745222[129] = 0;
   out_8496492668489745222[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8496492668489745222[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_8496492668489745222[132] = 1;
   out_8496492668489745222[133] = 0;
   out_8496492668489745222[134] = 0;
   out_8496492668489745222[135] = 0;
   out_8496492668489745222[136] = 0;
   out_8496492668489745222[137] = 0;
   out_8496492668489745222[138] = 0;
   out_8496492668489745222[139] = 0;
   out_8496492668489745222[140] = 0;
   out_8496492668489745222[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8496492668489745222[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8496492668489745222[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8496492668489745222[144] = 0;
   out_8496492668489745222[145] = 0;
   out_8496492668489745222[146] = 0;
   out_8496492668489745222[147] = 0;
   out_8496492668489745222[148] = 0;
   out_8496492668489745222[149] = 0;
   out_8496492668489745222[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8496492668489745222[151] = 0;
   out_8496492668489745222[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_8496492668489745222[153] = 0;
   out_8496492668489745222[154] = 1;
   out_8496492668489745222[155] = 0;
   out_8496492668489745222[156] = 0;
   out_8496492668489745222[157] = 0;
   out_8496492668489745222[158] = 0;
   out_8496492668489745222[159] = 0;
   out_8496492668489745222[160] = 0;
   out_8496492668489745222[161] = 0;
   out_8496492668489745222[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8496492668489745222[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8496492668489745222[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8496492668489745222[165] = 0;
   out_8496492668489745222[166] = 0;
   out_8496492668489745222[167] = 0;
   out_8496492668489745222[168] = 0;
   out_8496492668489745222[169] = 0;
   out_8496492668489745222[170] = 0;
   out_8496492668489745222[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_8496492668489745222[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_8496492668489745222[173] = 0;
   out_8496492668489745222[174] = 0;
   out_8496492668489745222[175] = 0;
   out_8496492668489745222[176] = 1;
   out_8496492668489745222[177] = 0;
   out_8496492668489745222[178] = 0;
   out_8496492668489745222[179] = 0;
   out_8496492668489745222[180] = 0;
   out_8496492668489745222[181] = 0;
   out_8496492668489745222[182] = 0;
   out_8496492668489745222[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8496492668489745222[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8496492668489745222[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8496492668489745222[186] = 0;
   out_8496492668489745222[187] = 0;
   out_8496492668489745222[188] = 0;
   out_8496492668489745222[189] = 0;
   out_8496492668489745222[190] = 0;
   out_8496492668489745222[191] = 0;
   out_8496492668489745222[192] = 0;
   out_8496492668489745222[193] = 0;
   out_8496492668489745222[194] = 0;
   out_8496492668489745222[195] = 0;
   out_8496492668489745222[196] = 0;
   out_8496492668489745222[197] = 0;
   out_8496492668489745222[198] = 1;
   out_8496492668489745222[199] = 0;
   out_8496492668489745222[200] = 0;
   out_8496492668489745222[201] = 0;
   out_8496492668489745222[202] = 0;
   out_8496492668489745222[203] = 0;
   out_8496492668489745222[204] = 0;
   out_8496492668489745222[205] = 0;
   out_8496492668489745222[206] = 0;
   out_8496492668489745222[207] = 0;
   out_8496492668489745222[208] = 0;
   out_8496492668489745222[209] = 0;
   out_8496492668489745222[210] = 0;
   out_8496492668489745222[211] = 0;
   out_8496492668489745222[212] = 0;
   out_8496492668489745222[213] = 0;
   out_8496492668489745222[214] = 0;
   out_8496492668489745222[215] = 0;
   out_8496492668489745222[216] = 0;
   out_8496492668489745222[217] = 0;
   out_8496492668489745222[218] = 0;
   out_8496492668489745222[219] = 0;
   out_8496492668489745222[220] = 1;
   out_8496492668489745222[221] = 0;
   out_8496492668489745222[222] = 0;
   out_8496492668489745222[223] = 0;
   out_8496492668489745222[224] = 0;
   out_8496492668489745222[225] = 0;
   out_8496492668489745222[226] = 0;
   out_8496492668489745222[227] = 0;
   out_8496492668489745222[228] = 0;
   out_8496492668489745222[229] = 0;
   out_8496492668489745222[230] = 0;
   out_8496492668489745222[231] = 0;
   out_8496492668489745222[232] = 0;
   out_8496492668489745222[233] = 0;
   out_8496492668489745222[234] = 0;
   out_8496492668489745222[235] = 0;
   out_8496492668489745222[236] = 0;
   out_8496492668489745222[237] = 0;
   out_8496492668489745222[238] = 0;
   out_8496492668489745222[239] = 0;
   out_8496492668489745222[240] = 0;
   out_8496492668489745222[241] = 0;
   out_8496492668489745222[242] = 1;
   out_8496492668489745222[243] = 0;
   out_8496492668489745222[244] = 0;
   out_8496492668489745222[245] = 0;
   out_8496492668489745222[246] = 0;
   out_8496492668489745222[247] = 0;
   out_8496492668489745222[248] = 0;
   out_8496492668489745222[249] = 0;
   out_8496492668489745222[250] = 0;
   out_8496492668489745222[251] = 0;
   out_8496492668489745222[252] = 0;
   out_8496492668489745222[253] = 0;
   out_8496492668489745222[254] = 0;
   out_8496492668489745222[255] = 0;
   out_8496492668489745222[256] = 0;
   out_8496492668489745222[257] = 0;
   out_8496492668489745222[258] = 0;
   out_8496492668489745222[259] = 0;
   out_8496492668489745222[260] = 0;
   out_8496492668489745222[261] = 0;
   out_8496492668489745222[262] = 0;
   out_8496492668489745222[263] = 0;
   out_8496492668489745222[264] = 1;
   out_8496492668489745222[265] = 0;
   out_8496492668489745222[266] = 0;
   out_8496492668489745222[267] = 0;
   out_8496492668489745222[268] = 0;
   out_8496492668489745222[269] = 0;
   out_8496492668489745222[270] = 0;
   out_8496492668489745222[271] = 0;
   out_8496492668489745222[272] = 0;
   out_8496492668489745222[273] = 0;
   out_8496492668489745222[274] = 0;
   out_8496492668489745222[275] = 0;
   out_8496492668489745222[276] = 0;
   out_8496492668489745222[277] = 0;
   out_8496492668489745222[278] = 0;
   out_8496492668489745222[279] = 0;
   out_8496492668489745222[280] = 0;
   out_8496492668489745222[281] = 0;
   out_8496492668489745222[282] = 0;
   out_8496492668489745222[283] = 0;
   out_8496492668489745222[284] = 0;
   out_8496492668489745222[285] = 0;
   out_8496492668489745222[286] = 1;
   out_8496492668489745222[287] = 0;
   out_8496492668489745222[288] = 0;
   out_8496492668489745222[289] = 0;
   out_8496492668489745222[290] = 0;
   out_8496492668489745222[291] = 0;
   out_8496492668489745222[292] = 0;
   out_8496492668489745222[293] = 0;
   out_8496492668489745222[294] = 0;
   out_8496492668489745222[295] = 0;
   out_8496492668489745222[296] = 0;
   out_8496492668489745222[297] = 0;
   out_8496492668489745222[298] = 0;
   out_8496492668489745222[299] = 0;
   out_8496492668489745222[300] = 0;
   out_8496492668489745222[301] = 0;
   out_8496492668489745222[302] = 0;
   out_8496492668489745222[303] = 0;
   out_8496492668489745222[304] = 0;
   out_8496492668489745222[305] = 0;
   out_8496492668489745222[306] = 0;
   out_8496492668489745222[307] = 0;
   out_8496492668489745222[308] = 1;
   out_8496492668489745222[309] = 0;
   out_8496492668489745222[310] = 0;
   out_8496492668489745222[311] = 0;
   out_8496492668489745222[312] = 0;
   out_8496492668489745222[313] = 0;
   out_8496492668489745222[314] = 0;
   out_8496492668489745222[315] = 0;
   out_8496492668489745222[316] = 0;
   out_8496492668489745222[317] = 0;
   out_8496492668489745222[318] = 0;
   out_8496492668489745222[319] = 0;
   out_8496492668489745222[320] = 0;
   out_8496492668489745222[321] = 0;
   out_8496492668489745222[322] = 0;
   out_8496492668489745222[323] = 0;
   out_8496492668489745222[324] = 0;
   out_8496492668489745222[325] = 0;
   out_8496492668489745222[326] = 0;
   out_8496492668489745222[327] = 0;
   out_8496492668489745222[328] = 0;
   out_8496492668489745222[329] = 0;
   out_8496492668489745222[330] = 1;
   out_8496492668489745222[331] = 0;
   out_8496492668489745222[332] = 0;
   out_8496492668489745222[333] = 0;
   out_8496492668489745222[334] = 0;
   out_8496492668489745222[335] = 0;
   out_8496492668489745222[336] = 0;
   out_8496492668489745222[337] = 0;
   out_8496492668489745222[338] = 0;
   out_8496492668489745222[339] = 0;
   out_8496492668489745222[340] = 0;
   out_8496492668489745222[341] = 0;
   out_8496492668489745222[342] = 0;
   out_8496492668489745222[343] = 0;
   out_8496492668489745222[344] = 0;
   out_8496492668489745222[345] = 0;
   out_8496492668489745222[346] = 0;
   out_8496492668489745222[347] = 0;
   out_8496492668489745222[348] = 0;
   out_8496492668489745222[349] = 0;
   out_8496492668489745222[350] = 0;
   out_8496492668489745222[351] = 0;
   out_8496492668489745222[352] = 1;
   out_8496492668489745222[353] = 0;
   out_8496492668489745222[354] = 0;
   out_8496492668489745222[355] = 0;
   out_8496492668489745222[356] = 0;
   out_8496492668489745222[357] = 0;
   out_8496492668489745222[358] = 0;
   out_8496492668489745222[359] = 0;
   out_8496492668489745222[360] = 0;
   out_8496492668489745222[361] = 0;
   out_8496492668489745222[362] = 0;
   out_8496492668489745222[363] = 0;
   out_8496492668489745222[364] = 0;
   out_8496492668489745222[365] = 0;
   out_8496492668489745222[366] = 0;
   out_8496492668489745222[367] = 0;
   out_8496492668489745222[368] = 0;
   out_8496492668489745222[369] = 0;
   out_8496492668489745222[370] = 0;
   out_8496492668489745222[371] = 0;
   out_8496492668489745222[372] = 0;
   out_8496492668489745222[373] = 0;
   out_8496492668489745222[374] = 1;
   out_8496492668489745222[375] = 0;
   out_8496492668489745222[376] = 0;
   out_8496492668489745222[377] = 0;
   out_8496492668489745222[378] = 0;
   out_8496492668489745222[379] = 0;
   out_8496492668489745222[380] = 0;
   out_8496492668489745222[381] = 0;
   out_8496492668489745222[382] = 0;
   out_8496492668489745222[383] = 0;
   out_8496492668489745222[384] = 0;
   out_8496492668489745222[385] = 0;
   out_8496492668489745222[386] = 0;
   out_8496492668489745222[387] = 0;
   out_8496492668489745222[388] = 0;
   out_8496492668489745222[389] = 0;
   out_8496492668489745222[390] = 0;
   out_8496492668489745222[391] = 0;
   out_8496492668489745222[392] = 0;
   out_8496492668489745222[393] = 0;
   out_8496492668489745222[394] = 0;
   out_8496492668489745222[395] = 0;
   out_8496492668489745222[396] = 1;
   out_8496492668489745222[397] = 0;
   out_8496492668489745222[398] = 0;
   out_8496492668489745222[399] = 0;
   out_8496492668489745222[400] = 0;
   out_8496492668489745222[401] = 0;
   out_8496492668489745222[402] = 0;
   out_8496492668489745222[403] = 0;
   out_8496492668489745222[404] = 0;
   out_8496492668489745222[405] = 0;
   out_8496492668489745222[406] = 0;
   out_8496492668489745222[407] = 0;
   out_8496492668489745222[408] = 0;
   out_8496492668489745222[409] = 0;
   out_8496492668489745222[410] = 0;
   out_8496492668489745222[411] = 0;
   out_8496492668489745222[412] = 0;
   out_8496492668489745222[413] = 0;
   out_8496492668489745222[414] = 0;
   out_8496492668489745222[415] = 0;
   out_8496492668489745222[416] = 0;
   out_8496492668489745222[417] = 0;
   out_8496492668489745222[418] = 1;
   out_8496492668489745222[419] = 0;
   out_8496492668489745222[420] = 0;
   out_8496492668489745222[421] = 0;
   out_8496492668489745222[422] = 0;
   out_8496492668489745222[423] = 0;
   out_8496492668489745222[424] = 0;
   out_8496492668489745222[425] = 0;
   out_8496492668489745222[426] = 0;
   out_8496492668489745222[427] = 0;
   out_8496492668489745222[428] = 0;
   out_8496492668489745222[429] = 0;
   out_8496492668489745222[430] = 0;
   out_8496492668489745222[431] = 0;
   out_8496492668489745222[432] = 0;
   out_8496492668489745222[433] = 0;
   out_8496492668489745222[434] = 0;
   out_8496492668489745222[435] = 0;
   out_8496492668489745222[436] = 0;
   out_8496492668489745222[437] = 0;
   out_8496492668489745222[438] = 0;
   out_8496492668489745222[439] = 0;
   out_8496492668489745222[440] = 1;
}
void h_4(double *state, double *unused, double *out_4917282499255070247) {
   out_4917282499255070247[0] = state[10] + state[13];
   out_4917282499255070247[1] = state[11] + state[14];
   out_4917282499255070247[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_2921092052629370473) {
   out_2921092052629370473[0] = 0;
   out_2921092052629370473[1] = 0;
   out_2921092052629370473[2] = 0;
   out_2921092052629370473[3] = 0;
   out_2921092052629370473[4] = 0;
   out_2921092052629370473[5] = 0;
   out_2921092052629370473[6] = 0;
   out_2921092052629370473[7] = 0;
   out_2921092052629370473[8] = 0;
   out_2921092052629370473[9] = 0;
   out_2921092052629370473[10] = 1;
   out_2921092052629370473[11] = 0;
   out_2921092052629370473[12] = 0;
   out_2921092052629370473[13] = 1;
   out_2921092052629370473[14] = 0;
   out_2921092052629370473[15] = 0;
   out_2921092052629370473[16] = 0;
   out_2921092052629370473[17] = 0;
   out_2921092052629370473[18] = 0;
   out_2921092052629370473[19] = 0;
   out_2921092052629370473[20] = 0;
   out_2921092052629370473[21] = 0;
   out_2921092052629370473[22] = 0;
   out_2921092052629370473[23] = 0;
   out_2921092052629370473[24] = 0;
   out_2921092052629370473[25] = 0;
   out_2921092052629370473[26] = 0;
   out_2921092052629370473[27] = 0;
   out_2921092052629370473[28] = 0;
   out_2921092052629370473[29] = 0;
   out_2921092052629370473[30] = 0;
   out_2921092052629370473[31] = 0;
   out_2921092052629370473[32] = 0;
   out_2921092052629370473[33] = 1;
   out_2921092052629370473[34] = 0;
   out_2921092052629370473[35] = 0;
   out_2921092052629370473[36] = 1;
   out_2921092052629370473[37] = 0;
   out_2921092052629370473[38] = 0;
   out_2921092052629370473[39] = 0;
   out_2921092052629370473[40] = 0;
   out_2921092052629370473[41] = 0;
   out_2921092052629370473[42] = 0;
   out_2921092052629370473[43] = 0;
   out_2921092052629370473[44] = 0;
   out_2921092052629370473[45] = 0;
   out_2921092052629370473[46] = 0;
   out_2921092052629370473[47] = 0;
   out_2921092052629370473[48] = 0;
   out_2921092052629370473[49] = 0;
   out_2921092052629370473[50] = 0;
   out_2921092052629370473[51] = 0;
   out_2921092052629370473[52] = 0;
   out_2921092052629370473[53] = 0;
   out_2921092052629370473[54] = 0;
   out_2921092052629370473[55] = 0;
   out_2921092052629370473[56] = 1;
   out_2921092052629370473[57] = 0;
   out_2921092052629370473[58] = 0;
   out_2921092052629370473[59] = 1;
   out_2921092052629370473[60] = 0;
   out_2921092052629370473[61] = 0;
   out_2921092052629370473[62] = 0;
   out_2921092052629370473[63] = 0;
   out_2921092052629370473[64] = 0;
   out_2921092052629370473[65] = 0;
}
void h_9(double *state, double *unused, double *out_6325298498358679280) {
   out_6325298498358679280[0] = state[10];
   out_6325298498358679280[1] = state[11];
   out_6325298498358679280[2] = state[12];
}
void H_9(double *state, double *unused, double *out_3162281699258961118) {
   out_3162281699258961118[0] = 0;
   out_3162281699258961118[1] = 0;
   out_3162281699258961118[2] = 0;
   out_3162281699258961118[3] = 0;
   out_3162281699258961118[4] = 0;
   out_3162281699258961118[5] = 0;
   out_3162281699258961118[6] = 0;
   out_3162281699258961118[7] = 0;
   out_3162281699258961118[8] = 0;
   out_3162281699258961118[9] = 0;
   out_3162281699258961118[10] = 1;
   out_3162281699258961118[11] = 0;
   out_3162281699258961118[12] = 0;
   out_3162281699258961118[13] = 0;
   out_3162281699258961118[14] = 0;
   out_3162281699258961118[15] = 0;
   out_3162281699258961118[16] = 0;
   out_3162281699258961118[17] = 0;
   out_3162281699258961118[18] = 0;
   out_3162281699258961118[19] = 0;
   out_3162281699258961118[20] = 0;
   out_3162281699258961118[21] = 0;
   out_3162281699258961118[22] = 0;
   out_3162281699258961118[23] = 0;
   out_3162281699258961118[24] = 0;
   out_3162281699258961118[25] = 0;
   out_3162281699258961118[26] = 0;
   out_3162281699258961118[27] = 0;
   out_3162281699258961118[28] = 0;
   out_3162281699258961118[29] = 0;
   out_3162281699258961118[30] = 0;
   out_3162281699258961118[31] = 0;
   out_3162281699258961118[32] = 0;
   out_3162281699258961118[33] = 1;
   out_3162281699258961118[34] = 0;
   out_3162281699258961118[35] = 0;
   out_3162281699258961118[36] = 0;
   out_3162281699258961118[37] = 0;
   out_3162281699258961118[38] = 0;
   out_3162281699258961118[39] = 0;
   out_3162281699258961118[40] = 0;
   out_3162281699258961118[41] = 0;
   out_3162281699258961118[42] = 0;
   out_3162281699258961118[43] = 0;
   out_3162281699258961118[44] = 0;
   out_3162281699258961118[45] = 0;
   out_3162281699258961118[46] = 0;
   out_3162281699258961118[47] = 0;
   out_3162281699258961118[48] = 0;
   out_3162281699258961118[49] = 0;
   out_3162281699258961118[50] = 0;
   out_3162281699258961118[51] = 0;
   out_3162281699258961118[52] = 0;
   out_3162281699258961118[53] = 0;
   out_3162281699258961118[54] = 0;
   out_3162281699258961118[55] = 0;
   out_3162281699258961118[56] = 1;
   out_3162281699258961118[57] = 0;
   out_3162281699258961118[58] = 0;
   out_3162281699258961118[59] = 0;
   out_3162281699258961118[60] = 0;
   out_3162281699258961118[61] = 0;
   out_3162281699258961118[62] = 0;
   out_3162281699258961118[63] = 0;
   out_3162281699258961118[64] = 0;
   out_3162281699258961118[65] = 0;
}
void h_10(double *state, double *unused, double *out_156214839265580708) {
   out_156214839265580708[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_156214839265580708[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_156214839265580708[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_5729337145004090259) {
   out_5729337145004090259[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5729337145004090259[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5729337145004090259[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_5729337145004090259[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5729337145004090259[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5729337145004090259[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5729337145004090259[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5729337145004090259[7] = 0;
   out_5729337145004090259[8] = 0;
   out_5729337145004090259[9] = 0;
   out_5729337145004090259[10] = 0;
   out_5729337145004090259[11] = 0;
   out_5729337145004090259[12] = 0;
   out_5729337145004090259[13] = 0;
   out_5729337145004090259[14] = 0;
   out_5729337145004090259[15] = 0;
   out_5729337145004090259[16] = 1;
   out_5729337145004090259[17] = 0;
   out_5729337145004090259[18] = 0;
   out_5729337145004090259[19] = 1;
   out_5729337145004090259[20] = 0;
   out_5729337145004090259[21] = 0;
   out_5729337145004090259[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5729337145004090259[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5729337145004090259[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_5729337145004090259[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5729337145004090259[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5729337145004090259[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5729337145004090259[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5729337145004090259[29] = 0;
   out_5729337145004090259[30] = 0;
   out_5729337145004090259[31] = 0;
   out_5729337145004090259[32] = 0;
   out_5729337145004090259[33] = 0;
   out_5729337145004090259[34] = 0;
   out_5729337145004090259[35] = 0;
   out_5729337145004090259[36] = 0;
   out_5729337145004090259[37] = 0;
   out_5729337145004090259[38] = 0;
   out_5729337145004090259[39] = 1;
   out_5729337145004090259[40] = 0;
   out_5729337145004090259[41] = 0;
   out_5729337145004090259[42] = 1;
   out_5729337145004090259[43] = 0;
   out_5729337145004090259[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_5729337145004090259[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_5729337145004090259[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5729337145004090259[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5729337145004090259[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5729337145004090259[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5729337145004090259[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5729337145004090259[51] = 0;
   out_5729337145004090259[52] = 0;
   out_5729337145004090259[53] = 0;
   out_5729337145004090259[54] = 0;
   out_5729337145004090259[55] = 0;
   out_5729337145004090259[56] = 0;
   out_5729337145004090259[57] = 0;
   out_5729337145004090259[58] = 0;
   out_5729337145004090259[59] = 0;
   out_5729337145004090259[60] = 0;
   out_5729337145004090259[61] = 0;
   out_5729337145004090259[62] = 1;
   out_5729337145004090259[63] = 0;
   out_5729337145004090259[64] = 0;
   out_5729337145004090259[65] = 1;
}
void h_12(double *state, double *unused, double *out_6605349573946297244) {
   out_6605349573946297244[0] = state[0];
   out_6605349573946297244[1] = state[1];
   out_6605349573946297244[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7940548460661332268) {
   out_7940548460661332268[0] = 1;
   out_7940548460661332268[1] = 0;
   out_7940548460661332268[2] = 0;
   out_7940548460661332268[3] = 0;
   out_7940548460661332268[4] = 0;
   out_7940548460661332268[5] = 0;
   out_7940548460661332268[6] = 0;
   out_7940548460661332268[7] = 0;
   out_7940548460661332268[8] = 0;
   out_7940548460661332268[9] = 0;
   out_7940548460661332268[10] = 0;
   out_7940548460661332268[11] = 0;
   out_7940548460661332268[12] = 0;
   out_7940548460661332268[13] = 0;
   out_7940548460661332268[14] = 0;
   out_7940548460661332268[15] = 0;
   out_7940548460661332268[16] = 0;
   out_7940548460661332268[17] = 0;
   out_7940548460661332268[18] = 0;
   out_7940548460661332268[19] = 0;
   out_7940548460661332268[20] = 0;
   out_7940548460661332268[21] = 0;
   out_7940548460661332268[22] = 0;
   out_7940548460661332268[23] = 1;
   out_7940548460661332268[24] = 0;
   out_7940548460661332268[25] = 0;
   out_7940548460661332268[26] = 0;
   out_7940548460661332268[27] = 0;
   out_7940548460661332268[28] = 0;
   out_7940548460661332268[29] = 0;
   out_7940548460661332268[30] = 0;
   out_7940548460661332268[31] = 0;
   out_7940548460661332268[32] = 0;
   out_7940548460661332268[33] = 0;
   out_7940548460661332268[34] = 0;
   out_7940548460661332268[35] = 0;
   out_7940548460661332268[36] = 0;
   out_7940548460661332268[37] = 0;
   out_7940548460661332268[38] = 0;
   out_7940548460661332268[39] = 0;
   out_7940548460661332268[40] = 0;
   out_7940548460661332268[41] = 0;
   out_7940548460661332268[42] = 0;
   out_7940548460661332268[43] = 0;
   out_7940548460661332268[44] = 0;
   out_7940548460661332268[45] = 0;
   out_7940548460661332268[46] = 1;
   out_7940548460661332268[47] = 0;
   out_7940548460661332268[48] = 0;
   out_7940548460661332268[49] = 0;
   out_7940548460661332268[50] = 0;
   out_7940548460661332268[51] = 0;
   out_7940548460661332268[52] = 0;
   out_7940548460661332268[53] = 0;
   out_7940548460661332268[54] = 0;
   out_7940548460661332268[55] = 0;
   out_7940548460661332268[56] = 0;
   out_7940548460661332268[57] = 0;
   out_7940548460661332268[58] = 0;
   out_7940548460661332268[59] = 0;
   out_7940548460661332268[60] = 0;
   out_7940548460661332268[61] = 0;
   out_7940548460661332268[62] = 0;
   out_7940548460661332268[63] = 0;
   out_7940548460661332268[64] = 0;
   out_7940548460661332268[65] = 0;
}
void h_31(double *state, double *unused, double *out_1511533530509665495) {
   out_1511533530509665495[0] = state[7];
   out_1511533530509665495[1] = state[8];
   out_1511533530509665495[2] = state[9];
}
void H_31(double *state, double *unused, double *out_6287754110001977849) {
   out_6287754110001977849[0] = 0;
   out_6287754110001977849[1] = 0;
   out_6287754110001977849[2] = 0;
   out_6287754110001977849[3] = 0;
   out_6287754110001977849[4] = 0;
   out_6287754110001977849[5] = 0;
   out_6287754110001977849[6] = 0;
   out_6287754110001977849[7] = 1;
   out_6287754110001977849[8] = 0;
   out_6287754110001977849[9] = 0;
   out_6287754110001977849[10] = 0;
   out_6287754110001977849[11] = 0;
   out_6287754110001977849[12] = 0;
   out_6287754110001977849[13] = 0;
   out_6287754110001977849[14] = 0;
   out_6287754110001977849[15] = 0;
   out_6287754110001977849[16] = 0;
   out_6287754110001977849[17] = 0;
   out_6287754110001977849[18] = 0;
   out_6287754110001977849[19] = 0;
   out_6287754110001977849[20] = 0;
   out_6287754110001977849[21] = 0;
   out_6287754110001977849[22] = 0;
   out_6287754110001977849[23] = 0;
   out_6287754110001977849[24] = 0;
   out_6287754110001977849[25] = 0;
   out_6287754110001977849[26] = 0;
   out_6287754110001977849[27] = 0;
   out_6287754110001977849[28] = 0;
   out_6287754110001977849[29] = 0;
   out_6287754110001977849[30] = 1;
   out_6287754110001977849[31] = 0;
   out_6287754110001977849[32] = 0;
   out_6287754110001977849[33] = 0;
   out_6287754110001977849[34] = 0;
   out_6287754110001977849[35] = 0;
   out_6287754110001977849[36] = 0;
   out_6287754110001977849[37] = 0;
   out_6287754110001977849[38] = 0;
   out_6287754110001977849[39] = 0;
   out_6287754110001977849[40] = 0;
   out_6287754110001977849[41] = 0;
   out_6287754110001977849[42] = 0;
   out_6287754110001977849[43] = 0;
   out_6287754110001977849[44] = 0;
   out_6287754110001977849[45] = 0;
   out_6287754110001977849[46] = 0;
   out_6287754110001977849[47] = 0;
   out_6287754110001977849[48] = 0;
   out_6287754110001977849[49] = 0;
   out_6287754110001977849[50] = 0;
   out_6287754110001977849[51] = 0;
   out_6287754110001977849[52] = 0;
   out_6287754110001977849[53] = 1;
   out_6287754110001977849[54] = 0;
   out_6287754110001977849[55] = 0;
   out_6287754110001977849[56] = 0;
   out_6287754110001977849[57] = 0;
   out_6287754110001977849[58] = 0;
   out_6287754110001977849[59] = 0;
   out_6287754110001977849[60] = 0;
   out_6287754110001977849[61] = 0;
   out_6287754110001977849[62] = 0;
   out_6287754110001977849[63] = 0;
   out_6287754110001977849[64] = 0;
   out_6287754110001977849[65] = 0;
}
void h_32(double *state, double *unused, double *out_8963794230603142874) {
   out_8963794230603142874[0] = state[3];
   out_8963794230603142874[1] = state[4];
   out_8963794230603142874[2] = state[5];
   out_8963794230603142874[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8073254275610650667) {
   out_8073254275610650667[0] = 0;
   out_8073254275610650667[1] = 0;
   out_8073254275610650667[2] = 0;
   out_8073254275610650667[3] = 1;
   out_8073254275610650667[4] = 0;
   out_8073254275610650667[5] = 0;
   out_8073254275610650667[6] = 0;
   out_8073254275610650667[7] = 0;
   out_8073254275610650667[8] = 0;
   out_8073254275610650667[9] = 0;
   out_8073254275610650667[10] = 0;
   out_8073254275610650667[11] = 0;
   out_8073254275610650667[12] = 0;
   out_8073254275610650667[13] = 0;
   out_8073254275610650667[14] = 0;
   out_8073254275610650667[15] = 0;
   out_8073254275610650667[16] = 0;
   out_8073254275610650667[17] = 0;
   out_8073254275610650667[18] = 0;
   out_8073254275610650667[19] = 0;
   out_8073254275610650667[20] = 0;
   out_8073254275610650667[21] = 0;
   out_8073254275610650667[22] = 0;
   out_8073254275610650667[23] = 0;
   out_8073254275610650667[24] = 0;
   out_8073254275610650667[25] = 0;
   out_8073254275610650667[26] = 1;
   out_8073254275610650667[27] = 0;
   out_8073254275610650667[28] = 0;
   out_8073254275610650667[29] = 0;
   out_8073254275610650667[30] = 0;
   out_8073254275610650667[31] = 0;
   out_8073254275610650667[32] = 0;
   out_8073254275610650667[33] = 0;
   out_8073254275610650667[34] = 0;
   out_8073254275610650667[35] = 0;
   out_8073254275610650667[36] = 0;
   out_8073254275610650667[37] = 0;
   out_8073254275610650667[38] = 0;
   out_8073254275610650667[39] = 0;
   out_8073254275610650667[40] = 0;
   out_8073254275610650667[41] = 0;
   out_8073254275610650667[42] = 0;
   out_8073254275610650667[43] = 0;
   out_8073254275610650667[44] = 0;
   out_8073254275610650667[45] = 0;
   out_8073254275610650667[46] = 0;
   out_8073254275610650667[47] = 0;
   out_8073254275610650667[48] = 0;
   out_8073254275610650667[49] = 1;
   out_8073254275610650667[50] = 0;
   out_8073254275610650667[51] = 0;
   out_8073254275610650667[52] = 0;
   out_8073254275610650667[53] = 0;
   out_8073254275610650667[54] = 0;
   out_8073254275610650667[55] = 0;
   out_8073254275610650667[56] = 0;
   out_8073254275610650667[57] = 0;
   out_8073254275610650667[58] = 0;
   out_8073254275610650667[59] = 0;
   out_8073254275610650667[60] = 0;
   out_8073254275610650667[61] = 0;
   out_8073254275610650667[62] = 0;
   out_8073254275610650667[63] = 0;
   out_8073254275610650667[64] = 0;
   out_8073254275610650667[65] = 0;
   out_8073254275610650667[66] = 0;
   out_8073254275610650667[67] = 0;
   out_8073254275610650667[68] = 0;
   out_8073254275610650667[69] = 0;
   out_8073254275610650667[70] = 0;
   out_8073254275610650667[71] = 0;
   out_8073254275610650667[72] = 1;
   out_8073254275610650667[73] = 0;
   out_8073254275610650667[74] = 0;
   out_8073254275610650667[75] = 0;
   out_8073254275610650667[76] = 0;
   out_8073254275610650667[77] = 0;
   out_8073254275610650667[78] = 0;
   out_8073254275610650667[79] = 0;
   out_8073254275610650667[80] = 0;
   out_8073254275610650667[81] = 0;
   out_8073254275610650667[82] = 0;
   out_8073254275610650667[83] = 0;
   out_8073254275610650667[84] = 0;
   out_8073254275610650667[85] = 0;
   out_8073254275610650667[86] = 0;
   out_8073254275610650667[87] = 0;
}
void h_13(double *state, double *unused, double *out_8288584196068907752) {
   out_8288584196068907752[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_8288584196068907752[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_8288584196068907752[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_1494949637232207687) {
   out_1494949637232207687[0] = 0;
   out_1494949637232207687[1] = 0;
   out_1494949637232207687[2] = 0;
   out_1494949637232207687[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1494949637232207687[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1494949637232207687[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_1494949637232207687[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1494949637232207687[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_1494949637232207687[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_1494949637232207687[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_1494949637232207687[10] = 0;
   out_1494949637232207687[11] = 0;
   out_1494949637232207687[12] = 0;
   out_1494949637232207687[13] = 0;
   out_1494949637232207687[14] = 0;
   out_1494949637232207687[15] = 0;
   out_1494949637232207687[16] = 0;
   out_1494949637232207687[17] = 0;
   out_1494949637232207687[18] = 0;
   out_1494949637232207687[19] = 0;
   out_1494949637232207687[20] = 0;
   out_1494949637232207687[21] = 0;
   out_1494949637232207687[22] = 0;
   out_1494949637232207687[23] = 0;
   out_1494949637232207687[24] = 0;
   out_1494949637232207687[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1494949637232207687[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1494949637232207687[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1494949637232207687[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_1494949637232207687[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_1494949637232207687[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_1494949637232207687[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_1494949637232207687[32] = 0;
   out_1494949637232207687[33] = 0;
   out_1494949637232207687[34] = 0;
   out_1494949637232207687[35] = 0;
   out_1494949637232207687[36] = 0;
   out_1494949637232207687[37] = 0;
   out_1494949637232207687[38] = 0;
   out_1494949637232207687[39] = 0;
   out_1494949637232207687[40] = 0;
   out_1494949637232207687[41] = 0;
   out_1494949637232207687[42] = 0;
   out_1494949637232207687[43] = 0;
   out_1494949637232207687[44] = 0;
   out_1494949637232207687[45] = 0;
   out_1494949637232207687[46] = 0;
   out_1494949637232207687[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1494949637232207687[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_1494949637232207687[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1494949637232207687[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1494949637232207687[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_1494949637232207687[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_1494949637232207687[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_1494949637232207687[54] = 0;
   out_1494949637232207687[55] = 0;
   out_1494949637232207687[56] = 0;
   out_1494949637232207687[57] = 0;
   out_1494949637232207687[58] = 0;
   out_1494949637232207687[59] = 0;
   out_1494949637232207687[60] = 0;
   out_1494949637232207687[61] = 0;
   out_1494949637232207687[62] = 0;
   out_1494949637232207687[63] = 0;
   out_1494949637232207687[64] = 0;
   out_1494949637232207687[65] = 0;
}
void h_14(double *state, double *unused, double *out_6325298498358679280) {
   out_6325298498358679280[0] = state[10];
   out_6325298498358679280[1] = state[11];
   out_6325298498358679280[2] = state[12];
}
void H_14(double *state, double *unused, double *out_3162281699258961118) {
   out_3162281699258961118[0] = 0;
   out_3162281699258961118[1] = 0;
   out_3162281699258961118[2] = 0;
   out_3162281699258961118[3] = 0;
   out_3162281699258961118[4] = 0;
   out_3162281699258961118[5] = 0;
   out_3162281699258961118[6] = 0;
   out_3162281699258961118[7] = 0;
   out_3162281699258961118[8] = 0;
   out_3162281699258961118[9] = 0;
   out_3162281699258961118[10] = 1;
   out_3162281699258961118[11] = 0;
   out_3162281699258961118[12] = 0;
   out_3162281699258961118[13] = 0;
   out_3162281699258961118[14] = 0;
   out_3162281699258961118[15] = 0;
   out_3162281699258961118[16] = 0;
   out_3162281699258961118[17] = 0;
   out_3162281699258961118[18] = 0;
   out_3162281699258961118[19] = 0;
   out_3162281699258961118[20] = 0;
   out_3162281699258961118[21] = 0;
   out_3162281699258961118[22] = 0;
   out_3162281699258961118[23] = 0;
   out_3162281699258961118[24] = 0;
   out_3162281699258961118[25] = 0;
   out_3162281699258961118[26] = 0;
   out_3162281699258961118[27] = 0;
   out_3162281699258961118[28] = 0;
   out_3162281699258961118[29] = 0;
   out_3162281699258961118[30] = 0;
   out_3162281699258961118[31] = 0;
   out_3162281699258961118[32] = 0;
   out_3162281699258961118[33] = 1;
   out_3162281699258961118[34] = 0;
   out_3162281699258961118[35] = 0;
   out_3162281699258961118[36] = 0;
   out_3162281699258961118[37] = 0;
   out_3162281699258961118[38] = 0;
   out_3162281699258961118[39] = 0;
   out_3162281699258961118[40] = 0;
   out_3162281699258961118[41] = 0;
   out_3162281699258961118[42] = 0;
   out_3162281699258961118[43] = 0;
   out_3162281699258961118[44] = 0;
   out_3162281699258961118[45] = 0;
   out_3162281699258961118[46] = 0;
   out_3162281699258961118[47] = 0;
   out_3162281699258961118[48] = 0;
   out_3162281699258961118[49] = 0;
   out_3162281699258961118[50] = 0;
   out_3162281699258961118[51] = 0;
   out_3162281699258961118[52] = 0;
   out_3162281699258961118[53] = 0;
   out_3162281699258961118[54] = 0;
   out_3162281699258961118[55] = 0;
   out_3162281699258961118[56] = 1;
   out_3162281699258961118[57] = 0;
   out_3162281699258961118[58] = 0;
   out_3162281699258961118[59] = 0;
   out_3162281699258961118[60] = 0;
   out_3162281699258961118[61] = 0;
   out_3162281699258961118[62] = 0;
   out_3162281699258961118[63] = 0;
   out_3162281699258961118[64] = 0;
   out_3162281699258961118[65] = 0;
}
void h_33(double *state, double *unused, double *out_5618792197983551011) {
   out_5618792197983551011[0] = state[16];
   out_5618792197983551011[1] = state[17];
   out_5618792197983551011[2] = state[18];
}
void H_33(double *state, double *unused, double *out_9008432959068716163) {
   out_9008432959068716163[0] = 0;
   out_9008432959068716163[1] = 0;
   out_9008432959068716163[2] = 0;
   out_9008432959068716163[3] = 0;
   out_9008432959068716163[4] = 0;
   out_9008432959068716163[5] = 0;
   out_9008432959068716163[6] = 0;
   out_9008432959068716163[7] = 0;
   out_9008432959068716163[8] = 0;
   out_9008432959068716163[9] = 0;
   out_9008432959068716163[10] = 0;
   out_9008432959068716163[11] = 0;
   out_9008432959068716163[12] = 0;
   out_9008432959068716163[13] = 0;
   out_9008432959068716163[14] = 0;
   out_9008432959068716163[15] = 0;
   out_9008432959068716163[16] = 1;
   out_9008432959068716163[17] = 0;
   out_9008432959068716163[18] = 0;
   out_9008432959068716163[19] = 0;
   out_9008432959068716163[20] = 0;
   out_9008432959068716163[21] = 0;
   out_9008432959068716163[22] = 0;
   out_9008432959068716163[23] = 0;
   out_9008432959068716163[24] = 0;
   out_9008432959068716163[25] = 0;
   out_9008432959068716163[26] = 0;
   out_9008432959068716163[27] = 0;
   out_9008432959068716163[28] = 0;
   out_9008432959068716163[29] = 0;
   out_9008432959068716163[30] = 0;
   out_9008432959068716163[31] = 0;
   out_9008432959068716163[32] = 0;
   out_9008432959068716163[33] = 0;
   out_9008432959068716163[34] = 0;
   out_9008432959068716163[35] = 0;
   out_9008432959068716163[36] = 0;
   out_9008432959068716163[37] = 0;
   out_9008432959068716163[38] = 0;
   out_9008432959068716163[39] = 1;
   out_9008432959068716163[40] = 0;
   out_9008432959068716163[41] = 0;
   out_9008432959068716163[42] = 0;
   out_9008432959068716163[43] = 0;
   out_9008432959068716163[44] = 0;
   out_9008432959068716163[45] = 0;
   out_9008432959068716163[46] = 0;
   out_9008432959068716163[47] = 0;
   out_9008432959068716163[48] = 0;
   out_9008432959068716163[49] = 0;
   out_9008432959068716163[50] = 0;
   out_9008432959068716163[51] = 0;
   out_9008432959068716163[52] = 0;
   out_9008432959068716163[53] = 0;
   out_9008432959068716163[54] = 0;
   out_9008432959068716163[55] = 0;
   out_9008432959068716163[56] = 0;
   out_9008432959068716163[57] = 0;
   out_9008432959068716163[58] = 0;
   out_9008432959068716163[59] = 0;
   out_9008432959068716163[60] = 0;
   out_9008432959068716163[61] = 0;
   out_9008432959068716163[62] = 1;
   out_9008432959068716163[63] = 0;
   out_9008432959068716163[64] = 0;
   out_9008432959068716163[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_5537917853957494860) {
  H(in_vec, out_5537917853957494860);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3173224133217314314) {
  err_fun(nom_x, delta_x, out_3173224133217314314);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_2801905154792875483) {
  inv_err_fun(nom_x, true_x, out_2801905154792875483);
}
void live_H_mod_fun(double *state, double *out_74819044353985183) {
  H_mod_fun(state, out_74819044353985183);
}
void live_f_fun(double *state, double dt, double *out_4760523032026918799) {
  f_fun(state,  dt, out_4760523032026918799);
}
void live_F_fun(double *state, double dt, double *out_8496492668489745222) {
  F_fun(state,  dt, out_8496492668489745222);
}
void live_h_4(double *state, double *unused, double *out_4917282499255070247) {
  h_4(state, unused, out_4917282499255070247);
}
void live_H_4(double *state, double *unused, double *out_2921092052629370473) {
  H_4(state, unused, out_2921092052629370473);
}
void live_h_9(double *state, double *unused, double *out_6325298498358679280) {
  h_9(state, unused, out_6325298498358679280);
}
void live_H_9(double *state, double *unused, double *out_3162281699258961118) {
  H_9(state, unused, out_3162281699258961118);
}
void live_h_10(double *state, double *unused, double *out_156214839265580708) {
  h_10(state, unused, out_156214839265580708);
}
void live_H_10(double *state, double *unused, double *out_5729337145004090259) {
  H_10(state, unused, out_5729337145004090259);
}
void live_h_12(double *state, double *unused, double *out_6605349573946297244) {
  h_12(state, unused, out_6605349573946297244);
}
void live_H_12(double *state, double *unused, double *out_7940548460661332268) {
  H_12(state, unused, out_7940548460661332268);
}
void live_h_31(double *state, double *unused, double *out_1511533530509665495) {
  h_31(state, unused, out_1511533530509665495);
}
void live_H_31(double *state, double *unused, double *out_6287754110001977849) {
  H_31(state, unused, out_6287754110001977849);
}
void live_h_32(double *state, double *unused, double *out_8963794230603142874) {
  h_32(state, unused, out_8963794230603142874);
}
void live_H_32(double *state, double *unused, double *out_8073254275610650667) {
  H_32(state, unused, out_8073254275610650667);
}
void live_h_13(double *state, double *unused, double *out_8288584196068907752) {
  h_13(state, unused, out_8288584196068907752);
}
void live_H_13(double *state, double *unused, double *out_1494949637232207687) {
  H_13(state, unused, out_1494949637232207687);
}
void live_h_14(double *state, double *unused, double *out_6325298498358679280) {
  h_14(state, unused, out_6325298498358679280);
}
void live_H_14(double *state, double *unused, double *out_3162281699258961118) {
  H_14(state, unused, out_3162281699258961118);
}
void live_h_33(double *state, double *unused, double *out_5618792197983551011) {
  h_33(state, unused, out_5618792197983551011);
}
void live_H_33(double *state, double *unused, double *out_9008432959068716163) {
  H_33(state, unused, out_9008432959068716163);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
