#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_8112787183996767333) {
   out_8112787183996767333[0] = 0;
   out_8112787183996767333[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_8112787183996767333[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_8112787183996767333[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_8112787183996767333[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_8112787183996767333[5] = -sin(in_vec[1]);
   out_8112787183996767333[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8112787183996767333[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8112787183996767333[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_8112787183996767333[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_8112787183996767333[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_8112787183996767333[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_8112787183996767333[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8112787183996767333[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8112787183996767333[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_8112787183996767333[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_8112787183996767333[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_8112787183996767333[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7438452076199970549) {
   out_7438452076199970549[0] = delta_x[0] + nom_x[0];
   out_7438452076199970549[1] = delta_x[1] + nom_x[1];
   out_7438452076199970549[2] = delta_x[2] + nom_x[2];
   out_7438452076199970549[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7438452076199970549[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7438452076199970549[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7438452076199970549[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7438452076199970549[7] = delta_x[6] + nom_x[7];
   out_7438452076199970549[8] = delta_x[7] + nom_x[8];
   out_7438452076199970549[9] = delta_x[8] + nom_x[9];
   out_7438452076199970549[10] = delta_x[9] + nom_x[10];
   out_7438452076199970549[11] = delta_x[10] + nom_x[11];
   out_7438452076199970549[12] = delta_x[11] + nom_x[12];
   out_7438452076199970549[13] = delta_x[12] + nom_x[13];
   out_7438452076199970549[14] = delta_x[13] + nom_x[14];
   out_7438452076199970549[15] = delta_x[14] + nom_x[15];
   out_7438452076199970549[16] = delta_x[15] + nom_x[16];
   out_7438452076199970549[17] = delta_x[16] + nom_x[17];
   out_7438452076199970549[18] = delta_x[17] + nom_x[18];
   out_7438452076199970549[19] = delta_x[18] + nom_x[19];
   out_7438452076199970549[20] = delta_x[19] + nom_x[20];
   out_7438452076199970549[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_9072751160980696045) {
   out_9072751160980696045[0] = -nom_x[0] + true_x[0];
   out_9072751160980696045[1] = -nom_x[1] + true_x[1];
   out_9072751160980696045[2] = -nom_x[2] + true_x[2];
   out_9072751160980696045[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_9072751160980696045[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_9072751160980696045[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_9072751160980696045[6] = -nom_x[7] + true_x[7];
   out_9072751160980696045[7] = -nom_x[8] + true_x[8];
   out_9072751160980696045[8] = -nom_x[9] + true_x[9];
   out_9072751160980696045[9] = -nom_x[10] + true_x[10];
   out_9072751160980696045[10] = -nom_x[11] + true_x[11];
   out_9072751160980696045[11] = -nom_x[12] + true_x[12];
   out_9072751160980696045[12] = -nom_x[13] + true_x[13];
   out_9072751160980696045[13] = -nom_x[14] + true_x[14];
   out_9072751160980696045[14] = -nom_x[15] + true_x[15];
   out_9072751160980696045[15] = -nom_x[16] + true_x[16];
   out_9072751160980696045[16] = -nom_x[17] + true_x[17];
   out_9072751160980696045[17] = -nom_x[18] + true_x[18];
   out_9072751160980696045[18] = -nom_x[19] + true_x[19];
   out_9072751160980696045[19] = -nom_x[20] + true_x[20];
   out_9072751160980696045[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_3531246140483666849) {
   out_3531246140483666849[0] = 1.0;
   out_3531246140483666849[1] = 0;
   out_3531246140483666849[2] = 0;
   out_3531246140483666849[3] = 0;
   out_3531246140483666849[4] = 0;
   out_3531246140483666849[5] = 0;
   out_3531246140483666849[6] = 0;
   out_3531246140483666849[7] = 0;
   out_3531246140483666849[8] = 0;
   out_3531246140483666849[9] = 0;
   out_3531246140483666849[10] = 0;
   out_3531246140483666849[11] = 0;
   out_3531246140483666849[12] = 0;
   out_3531246140483666849[13] = 0;
   out_3531246140483666849[14] = 0;
   out_3531246140483666849[15] = 0;
   out_3531246140483666849[16] = 0;
   out_3531246140483666849[17] = 0;
   out_3531246140483666849[18] = 0;
   out_3531246140483666849[19] = 0;
   out_3531246140483666849[20] = 0;
   out_3531246140483666849[21] = 0;
   out_3531246140483666849[22] = 1.0;
   out_3531246140483666849[23] = 0;
   out_3531246140483666849[24] = 0;
   out_3531246140483666849[25] = 0;
   out_3531246140483666849[26] = 0;
   out_3531246140483666849[27] = 0;
   out_3531246140483666849[28] = 0;
   out_3531246140483666849[29] = 0;
   out_3531246140483666849[30] = 0;
   out_3531246140483666849[31] = 0;
   out_3531246140483666849[32] = 0;
   out_3531246140483666849[33] = 0;
   out_3531246140483666849[34] = 0;
   out_3531246140483666849[35] = 0;
   out_3531246140483666849[36] = 0;
   out_3531246140483666849[37] = 0;
   out_3531246140483666849[38] = 0;
   out_3531246140483666849[39] = 0;
   out_3531246140483666849[40] = 0;
   out_3531246140483666849[41] = 0;
   out_3531246140483666849[42] = 0;
   out_3531246140483666849[43] = 0;
   out_3531246140483666849[44] = 1.0;
   out_3531246140483666849[45] = 0;
   out_3531246140483666849[46] = 0;
   out_3531246140483666849[47] = 0;
   out_3531246140483666849[48] = 0;
   out_3531246140483666849[49] = 0;
   out_3531246140483666849[50] = 0;
   out_3531246140483666849[51] = 0;
   out_3531246140483666849[52] = 0;
   out_3531246140483666849[53] = 0;
   out_3531246140483666849[54] = 0;
   out_3531246140483666849[55] = 0;
   out_3531246140483666849[56] = 0;
   out_3531246140483666849[57] = 0;
   out_3531246140483666849[58] = 0;
   out_3531246140483666849[59] = 0;
   out_3531246140483666849[60] = 0;
   out_3531246140483666849[61] = 0;
   out_3531246140483666849[62] = 0;
   out_3531246140483666849[63] = 0;
   out_3531246140483666849[64] = 0;
   out_3531246140483666849[65] = 0;
   out_3531246140483666849[66] = -0.5*state[4];
   out_3531246140483666849[67] = -0.5*state[5];
   out_3531246140483666849[68] = -0.5*state[6];
   out_3531246140483666849[69] = 0;
   out_3531246140483666849[70] = 0;
   out_3531246140483666849[71] = 0;
   out_3531246140483666849[72] = 0;
   out_3531246140483666849[73] = 0;
   out_3531246140483666849[74] = 0;
   out_3531246140483666849[75] = 0;
   out_3531246140483666849[76] = 0;
   out_3531246140483666849[77] = 0;
   out_3531246140483666849[78] = 0;
   out_3531246140483666849[79] = 0;
   out_3531246140483666849[80] = 0;
   out_3531246140483666849[81] = 0;
   out_3531246140483666849[82] = 0;
   out_3531246140483666849[83] = 0;
   out_3531246140483666849[84] = 0;
   out_3531246140483666849[85] = 0;
   out_3531246140483666849[86] = 0;
   out_3531246140483666849[87] = 0.5*state[3];
   out_3531246140483666849[88] = 0.5*state[6];
   out_3531246140483666849[89] = -0.5*state[5];
   out_3531246140483666849[90] = 0;
   out_3531246140483666849[91] = 0;
   out_3531246140483666849[92] = 0;
   out_3531246140483666849[93] = 0;
   out_3531246140483666849[94] = 0;
   out_3531246140483666849[95] = 0;
   out_3531246140483666849[96] = 0;
   out_3531246140483666849[97] = 0;
   out_3531246140483666849[98] = 0;
   out_3531246140483666849[99] = 0;
   out_3531246140483666849[100] = 0;
   out_3531246140483666849[101] = 0;
   out_3531246140483666849[102] = 0;
   out_3531246140483666849[103] = 0;
   out_3531246140483666849[104] = 0;
   out_3531246140483666849[105] = 0;
   out_3531246140483666849[106] = 0;
   out_3531246140483666849[107] = 0;
   out_3531246140483666849[108] = -0.5*state[6];
   out_3531246140483666849[109] = 0.5*state[3];
   out_3531246140483666849[110] = 0.5*state[4];
   out_3531246140483666849[111] = 0;
   out_3531246140483666849[112] = 0;
   out_3531246140483666849[113] = 0;
   out_3531246140483666849[114] = 0;
   out_3531246140483666849[115] = 0;
   out_3531246140483666849[116] = 0;
   out_3531246140483666849[117] = 0;
   out_3531246140483666849[118] = 0;
   out_3531246140483666849[119] = 0;
   out_3531246140483666849[120] = 0;
   out_3531246140483666849[121] = 0;
   out_3531246140483666849[122] = 0;
   out_3531246140483666849[123] = 0;
   out_3531246140483666849[124] = 0;
   out_3531246140483666849[125] = 0;
   out_3531246140483666849[126] = 0;
   out_3531246140483666849[127] = 0;
   out_3531246140483666849[128] = 0;
   out_3531246140483666849[129] = 0.5*state[5];
   out_3531246140483666849[130] = -0.5*state[4];
   out_3531246140483666849[131] = 0.5*state[3];
   out_3531246140483666849[132] = 0;
   out_3531246140483666849[133] = 0;
   out_3531246140483666849[134] = 0;
   out_3531246140483666849[135] = 0;
   out_3531246140483666849[136] = 0;
   out_3531246140483666849[137] = 0;
   out_3531246140483666849[138] = 0;
   out_3531246140483666849[139] = 0;
   out_3531246140483666849[140] = 0;
   out_3531246140483666849[141] = 0;
   out_3531246140483666849[142] = 0;
   out_3531246140483666849[143] = 0;
   out_3531246140483666849[144] = 0;
   out_3531246140483666849[145] = 0;
   out_3531246140483666849[146] = 0;
   out_3531246140483666849[147] = 0;
   out_3531246140483666849[148] = 0;
   out_3531246140483666849[149] = 0;
   out_3531246140483666849[150] = 0;
   out_3531246140483666849[151] = 0;
   out_3531246140483666849[152] = 0;
   out_3531246140483666849[153] = 1.0;
   out_3531246140483666849[154] = 0;
   out_3531246140483666849[155] = 0;
   out_3531246140483666849[156] = 0;
   out_3531246140483666849[157] = 0;
   out_3531246140483666849[158] = 0;
   out_3531246140483666849[159] = 0;
   out_3531246140483666849[160] = 0;
   out_3531246140483666849[161] = 0;
   out_3531246140483666849[162] = 0;
   out_3531246140483666849[163] = 0;
   out_3531246140483666849[164] = 0;
   out_3531246140483666849[165] = 0;
   out_3531246140483666849[166] = 0;
   out_3531246140483666849[167] = 0;
   out_3531246140483666849[168] = 0;
   out_3531246140483666849[169] = 0;
   out_3531246140483666849[170] = 0;
   out_3531246140483666849[171] = 0;
   out_3531246140483666849[172] = 0;
   out_3531246140483666849[173] = 0;
   out_3531246140483666849[174] = 0;
   out_3531246140483666849[175] = 1.0;
   out_3531246140483666849[176] = 0;
   out_3531246140483666849[177] = 0;
   out_3531246140483666849[178] = 0;
   out_3531246140483666849[179] = 0;
   out_3531246140483666849[180] = 0;
   out_3531246140483666849[181] = 0;
   out_3531246140483666849[182] = 0;
   out_3531246140483666849[183] = 0;
   out_3531246140483666849[184] = 0;
   out_3531246140483666849[185] = 0;
   out_3531246140483666849[186] = 0;
   out_3531246140483666849[187] = 0;
   out_3531246140483666849[188] = 0;
   out_3531246140483666849[189] = 0;
   out_3531246140483666849[190] = 0;
   out_3531246140483666849[191] = 0;
   out_3531246140483666849[192] = 0;
   out_3531246140483666849[193] = 0;
   out_3531246140483666849[194] = 0;
   out_3531246140483666849[195] = 0;
   out_3531246140483666849[196] = 0;
   out_3531246140483666849[197] = 1.0;
   out_3531246140483666849[198] = 0;
   out_3531246140483666849[199] = 0;
   out_3531246140483666849[200] = 0;
   out_3531246140483666849[201] = 0;
   out_3531246140483666849[202] = 0;
   out_3531246140483666849[203] = 0;
   out_3531246140483666849[204] = 0;
   out_3531246140483666849[205] = 0;
   out_3531246140483666849[206] = 0;
   out_3531246140483666849[207] = 0;
   out_3531246140483666849[208] = 0;
   out_3531246140483666849[209] = 0;
   out_3531246140483666849[210] = 0;
   out_3531246140483666849[211] = 0;
   out_3531246140483666849[212] = 0;
   out_3531246140483666849[213] = 0;
   out_3531246140483666849[214] = 0;
   out_3531246140483666849[215] = 0;
   out_3531246140483666849[216] = 0;
   out_3531246140483666849[217] = 0;
   out_3531246140483666849[218] = 0;
   out_3531246140483666849[219] = 1.0;
   out_3531246140483666849[220] = 0;
   out_3531246140483666849[221] = 0;
   out_3531246140483666849[222] = 0;
   out_3531246140483666849[223] = 0;
   out_3531246140483666849[224] = 0;
   out_3531246140483666849[225] = 0;
   out_3531246140483666849[226] = 0;
   out_3531246140483666849[227] = 0;
   out_3531246140483666849[228] = 0;
   out_3531246140483666849[229] = 0;
   out_3531246140483666849[230] = 0;
   out_3531246140483666849[231] = 0;
   out_3531246140483666849[232] = 0;
   out_3531246140483666849[233] = 0;
   out_3531246140483666849[234] = 0;
   out_3531246140483666849[235] = 0;
   out_3531246140483666849[236] = 0;
   out_3531246140483666849[237] = 0;
   out_3531246140483666849[238] = 0;
   out_3531246140483666849[239] = 0;
   out_3531246140483666849[240] = 0;
   out_3531246140483666849[241] = 1.0;
   out_3531246140483666849[242] = 0;
   out_3531246140483666849[243] = 0;
   out_3531246140483666849[244] = 0;
   out_3531246140483666849[245] = 0;
   out_3531246140483666849[246] = 0;
   out_3531246140483666849[247] = 0;
   out_3531246140483666849[248] = 0;
   out_3531246140483666849[249] = 0;
   out_3531246140483666849[250] = 0;
   out_3531246140483666849[251] = 0;
   out_3531246140483666849[252] = 0;
   out_3531246140483666849[253] = 0;
   out_3531246140483666849[254] = 0;
   out_3531246140483666849[255] = 0;
   out_3531246140483666849[256] = 0;
   out_3531246140483666849[257] = 0;
   out_3531246140483666849[258] = 0;
   out_3531246140483666849[259] = 0;
   out_3531246140483666849[260] = 0;
   out_3531246140483666849[261] = 0;
   out_3531246140483666849[262] = 0;
   out_3531246140483666849[263] = 1.0;
   out_3531246140483666849[264] = 0;
   out_3531246140483666849[265] = 0;
   out_3531246140483666849[266] = 0;
   out_3531246140483666849[267] = 0;
   out_3531246140483666849[268] = 0;
   out_3531246140483666849[269] = 0;
   out_3531246140483666849[270] = 0;
   out_3531246140483666849[271] = 0;
   out_3531246140483666849[272] = 0;
   out_3531246140483666849[273] = 0;
   out_3531246140483666849[274] = 0;
   out_3531246140483666849[275] = 0;
   out_3531246140483666849[276] = 0;
   out_3531246140483666849[277] = 0;
   out_3531246140483666849[278] = 0;
   out_3531246140483666849[279] = 0;
   out_3531246140483666849[280] = 0;
   out_3531246140483666849[281] = 0;
   out_3531246140483666849[282] = 0;
   out_3531246140483666849[283] = 0;
   out_3531246140483666849[284] = 0;
   out_3531246140483666849[285] = 1.0;
   out_3531246140483666849[286] = 0;
   out_3531246140483666849[287] = 0;
   out_3531246140483666849[288] = 0;
   out_3531246140483666849[289] = 0;
   out_3531246140483666849[290] = 0;
   out_3531246140483666849[291] = 0;
   out_3531246140483666849[292] = 0;
   out_3531246140483666849[293] = 0;
   out_3531246140483666849[294] = 0;
   out_3531246140483666849[295] = 0;
   out_3531246140483666849[296] = 0;
   out_3531246140483666849[297] = 0;
   out_3531246140483666849[298] = 0;
   out_3531246140483666849[299] = 0;
   out_3531246140483666849[300] = 0;
   out_3531246140483666849[301] = 0;
   out_3531246140483666849[302] = 0;
   out_3531246140483666849[303] = 0;
   out_3531246140483666849[304] = 0;
   out_3531246140483666849[305] = 0;
   out_3531246140483666849[306] = 0;
   out_3531246140483666849[307] = 1.0;
   out_3531246140483666849[308] = 0;
   out_3531246140483666849[309] = 0;
   out_3531246140483666849[310] = 0;
   out_3531246140483666849[311] = 0;
   out_3531246140483666849[312] = 0;
   out_3531246140483666849[313] = 0;
   out_3531246140483666849[314] = 0;
   out_3531246140483666849[315] = 0;
   out_3531246140483666849[316] = 0;
   out_3531246140483666849[317] = 0;
   out_3531246140483666849[318] = 0;
   out_3531246140483666849[319] = 0;
   out_3531246140483666849[320] = 0;
   out_3531246140483666849[321] = 0;
   out_3531246140483666849[322] = 0;
   out_3531246140483666849[323] = 0;
   out_3531246140483666849[324] = 0;
   out_3531246140483666849[325] = 0;
   out_3531246140483666849[326] = 0;
   out_3531246140483666849[327] = 0;
   out_3531246140483666849[328] = 0;
   out_3531246140483666849[329] = 1.0;
   out_3531246140483666849[330] = 0;
   out_3531246140483666849[331] = 0;
   out_3531246140483666849[332] = 0;
   out_3531246140483666849[333] = 0;
   out_3531246140483666849[334] = 0;
   out_3531246140483666849[335] = 0;
   out_3531246140483666849[336] = 0;
   out_3531246140483666849[337] = 0;
   out_3531246140483666849[338] = 0;
   out_3531246140483666849[339] = 0;
   out_3531246140483666849[340] = 0;
   out_3531246140483666849[341] = 0;
   out_3531246140483666849[342] = 0;
   out_3531246140483666849[343] = 0;
   out_3531246140483666849[344] = 0;
   out_3531246140483666849[345] = 0;
   out_3531246140483666849[346] = 0;
   out_3531246140483666849[347] = 0;
   out_3531246140483666849[348] = 0;
   out_3531246140483666849[349] = 0;
   out_3531246140483666849[350] = 0;
   out_3531246140483666849[351] = 1.0;
   out_3531246140483666849[352] = 0;
   out_3531246140483666849[353] = 0;
   out_3531246140483666849[354] = 0;
   out_3531246140483666849[355] = 0;
   out_3531246140483666849[356] = 0;
   out_3531246140483666849[357] = 0;
   out_3531246140483666849[358] = 0;
   out_3531246140483666849[359] = 0;
   out_3531246140483666849[360] = 0;
   out_3531246140483666849[361] = 0;
   out_3531246140483666849[362] = 0;
   out_3531246140483666849[363] = 0;
   out_3531246140483666849[364] = 0;
   out_3531246140483666849[365] = 0;
   out_3531246140483666849[366] = 0;
   out_3531246140483666849[367] = 0;
   out_3531246140483666849[368] = 0;
   out_3531246140483666849[369] = 0;
   out_3531246140483666849[370] = 0;
   out_3531246140483666849[371] = 0;
   out_3531246140483666849[372] = 0;
   out_3531246140483666849[373] = 1.0;
   out_3531246140483666849[374] = 0;
   out_3531246140483666849[375] = 0;
   out_3531246140483666849[376] = 0;
   out_3531246140483666849[377] = 0;
   out_3531246140483666849[378] = 0;
   out_3531246140483666849[379] = 0;
   out_3531246140483666849[380] = 0;
   out_3531246140483666849[381] = 0;
   out_3531246140483666849[382] = 0;
   out_3531246140483666849[383] = 0;
   out_3531246140483666849[384] = 0;
   out_3531246140483666849[385] = 0;
   out_3531246140483666849[386] = 0;
   out_3531246140483666849[387] = 0;
   out_3531246140483666849[388] = 0;
   out_3531246140483666849[389] = 0;
   out_3531246140483666849[390] = 0;
   out_3531246140483666849[391] = 0;
   out_3531246140483666849[392] = 0;
   out_3531246140483666849[393] = 0;
   out_3531246140483666849[394] = 0;
   out_3531246140483666849[395] = 1.0;
   out_3531246140483666849[396] = 0;
   out_3531246140483666849[397] = 0;
   out_3531246140483666849[398] = 0;
   out_3531246140483666849[399] = 0;
   out_3531246140483666849[400] = 0;
   out_3531246140483666849[401] = 0;
   out_3531246140483666849[402] = 0;
   out_3531246140483666849[403] = 0;
   out_3531246140483666849[404] = 0;
   out_3531246140483666849[405] = 0;
   out_3531246140483666849[406] = 0;
   out_3531246140483666849[407] = 0;
   out_3531246140483666849[408] = 0;
   out_3531246140483666849[409] = 0;
   out_3531246140483666849[410] = 0;
   out_3531246140483666849[411] = 0;
   out_3531246140483666849[412] = 0;
   out_3531246140483666849[413] = 0;
   out_3531246140483666849[414] = 0;
   out_3531246140483666849[415] = 0;
   out_3531246140483666849[416] = 0;
   out_3531246140483666849[417] = 1.0;
   out_3531246140483666849[418] = 0;
   out_3531246140483666849[419] = 0;
   out_3531246140483666849[420] = 0;
   out_3531246140483666849[421] = 0;
   out_3531246140483666849[422] = 0;
   out_3531246140483666849[423] = 0;
   out_3531246140483666849[424] = 0;
   out_3531246140483666849[425] = 0;
   out_3531246140483666849[426] = 0;
   out_3531246140483666849[427] = 0;
   out_3531246140483666849[428] = 0;
   out_3531246140483666849[429] = 0;
   out_3531246140483666849[430] = 0;
   out_3531246140483666849[431] = 0;
   out_3531246140483666849[432] = 0;
   out_3531246140483666849[433] = 0;
   out_3531246140483666849[434] = 0;
   out_3531246140483666849[435] = 0;
   out_3531246140483666849[436] = 0;
   out_3531246140483666849[437] = 0;
   out_3531246140483666849[438] = 0;
   out_3531246140483666849[439] = 1.0;
   out_3531246140483666849[440] = 0;
   out_3531246140483666849[441] = 0;
   out_3531246140483666849[442] = 0;
   out_3531246140483666849[443] = 0;
   out_3531246140483666849[444] = 0;
   out_3531246140483666849[445] = 0;
   out_3531246140483666849[446] = 0;
   out_3531246140483666849[447] = 0;
   out_3531246140483666849[448] = 0;
   out_3531246140483666849[449] = 0;
   out_3531246140483666849[450] = 0;
   out_3531246140483666849[451] = 0;
   out_3531246140483666849[452] = 0;
   out_3531246140483666849[453] = 0;
   out_3531246140483666849[454] = 0;
   out_3531246140483666849[455] = 0;
   out_3531246140483666849[456] = 0;
   out_3531246140483666849[457] = 0;
   out_3531246140483666849[458] = 0;
   out_3531246140483666849[459] = 0;
   out_3531246140483666849[460] = 0;
   out_3531246140483666849[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_5640748228499018316) {
   out_5640748228499018316[0] = dt*state[7] + state[0];
   out_5640748228499018316[1] = dt*state[8] + state[1];
   out_5640748228499018316[2] = dt*state[9] + state[2];
   out_5640748228499018316[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_5640748228499018316[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_5640748228499018316[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_5640748228499018316[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_5640748228499018316[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_5640748228499018316[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_5640748228499018316[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_5640748228499018316[10] = state[10];
   out_5640748228499018316[11] = state[11];
   out_5640748228499018316[12] = state[12];
   out_5640748228499018316[13] = state[13];
   out_5640748228499018316[14] = state[14];
   out_5640748228499018316[15] = state[15];
   out_5640748228499018316[16] = state[16];
   out_5640748228499018316[17] = state[17];
   out_5640748228499018316[18] = state[18];
   out_5640748228499018316[19] = state[19];
   out_5640748228499018316[20] = state[20];
   out_5640748228499018316[21] = state[21];
}
void F_fun(double *state, double dt, double *out_40891815030632395) {
   out_40891815030632395[0] = 1;
   out_40891815030632395[1] = 0;
   out_40891815030632395[2] = 0;
   out_40891815030632395[3] = 0;
   out_40891815030632395[4] = 0;
   out_40891815030632395[5] = 0;
   out_40891815030632395[6] = dt;
   out_40891815030632395[7] = 0;
   out_40891815030632395[8] = 0;
   out_40891815030632395[9] = 0;
   out_40891815030632395[10] = 0;
   out_40891815030632395[11] = 0;
   out_40891815030632395[12] = 0;
   out_40891815030632395[13] = 0;
   out_40891815030632395[14] = 0;
   out_40891815030632395[15] = 0;
   out_40891815030632395[16] = 0;
   out_40891815030632395[17] = 0;
   out_40891815030632395[18] = 0;
   out_40891815030632395[19] = 0;
   out_40891815030632395[20] = 0;
   out_40891815030632395[21] = 0;
   out_40891815030632395[22] = 1;
   out_40891815030632395[23] = 0;
   out_40891815030632395[24] = 0;
   out_40891815030632395[25] = 0;
   out_40891815030632395[26] = 0;
   out_40891815030632395[27] = 0;
   out_40891815030632395[28] = dt;
   out_40891815030632395[29] = 0;
   out_40891815030632395[30] = 0;
   out_40891815030632395[31] = 0;
   out_40891815030632395[32] = 0;
   out_40891815030632395[33] = 0;
   out_40891815030632395[34] = 0;
   out_40891815030632395[35] = 0;
   out_40891815030632395[36] = 0;
   out_40891815030632395[37] = 0;
   out_40891815030632395[38] = 0;
   out_40891815030632395[39] = 0;
   out_40891815030632395[40] = 0;
   out_40891815030632395[41] = 0;
   out_40891815030632395[42] = 0;
   out_40891815030632395[43] = 0;
   out_40891815030632395[44] = 1;
   out_40891815030632395[45] = 0;
   out_40891815030632395[46] = 0;
   out_40891815030632395[47] = 0;
   out_40891815030632395[48] = 0;
   out_40891815030632395[49] = 0;
   out_40891815030632395[50] = dt;
   out_40891815030632395[51] = 0;
   out_40891815030632395[52] = 0;
   out_40891815030632395[53] = 0;
   out_40891815030632395[54] = 0;
   out_40891815030632395[55] = 0;
   out_40891815030632395[56] = 0;
   out_40891815030632395[57] = 0;
   out_40891815030632395[58] = 0;
   out_40891815030632395[59] = 0;
   out_40891815030632395[60] = 0;
   out_40891815030632395[61] = 0;
   out_40891815030632395[62] = 0;
   out_40891815030632395[63] = 0;
   out_40891815030632395[64] = 0;
   out_40891815030632395[65] = 0;
   out_40891815030632395[66] = 1;
   out_40891815030632395[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_40891815030632395[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_40891815030632395[69] = 0;
   out_40891815030632395[70] = 0;
   out_40891815030632395[71] = 0;
   out_40891815030632395[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_40891815030632395[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_40891815030632395[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_40891815030632395[75] = 0;
   out_40891815030632395[76] = 0;
   out_40891815030632395[77] = 0;
   out_40891815030632395[78] = 0;
   out_40891815030632395[79] = 0;
   out_40891815030632395[80] = 0;
   out_40891815030632395[81] = 0;
   out_40891815030632395[82] = 0;
   out_40891815030632395[83] = 0;
   out_40891815030632395[84] = 0;
   out_40891815030632395[85] = 0;
   out_40891815030632395[86] = 0;
   out_40891815030632395[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_40891815030632395[88] = 1;
   out_40891815030632395[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_40891815030632395[90] = 0;
   out_40891815030632395[91] = 0;
   out_40891815030632395[92] = 0;
   out_40891815030632395[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_40891815030632395[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_40891815030632395[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_40891815030632395[96] = 0;
   out_40891815030632395[97] = 0;
   out_40891815030632395[98] = 0;
   out_40891815030632395[99] = 0;
   out_40891815030632395[100] = 0;
   out_40891815030632395[101] = 0;
   out_40891815030632395[102] = 0;
   out_40891815030632395[103] = 0;
   out_40891815030632395[104] = 0;
   out_40891815030632395[105] = 0;
   out_40891815030632395[106] = 0;
   out_40891815030632395[107] = 0;
   out_40891815030632395[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_40891815030632395[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_40891815030632395[110] = 1;
   out_40891815030632395[111] = 0;
   out_40891815030632395[112] = 0;
   out_40891815030632395[113] = 0;
   out_40891815030632395[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_40891815030632395[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_40891815030632395[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_40891815030632395[117] = 0;
   out_40891815030632395[118] = 0;
   out_40891815030632395[119] = 0;
   out_40891815030632395[120] = 0;
   out_40891815030632395[121] = 0;
   out_40891815030632395[122] = 0;
   out_40891815030632395[123] = 0;
   out_40891815030632395[124] = 0;
   out_40891815030632395[125] = 0;
   out_40891815030632395[126] = 0;
   out_40891815030632395[127] = 0;
   out_40891815030632395[128] = 0;
   out_40891815030632395[129] = 0;
   out_40891815030632395[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_40891815030632395[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_40891815030632395[132] = 1;
   out_40891815030632395[133] = 0;
   out_40891815030632395[134] = 0;
   out_40891815030632395[135] = 0;
   out_40891815030632395[136] = 0;
   out_40891815030632395[137] = 0;
   out_40891815030632395[138] = 0;
   out_40891815030632395[139] = 0;
   out_40891815030632395[140] = 0;
   out_40891815030632395[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_40891815030632395[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_40891815030632395[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_40891815030632395[144] = 0;
   out_40891815030632395[145] = 0;
   out_40891815030632395[146] = 0;
   out_40891815030632395[147] = 0;
   out_40891815030632395[148] = 0;
   out_40891815030632395[149] = 0;
   out_40891815030632395[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_40891815030632395[151] = 0;
   out_40891815030632395[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_40891815030632395[153] = 0;
   out_40891815030632395[154] = 1;
   out_40891815030632395[155] = 0;
   out_40891815030632395[156] = 0;
   out_40891815030632395[157] = 0;
   out_40891815030632395[158] = 0;
   out_40891815030632395[159] = 0;
   out_40891815030632395[160] = 0;
   out_40891815030632395[161] = 0;
   out_40891815030632395[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_40891815030632395[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_40891815030632395[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_40891815030632395[165] = 0;
   out_40891815030632395[166] = 0;
   out_40891815030632395[167] = 0;
   out_40891815030632395[168] = 0;
   out_40891815030632395[169] = 0;
   out_40891815030632395[170] = 0;
   out_40891815030632395[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_40891815030632395[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_40891815030632395[173] = 0;
   out_40891815030632395[174] = 0;
   out_40891815030632395[175] = 0;
   out_40891815030632395[176] = 1;
   out_40891815030632395[177] = 0;
   out_40891815030632395[178] = 0;
   out_40891815030632395[179] = 0;
   out_40891815030632395[180] = 0;
   out_40891815030632395[181] = 0;
   out_40891815030632395[182] = 0;
   out_40891815030632395[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_40891815030632395[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_40891815030632395[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_40891815030632395[186] = 0;
   out_40891815030632395[187] = 0;
   out_40891815030632395[188] = 0;
   out_40891815030632395[189] = 0;
   out_40891815030632395[190] = 0;
   out_40891815030632395[191] = 0;
   out_40891815030632395[192] = 0;
   out_40891815030632395[193] = 0;
   out_40891815030632395[194] = 0;
   out_40891815030632395[195] = 0;
   out_40891815030632395[196] = 0;
   out_40891815030632395[197] = 0;
   out_40891815030632395[198] = 1;
   out_40891815030632395[199] = 0;
   out_40891815030632395[200] = 0;
   out_40891815030632395[201] = 0;
   out_40891815030632395[202] = 0;
   out_40891815030632395[203] = 0;
   out_40891815030632395[204] = 0;
   out_40891815030632395[205] = 0;
   out_40891815030632395[206] = 0;
   out_40891815030632395[207] = 0;
   out_40891815030632395[208] = 0;
   out_40891815030632395[209] = 0;
   out_40891815030632395[210] = 0;
   out_40891815030632395[211] = 0;
   out_40891815030632395[212] = 0;
   out_40891815030632395[213] = 0;
   out_40891815030632395[214] = 0;
   out_40891815030632395[215] = 0;
   out_40891815030632395[216] = 0;
   out_40891815030632395[217] = 0;
   out_40891815030632395[218] = 0;
   out_40891815030632395[219] = 0;
   out_40891815030632395[220] = 1;
   out_40891815030632395[221] = 0;
   out_40891815030632395[222] = 0;
   out_40891815030632395[223] = 0;
   out_40891815030632395[224] = 0;
   out_40891815030632395[225] = 0;
   out_40891815030632395[226] = 0;
   out_40891815030632395[227] = 0;
   out_40891815030632395[228] = 0;
   out_40891815030632395[229] = 0;
   out_40891815030632395[230] = 0;
   out_40891815030632395[231] = 0;
   out_40891815030632395[232] = 0;
   out_40891815030632395[233] = 0;
   out_40891815030632395[234] = 0;
   out_40891815030632395[235] = 0;
   out_40891815030632395[236] = 0;
   out_40891815030632395[237] = 0;
   out_40891815030632395[238] = 0;
   out_40891815030632395[239] = 0;
   out_40891815030632395[240] = 0;
   out_40891815030632395[241] = 0;
   out_40891815030632395[242] = 1;
   out_40891815030632395[243] = 0;
   out_40891815030632395[244] = 0;
   out_40891815030632395[245] = 0;
   out_40891815030632395[246] = 0;
   out_40891815030632395[247] = 0;
   out_40891815030632395[248] = 0;
   out_40891815030632395[249] = 0;
   out_40891815030632395[250] = 0;
   out_40891815030632395[251] = 0;
   out_40891815030632395[252] = 0;
   out_40891815030632395[253] = 0;
   out_40891815030632395[254] = 0;
   out_40891815030632395[255] = 0;
   out_40891815030632395[256] = 0;
   out_40891815030632395[257] = 0;
   out_40891815030632395[258] = 0;
   out_40891815030632395[259] = 0;
   out_40891815030632395[260] = 0;
   out_40891815030632395[261] = 0;
   out_40891815030632395[262] = 0;
   out_40891815030632395[263] = 0;
   out_40891815030632395[264] = 1;
   out_40891815030632395[265] = 0;
   out_40891815030632395[266] = 0;
   out_40891815030632395[267] = 0;
   out_40891815030632395[268] = 0;
   out_40891815030632395[269] = 0;
   out_40891815030632395[270] = 0;
   out_40891815030632395[271] = 0;
   out_40891815030632395[272] = 0;
   out_40891815030632395[273] = 0;
   out_40891815030632395[274] = 0;
   out_40891815030632395[275] = 0;
   out_40891815030632395[276] = 0;
   out_40891815030632395[277] = 0;
   out_40891815030632395[278] = 0;
   out_40891815030632395[279] = 0;
   out_40891815030632395[280] = 0;
   out_40891815030632395[281] = 0;
   out_40891815030632395[282] = 0;
   out_40891815030632395[283] = 0;
   out_40891815030632395[284] = 0;
   out_40891815030632395[285] = 0;
   out_40891815030632395[286] = 1;
   out_40891815030632395[287] = 0;
   out_40891815030632395[288] = 0;
   out_40891815030632395[289] = 0;
   out_40891815030632395[290] = 0;
   out_40891815030632395[291] = 0;
   out_40891815030632395[292] = 0;
   out_40891815030632395[293] = 0;
   out_40891815030632395[294] = 0;
   out_40891815030632395[295] = 0;
   out_40891815030632395[296] = 0;
   out_40891815030632395[297] = 0;
   out_40891815030632395[298] = 0;
   out_40891815030632395[299] = 0;
   out_40891815030632395[300] = 0;
   out_40891815030632395[301] = 0;
   out_40891815030632395[302] = 0;
   out_40891815030632395[303] = 0;
   out_40891815030632395[304] = 0;
   out_40891815030632395[305] = 0;
   out_40891815030632395[306] = 0;
   out_40891815030632395[307] = 0;
   out_40891815030632395[308] = 1;
   out_40891815030632395[309] = 0;
   out_40891815030632395[310] = 0;
   out_40891815030632395[311] = 0;
   out_40891815030632395[312] = 0;
   out_40891815030632395[313] = 0;
   out_40891815030632395[314] = 0;
   out_40891815030632395[315] = 0;
   out_40891815030632395[316] = 0;
   out_40891815030632395[317] = 0;
   out_40891815030632395[318] = 0;
   out_40891815030632395[319] = 0;
   out_40891815030632395[320] = 0;
   out_40891815030632395[321] = 0;
   out_40891815030632395[322] = 0;
   out_40891815030632395[323] = 0;
   out_40891815030632395[324] = 0;
   out_40891815030632395[325] = 0;
   out_40891815030632395[326] = 0;
   out_40891815030632395[327] = 0;
   out_40891815030632395[328] = 0;
   out_40891815030632395[329] = 0;
   out_40891815030632395[330] = 1;
   out_40891815030632395[331] = 0;
   out_40891815030632395[332] = 0;
   out_40891815030632395[333] = 0;
   out_40891815030632395[334] = 0;
   out_40891815030632395[335] = 0;
   out_40891815030632395[336] = 0;
   out_40891815030632395[337] = 0;
   out_40891815030632395[338] = 0;
   out_40891815030632395[339] = 0;
   out_40891815030632395[340] = 0;
   out_40891815030632395[341] = 0;
   out_40891815030632395[342] = 0;
   out_40891815030632395[343] = 0;
   out_40891815030632395[344] = 0;
   out_40891815030632395[345] = 0;
   out_40891815030632395[346] = 0;
   out_40891815030632395[347] = 0;
   out_40891815030632395[348] = 0;
   out_40891815030632395[349] = 0;
   out_40891815030632395[350] = 0;
   out_40891815030632395[351] = 0;
   out_40891815030632395[352] = 1;
   out_40891815030632395[353] = 0;
   out_40891815030632395[354] = 0;
   out_40891815030632395[355] = 0;
   out_40891815030632395[356] = 0;
   out_40891815030632395[357] = 0;
   out_40891815030632395[358] = 0;
   out_40891815030632395[359] = 0;
   out_40891815030632395[360] = 0;
   out_40891815030632395[361] = 0;
   out_40891815030632395[362] = 0;
   out_40891815030632395[363] = 0;
   out_40891815030632395[364] = 0;
   out_40891815030632395[365] = 0;
   out_40891815030632395[366] = 0;
   out_40891815030632395[367] = 0;
   out_40891815030632395[368] = 0;
   out_40891815030632395[369] = 0;
   out_40891815030632395[370] = 0;
   out_40891815030632395[371] = 0;
   out_40891815030632395[372] = 0;
   out_40891815030632395[373] = 0;
   out_40891815030632395[374] = 1;
   out_40891815030632395[375] = 0;
   out_40891815030632395[376] = 0;
   out_40891815030632395[377] = 0;
   out_40891815030632395[378] = 0;
   out_40891815030632395[379] = 0;
   out_40891815030632395[380] = 0;
   out_40891815030632395[381] = 0;
   out_40891815030632395[382] = 0;
   out_40891815030632395[383] = 0;
   out_40891815030632395[384] = 0;
   out_40891815030632395[385] = 0;
   out_40891815030632395[386] = 0;
   out_40891815030632395[387] = 0;
   out_40891815030632395[388] = 0;
   out_40891815030632395[389] = 0;
   out_40891815030632395[390] = 0;
   out_40891815030632395[391] = 0;
   out_40891815030632395[392] = 0;
   out_40891815030632395[393] = 0;
   out_40891815030632395[394] = 0;
   out_40891815030632395[395] = 0;
   out_40891815030632395[396] = 1;
   out_40891815030632395[397] = 0;
   out_40891815030632395[398] = 0;
   out_40891815030632395[399] = 0;
   out_40891815030632395[400] = 0;
   out_40891815030632395[401] = 0;
   out_40891815030632395[402] = 0;
   out_40891815030632395[403] = 0;
   out_40891815030632395[404] = 0;
   out_40891815030632395[405] = 0;
   out_40891815030632395[406] = 0;
   out_40891815030632395[407] = 0;
   out_40891815030632395[408] = 0;
   out_40891815030632395[409] = 0;
   out_40891815030632395[410] = 0;
   out_40891815030632395[411] = 0;
   out_40891815030632395[412] = 0;
   out_40891815030632395[413] = 0;
   out_40891815030632395[414] = 0;
   out_40891815030632395[415] = 0;
   out_40891815030632395[416] = 0;
   out_40891815030632395[417] = 0;
   out_40891815030632395[418] = 1;
   out_40891815030632395[419] = 0;
   out_40891815030632395[420] = 0;
   out_40891815030632395[421] = 0;
   out_40891815030632395[422] = 0;
   out_40891815030632395[423] = 0;
   out_40891815030632395[424] = 0;
   out_40891815030632395[425] = 0;
   out_40891815030632395[426] = 0;
   out_40891815030632395[427] = 0;
   out_40891815030632395[428] = 0;
   out_40891815030632395[429] = 0;
   out_40891815030632395[430] = 0;
   out_40891815030632395[431] = 0;
   out_40891815030632395[432] = 0;
   out_40891815030632395[433] = 0;
   out_40891815030632395[434] = 0;
   out_40891815030632395[435] = 0;
   out_40891815030632395[436] = 0;
   out_40891815030632395[437] = 0;
   out_40891815030632395[438] = 0;
   out_40891815030632395[439] = 0;
   out_40891815030632395[440] = 1;
}
void h_4(double *state, double *unused, double *out_5552634738632533904) {
   out_5552634738632533904[0] = state[10] + state[13];
   out_5552634738632533904[1] = state[11] + state[14];
   out_5552634738632533904[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_7051147384659624149) {
   out_7051147384659624149[0] = 0;
   out_7051147384659624149[1] = 0;
   out_7051147384659624149[2] = 0;
   out_7051147384659624149[3] = 0;
   out_7051147384659624149[4] = 0;
   out_7051147384659624149[5] = 0;
   out_7051147384659624149[6] = 0;
   out_7051147384659624149[7] = 0;
   out_7051147384659624149[8] = 0;
   out_7051147384659624149[9] = 0;
   out_7051147384659624149[10] = 1;
   out_7051147384659624149[11] = 0;
   out_7051147384659624149[12] = 0;
   out_7051147384659624149[13] = 1;
   out_7051147384659624149[14] = 0;
   out_7051147384659624149[15] = 0;
   out_7051147384659624149[16] = 0;
   out_7051147384659624149[17] = 0;
   out_7051147384659624149[18] = 0;
   out_7051147384659624149[19] = 0;
   out_7051147384659624149[20] = 0;
   out_7051147384659624149[21] = 0;
   out_7051147384659624149[22] = 0;
   out_7051147384659624149[23] = 0;
   out_7051147384659624149[24] = 0;
   out_7051147384659624149[25] = 0;
   out_7051147384659624149[26] = 0;
   out_7051147384659624149[27] = 0;
   out_7051147384659624149[28] = 0;
   out_7051147384659624149[29] = 0;
   out_7051147384659624149[30] = 0;
   out_7051147384659624149[31] = 0;
   out_7051147384659624149[32] = 0;
   out_7051147384659624149[33] = 1;
   out_7051147384659624149[34] = 0;
   out_7051147384659624149[35] = 0;
   out_7051147384659624149[36] = 1;
   out_7051147384659624149[37] = 0;
   out_7051147384659624149[38] = 0;
   out_7051147384659624149[39] = 0;
   out_7051147384659624149[40] = 0;
   out_7051147384659624149[41] = 0;
   out_7051147384659624149[42] = 0;
   out_7051147384659624149[43] = 0;
   out_7051147384659624149[44] = 0;
   out_7051147384659624149[45] = 0;
   out_7051147384659624149[46] = 0;
   out_7051147384659624149[47] = 0;
   out_7051147384659624149[48] = 0;
   out_7051147384659624149[49] = 0;
   out_7051147384659624149[50] = 0;
   out_7051147384659624149[51] = 0;
   out_7051147384659624149[52] = 0;
   out_7051147384659624149[53] = 0;
   out_7051147384659624149[54] = 0;
   out_7051147384659624149[55] = 0;
   out_7051147384659624149[56] = 1;
   out_7051147384659624149[57] = 0;
   out_7051147384659624149[58] = 0;
   out_7051147384659624149[59] = 1;
   out_7051147384659624149[60] = 0;
   out_7051147384659624149[61] = 0;
   out_7051147384659624149[62] = 0;
   out_7051147384659624149[63] = 0;
   out_7051147384659624149[64] = 0;
   out_7051147384659624149[65] = 0;
}
void h_9(double *state, double *unused, double *out_8377485234475286224) {
   out_8377485234475286224[0] = state[10];
   out_8377485234475286224[1] = state[11];
   out_8377485234475286224[2] = state[12];
}
void H_9(double *state, double *unused, double *out_236071550604823321) {
   out_236071550604823321[0] = 0;
   out_236071550604823321[1] = 0;
   out_236071550604823321[2] = 0;
   out_236071550604823321[3] = 0;
   out_236071550604823321[4] = 0;
   out_236071550604823321[5] = 0;
   out_236071550604823321[6] = 0;
   out_236071550604823321[7] = 0;
   out_236071550604823321[8] = 0;
   out_236071550604823321[9] = 0;
   out_236071550604823321[10] = 1;
   out_236071550604823321[11] = 0;
   out_236071550604823321[12] = 0;
   out_236071550604823321[13] = 0;
   out_236071550604823321[14] = 0;
   out_236071550604823321[15] = 0;
   out_236071550604823321[16] = 0;
   out_236071550604823321[17] = 0;
   out_236071550604823321[18] = 0;
   out_236071550604823321[19] = 0;
   out_236071550604823321[20] = 0;
   out_236071550604823321[21] = 0;
   out_236071550604823321[22] = 0;
   out_236071550604823321[23] = 0;
   out_236071550604823321[24] = 0;
   out_236071550604823321[25] = 0;
   out_236071550604823321[26] = 0;
   out_236071550604823321[27] = 0;
   out_236071550604823321[28] = 0;
   out_236071550604823321[29] = 0;
   out_236071550604823321[30] = 0;
   out_236071550604823321[31] = 0;
   out_236071550604823321[32] = 0;
   out_236071550604823321[33] = 1;
   out_236071550604823321[34] = 0;
   out_236071550604823321[35] = 0;
   out_236071550604823321[36] = 0;
   out_236071550604823321[37] = 0;
   out_236071550604823321[38] = 0;
   out_236071550604823321[39] = 0;
   out_236071550604823321[40] = 0;
   out_236071550604823321[41] = 0;
   out_236071550604823321[42] = 0;
   out_236071550604823321[43] = 0;
   out_236071550604823321[44] = 0;
   out_236071550604823321[45] = 0;
   out_236071550604823321[46] = 0;
   out_236071550604823321[47] = 0;
   out_236071550604823321[48] = 0;
   out_236071550604823321[49] = 0;
   out_236071550604823321[50] = 0;
   out_236071550604823321[51] = 0;
   out_236071550604823321[52] = 0;
   out_236071550604823321[53] = 0;
   out_236071550604823321[54] = 0;
   out_236071550604823321[55] = 0;
   out_236071550604823321[56] = 1;
   out_236071550604823321[57] = 0;
   out_236071550604823321[58] = 0;
   out_236071550604823321[59] = 0;
   out_236071550604823321[60] = 0;
   out_236071550604823321[61] = 0;
   out_236071550604823321[62] = 0;
   out_236071550604823321[63] = 0;
   out_236071550604823321[64] = 0;
   out_236071550604823321[65] = 0;
}
void h_10(double *state, double *unused, double *out_743876404820101682) {
   out_743876404820101682[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_743876404820101682[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_743876404820101682[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_3520204588481565727) {
   out_3520204588481565727[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3520204588481565727[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3520204588481565727[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_3520204588481565727[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3520204588481565727[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3520204588481565727[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3520204588481565727[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3520204588481565727[7] = 0;
   out_3520204588481565727[8] = 0;
   out_3520204588481565727[9] = 0;
   out_3520204588481565727[10] = 0;
   out_3520204588481565727[11] = 0;
   out_3520204588481565727[12] = 0;
   out_3520204588481565727[13] = 0;
   out_3520204588481565727[14] = 0;
   out_3520204588481565727[15] = 0;
   out_3520204588481565727[16] = 1;
   out_3520204588481565727[17] = 0;
   out_3520204588481565727[18] = 0;
   out_3520204588481565727[19] = 1;
   out_3520204588481565727[20] = 0;
   out_3520204588481565727[21] = 0;
   out_3520204588481565727[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3520204588481565727[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3520204588481565727[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_3520204588481565727[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3520204588481565727[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3520204588481565727[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3520204588481565727[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3520204588481565727[29] = 0;
   out_3520204588481565727[30] = 0;
   out_3520204588481565727[31] = 0;
   out_3520204588481565727[32] = 0;
   out_3520204588481565727[33] = 0;
   out_3520204588481565727[34] = 0;
   out_3520204588481565727[35] = 0;
   out_3520204588481565727[36] = 0;
   out_3520204588481565727[37] = 0;
   out_3520204588481565727[38] = 0;
   out_3520204588481565727[39] = 1;
   out_3520204588481565727[40] = 0;
   out_3520204588481565727[41] = 0;
   out_3520204588481565727[42] = 1;
   out_3520204588481565727[43] = 0;
   out_3520204588481565727[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_3520204588481565727[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_3520204588481565727[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3520204588481565727[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3520204588481565727[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3520204588481565727[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3520204588481565727[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3520204588481565727[51] = 0;
   out_3520204588481565727[52] = 0;
   out_3520204588481565727[53] = 0;
   out_3520204588481565727[54] = 0;
   out_3520204588481565727[55] = 0;
   out_3520204588481565727[56] = 0;
   out_3520204588481565727[57] = 0;
   out_3520204588481565727[58] = 0;
   out_3520204588481565727[59] = 0;
   out_3520204588481565727[60] = 0;
   out_3520204588481565727[61] = 0;
   out_3520204588481565727[62] = 1;
   out_3520204588481565727[63] = 0;
   out_3520204588481565727[64] = 0;
   out_3520204588481565727[65] = 1;
}
void h_12(double *state, double *unused, double *out_3690241237526513347) {
   out_3690241237526513347[0] = state[0];
   out_3690241237526513347[1] = state[1];
   out_3690241237526513347[2] = state[2];
}
void H_12(double *state, double *unused, double *out_2031690976627662354) {
   out_2031690976627662354[0] = 1;
   out_2031690976627662354[1] = 0;
   out_2031690976627662354[2] = 0;
   out_2031690976627662354[3] = 0;
   out_2031690976627662354[4] = 0;
   out_2031690976627662354[5] = 0;
   out_2031690976627662354[6] = 0;
   out_2031690976627662354[7] = 0;
   out_2031690976627662354[8] = 0;
   out_2031690976627662354[9] = 0;
   out_2031690976627662354[10] = 0;
   out_2031690976627662354[11] = 0;
   out_2031690976627662354[12] = 0;
   out_2031690976627662354[13] = 0;
   out_2031690976627662354[14] = 0;
   out_2031690976627662354[15] = 0;
   out_2031690976627662354[16] = 0;
   out_2031690976627662354[17] = 0;
   out_2031690976627662354[18] = 0;
   out_2031690976627662354[19] = 0;
   out_2031690976627662354[20] = 0;
   out_2031690976627662354[21] = 0;
   out_2031690976627662354[22] = 0;
   out_2031690976627662354[23] = 1;
   out_2031690976627662354[24] = 0;
   out_2031690976627662354[25] = 0;
   out_2031690976627662354[26] = 0;
   out_2031690976627662354[27] = 0;
   out_2031690976627662354[28] = 0;
   out_2031690976627662354[29] = 0;
   out_2031690976627662354[30] = 0;
   out_2031690976627662354[31] = 0;
   out_2031690976627662354[32] = 0;
   out_2031690976627662354[33] = 0;
   out_2031690976627662354[34] = 0;
   out_2031690976627662354[35] = 0;
   out_2031690976627662354[36] = 0;
   out_2031690976627662354[37] = 0;
   out_2031690976627662354[38] = 0;
   out_2031690976627662354[39] = 0;
   out_2031690976627662354[40] = 0;
   out_2031690976627662354[41] = 0;
   out_2031690976627662354[42] = 0;
   out_2031690976627662354[43] = 0;
   out_2031690976627662354[44] = 0;
   out_2031690976627662354[45] = 0;
   out_2031690976627662354[46] = 1;
   out_2031690976627662354[47] = 0;
   out_2031690976627662354[48] = 0;
   out_2031690976627662354[49] = 0;
   out_2031690976627662354[50] = 0;
   out_2031690976627662354[51] = 0;
   out_2031690976627662354[52] = 0;
   out_2031690976627662354[53] = 0;
   out_2031690976627662354[54] = 0;
   out_2031690976627662354[55] = 0;
   out_2031690976627662354[56] = 0;
   out_2031690976627662354[57] = 0;
   out_2031690976627662354[58] = 0;
   out_2031690976627662354[59] = 0;
   out_2031690976627662354[60] = 0;
   out_2031690976627662354[61] = 0;
   out_2031690976627662354[62] = 0;
   out_2031690976627662354[63] = 0;
   out_2031690976627662354[64] = 0;
   out_2031690976627662354[65] = 0;
}
void h_31(double *state, double *unused, double *out_453781667833494065) {
   out_453781667833494065[0] = state[7];
   out_453781667833494065[1] = state[8];
   out_453781667833494065[2] = state[9];
}
void H_31(double *state, double *unused, double *out_713872055697351355) {
   out_713872055697351355[0] = 0;
   out_713872055697351355[1] = 0;
   out_713872055697351355[2] = 0;
   out_713872055697351355[3] = 0;
   out_713872055697351355[4] = 0;
   out_713872055697351355[5] = 0;
   out_713872055697351355[6] = 0;
   out_713872055697351355[7] = 1;
   out_713872055697351355[8] = 0;
   out_713872055697351355[9] = 0;
   out_713872055697351355[10] = 0;
   out_713872055697351355[11] = 0;
   out_713872055697351355[12] = 0;
   out_713872055697351355[13] = 0;
   out_713872055697351355[14] = 0;
   out_713872055697351355[15] = 0;
   out_713872055697351355[16] = 0;
   out_713872055697351355[17] = 0;
   out_713872055697351355[18] = 0;
   out_713872055697351355[19] = 0;
   out_713872055697351355[20] = 0;
   out_713872055697351355[21] = 0;
   out_713872055697351355[22] = 0;
   out_713872055697351355[23] = 0;
   out_713872055697351355[24] = 0;
   out_713872055697351355[25] = 0;
   out_713872055697351355[26] = 0;
   out_713872055697351355[27] = 0;
   out_713872055697351355[28] = 0;
   out_713872055697351355[29] = 0;
   out_713872055697351355[30] = 1;
   out_713872055697351355[31] = 0;
   out_713872055697351355[32] = 0;
   out_713872055697351355[33] = 0;
   out_713872055697351355[34] = 0;
   out_713872055697351355[35] = 0;
   out_713872055697351355[36] = 0;
   out_713872055697351355[37] = 0;
   out_713872055697351355[38] = 0;
   out_713872055697351355[39] = 0;
   out_713872055697351355[40] = 0;
   out_713872055697351355[41] = 0;
   out_713872055697351355[42] = 0;
   out_713872055697351355[43] = 0;
   out_713872055697351355[44] = 0;
   out_713872055697351355[45] = 0;
   out_713872055697351355[46] = 0;
   out_713872055697351355[47] = 0;
   out_713872055697351355[48] = 0;
   out_713872055697351355[49] = 0;
   out_713872055697351355[50] = 0;
   out_713872055697351355[51] = 0;
   out_713872055697351355[52] = 0;
   out_713872055697351355[53] = 1;
   out_713872055697351355[54] = 0;
   out_713872055697351355[55] = 0;
   out_713872055697351355[56] = 0;
   out_713872055697351355[57] = 0;
   out_713872055697351355[58] = 0;
   out_713872055697351355[59] = 0;
   out_713872055697351355[60] = 0;
   out_713872055697351355[61] = 0;
   out_713872055697351355[62] = 0;
   out_713872055697351355[63] = 0;
   out_713872055697351355[64] = 0;
   out_713872055697351355[65] = 0;
}
void h_32(double *state, double *unused, double *out_6886599282477753184) {
   out_6886599282477753184[0] = state[3];
   out_6886599282477753184[1] = state[4];
   out_6886599282477753184[2] = state[5];
   out_6886599282477753184[3] = state[6];
}
void H_32(double *state, double *unused, double *out_7903184564958925843) {
   out_7903184564958925843[0] = 0;
   out_7903184564958925843[1] = 0;
   out_7903184564958925843[2] = 0;
   out_7903184564958925843[3] = 1;
   out_7903184564958925843[4] = 0;
   out_7903184564958925843[5] = 0;
   out_7903184564958925843[6] = 0;
   out_7903184564958925843[7] = 0;
   out_7903184564958925843[8] = 0;
   out_7903184564958925843[9] = 0;
   out_7903184564958925843[10] = 0;
   out_7903184564958925843[11] = 0;
   out_7903184564958925843[12] = 0;
   out_7903184564958925843[13] = 0;
   out_7903184564958925843[14] = 0;
   out_7903184564958925843[15] = 0;
   out_7903184564958925843[16] = 0;
   out_7903184564958925843[17] = 0;
   out_7903184564958925843[18] = 0;
   out_7903184564958925843[19] = 0;
   out_7903184564958925843[20] = 0;
   out_7903184564958925843[21] = 0;
   out_7903184564958925843[22] = 0;
   out_7903184564958925843[23] = 0;
   out_7903184564958925843[24] = 0;
   out_7903184564958925843[25] = 0;
   out_7903184564958925843[26] = 1;
   out_7903184564958925843[27] = 0;
   out_7903184564958925843[28] = 0;
   out_7903184564958925843[29] = 0;
   out_7903184564958925843[30] = 0;
   out_7903184564958925843[31] = 0;
   out_7903184564958925843[32] = 0;
   out_7903184564958925843[33] = 0;
   out_7903184564958925843[34] = 0;
   out_7903184564958925843[35] = 0;
   out_7903184564958925843[36] = 0;
   out_7903184564958925843[37] = 0;
   out_7903184564958925843[38] = 0;
   out_7903184564958925843[39] = 0;
   out_7903184564958925843[40] = 0;
   out_7903184564958925843[41] = 0;
   out_7903184564958925843[42] = 0;
   out_7903184564958925843[43] = 0;
   out_7903184564958925843[44] = 0;
   out_7903184564958925843[45] = 0;
   out_7903184564958925843[46] = 0;
   out_7903184564958925843[47] = 0;
   out_7903184564958925843[48] = 0;
   out_7903184564958925843[49] = 1;
   out_7903184564958925843[50] = 0;
   out_7903184564958925843[51] = 0;
   out_7903184564958925843[52] = 0;
   out_7903184564958925843[53] = 0;
   out_7903184564958925843[54] = 0;
   out_7903184564958925843[55] = 0;
   out_7903184564958925843[56] = 0;
   out_7903184564958925843[57] = 0;
   out_7903184564958925843[58] = 0;
   out_7903184564958925843[59] = 0;
   out_7903184564958925843[60] = 0;
   out_7903184564958925843[61] = 0;
   out_7903184564958925843[62] = 0;
   out_7903184564958925843[63] = 0;
   out_7903184564958925843[64] = 0;
   out_7903184564958925843[65] = 0;
   out_7903184564958925843[66] = 0;
   out_7903184564958925843[67] = 0;
   out_7903184564958925843[68] = 0;
   out_7903184564958925843[69] = 0;
   out_7903184564958925843[70] = 0;
   out_7903184564958925843[71] = 0;
   out_7903184564958925843[72] = 1;
   out_7903184564958925843[73] = 0;
   out_7903184564958925843[74] = 0;
   out_7903184564958925843[75] = 0;
   out_7903184564958925843[76] = 0;
   out_7903184564958925843[77] = 0;
   out_7903184564958925843[78] = 0;
   out_7903184564958925843[79] = 0;
   out_7903184564958925843[80] = 0;
   out_7903184564958925843[81] = 0;
   out_7903184564958925843[82] = 0;
   out_7903184564958925843[83] = 0;
   out_7903184564958925843[84] = 0;
   out_7903184564958925843[85] = 0;
   out_7903184564958925843[86] = 0;
   out_7903184564958925843[87] = 0;
}
void h_13(double *state, double *unused, double *out_323612180662106075) {
   out_323612180662106075[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_323612180662106075[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_323612180662106075[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2926532109473779390) {
   out_2926532109473779390[0] = 0;
   out_2926532109473779390[1] = 0;
   out_2926532109473779390[2] = 0;
   out_2926532109473779390[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2926532109473779390[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2926532109473779390[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2926532109473779390[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2926532109473779390[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2926532109473779390[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2926532109473779390[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2926532109473779390[10] = 0;
   out_2926532109473779390[11] = 0;
   out_2926532109473779390[12] = 0;
   out_2926532109473779390[13] = 0;
   out_2926532109473779390[14] = 0;
   out_2926532109473779390[15] = 0;
   out_2926532109473779390[16] = 0;
   out_2926532109473779390[17] = 0;
   out_2926532109473779390[18] = 0;
   out_2926532109473779390[19] = 0;
   out_2926532109473779390[20] = 0;
   out_2926532109473779390[21] = 0;
   out_2926532109473779390[22] = 0;
   out_2926532109473779390[23] = 0;
   out_2926532109473779390[24] = 0;
   out_2926532109473779390[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2926532109473779390[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2926532109473779390[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2926532109473779390[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2926532109473779390[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2926532109473779390[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2926532109473779390[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2926532109473779390[32] = 0;
   out_2926532109473779390[33] = 0;
   out_2926532109473779390[34] = 0;
   out_2926532109473779390[35] = 0;
   out_2926532109473779390[36] = 0;
   out_2926532109473779390[37] = 0;
   out_2926532109473779390[38] = 0;
   out_2926532109473779390[39] = 0;
   out_2926532109473779390[40] = 0;
   out_2926532109473779390[41] = 0;
   out_2926532109473779390[42] = 0;
   out_2926532109473779390[43] = 0;
   out_2926532109473779390[44] = 0;
   out_2926532109473779390[45] = 0;
   out_2926532109473779390[46] = 0;
   out_2926532109473779390[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2926532109473779390[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2926532109473779390[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2926532109473779390[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2926532109473779390[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2926532109473779390[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2926532109473779390[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2926532109473779390[54] = 0;
   out_2926532109473779390[55] = 0;
   out_2926532109473779390[56] = 0;
   out_2926532109473779390[57] = 0;
   out_2926532109473779390[58] = 0;
   out_2926532109473779390[59] = 0;
   out_2926532109473779390[60] = 0;
   out_2926532109473779390[61] = 0;
   out_2926532109473779390[62] = 0;
   out_2926532109473779390[63] = 0;
   out_2926532109473779390[64] = 0;
   out_2926532109473779390[65] = 0;
}
void h_14(double *state, double *unused, double *out_8377485234475286224) {
   out_8377485234475286224[0] = state[10];
   out_8377485234475286224[1] = state[11];
   out_8377485234475286224[2] = state[12];
}
void H_14(double *state, double *unused, double *out_236071550604823321) {
   out_236071550604823321[0] = 0;
   out_236071550604823321[1] = 0;
   out_236071550604823321[2] = 0;
   out_236071550604823321[3] = 0;
   out_236071550604823321[4] = 0;
   out_236071550604823321[5] = 0;
   out_236071550604823321[6] = 0;
   out_236071550604823321[7] = 0;
   out_236071550604823321[8] = 0;
   out_236071550604823321[9] = 0;
   out_236071550604823321[10] = 1;
   out_236071550604823321[11] = 0;
   out_236071550604823321[12] = 0;
   out_236071550604823321[13] = 0;
   out_236071550604823321[14] = 0;
   out_236071550604823321[15] = 0;
   out_236071550604823321[16] = 0;
   out_236071550604823321[17] = 0;
   out_236071550604823321[18] = 0;
   out_236071550604823321[19] = 0;
   out_236071550604823321[20] = 0;
   out_236071550604823321[21] = 0;
   out_236071550604823321[22] = 0;
   out_236071550604823321[23] = 0;
   out_236071550604823321[24] = 0;
   out_236071550604823321[25] = 0;
   out_236071550604823321[26] = 0;
   out_236071550604823321[27] = 0;
   out_236071550604823321[28] = 0;
   out_236071550604823321[29] = 0;
   out_236071550604823321[30] = 0;
   out_236071550604823321[31] = 0;
   out_236071550604823321[32] = 0;
   out_236071550604823321[33] = 1;
   out_236071550604823321[34] = 0;
   out_236071550604823321[35] = 0;
   out_236071550604823321[36] = 0;
   out_236071550604823321[37] = 0;
   out_236071550604823321[38] = 0;
   out_236071550604823321[39] = 0;
   out_236071550604823321[40] = 0;
   out_236071550604823321[41] = 0;
   out_236071550604823321[42] = 0;
   out_236071550604823321[43] = 0;
   out_236071550604823321[44] = 0;
   out_236071550604823321[45] = 0;
   out_236071550604823321[46] = 0;
   out_236071550604823321[47] = 0;
   out_236071550604823321[48] = 0;
   out_236071550604823321[49] = 0;
   out_236071550604823321[50] = 0;
   out_236071550604823321[51] = 0;
   out_236071550604823321[52] = 0;
   out_236071550604823321[53] = 0;
   out_236071550604823321[54] = 0;
   out_236071550604823321[55] = 0;
   out_236071550604823321[56] = 1;
   out_236071550604823321[57] = 0;
   out_236071550604823321[58] = 0;
   out_236071550604823321[59] = 0;
   out_236071550604823321[60] = 0;
   out_236071550604823321[61] = 0;
   out_236071550604823321[62] = 0;
   out_236071550604823321[63] = 0;
   out_236071550604823321[64] = 0;
   out_236071550604823321[65] = 0;
}
void h_33(double *state, double *unused, double *out_4490303204228291593) {
   out_4490303204228291593[0] = state[16];
   out_4490303204228291593[1] = state[17];
   out_4490303204228291593[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3864429060336208959) {
   out_3864429060336208959[0] = 0;
   out_3864429060336208959[1] = 0;
   out_3864429060336208959[2] = 0;
   out_3864429060336208959[3] = 0;
   out_3864429060336208959[4] = 0;
   out_3864429060336208959[5] = 0;
   out_3864429060336208959[6] = 0;
   out_3864429060336208959[7] = 0;
   out_3864429060336208959[8] = 0;
   out_3864429060336208959[9] = 0;
   out_3864429060336208959[10] = 0;
   out_3864429060336208959[11] = 0;
   out_3864429060336208959[12] = 0;
   out_3864429060336208959[13] = 0;
   out_3864429060336208959[14] = 0;
   out_3864429060336208959[15] = 0;
   out_3864429060336208959[16] = 1;
   out_3864429060336208959[17] = 0;
   out_3864429060336208959[18] = 0;
   out_3864429060336208959[19] = 0;
   out_3864429060336208959[20] = 0;
   out_3864429060336208959[21] = 0;
   out_3864429060336208959[22] = 0;
   out_3864429060336208959[23] = 0;
   out_3864429060336208959[24] = 0;
   out_3864429060336208959[25] = 0;
   out_3864429060336208959[26] = 0;
   out_3864429060336208959[27] = 0;
   out_3864429060336208959[28] = 0;
   out_3864429060336208959[29] = 0;
   out_3864429060336208959[30] = 0;
   out_3864429060336208959[31] = 0;
   out_3864429060336208959[32] = 0;
   out_3864429060336208959[33] = 0;
   out_3864429060336208959[34] = 0;
   out_3864429060336208959[35] = 0;
   out_3864429060336208959[36] = 0;
   out_3864429060336208959[37] = 0;
   out_3864429060336208959[38] = 0;
   out_3864429060336208959[39] = 1;
   out_3864429060336208959[40] = 0;
   out_3864429060336208959[41] = 0;
   out_3864429060336208959[42] = 0;
   out_3864429060336208959[43] = 0;
   out_3864429060336208959[44] = 0;
   out_3864429060336208959[45] = 0;
   out_3864429060336208959[46] = 0;
   out_3864429060336208959[47] = 0;
   out_3864429060336208959[48] = 0;
   out_3864429060336208959[49] = 0;
   out_3864429060336208959[50] = 0;
   out_3864429060336208959[51] = 0;
   out_3864429060336208959[52] = 0;
   out_3864429060336208959[53] = 0;
   out_3864429060336208959[54] = 0;
   out_3864429060336208959[55] = 0;
   out_3864429060336208959[56] = 0;
   out_3864429060336208959[57] = 0;
   out_3864429060336208959[58] = 0;
   out_3864429060336208959[59] = 0;
   out_3864429060336208959[60] = 0;
   out_3864429060336208959[61] = 0;
   out_3864429060336208959[62] = 1;
   out_3864429060336208959[63] = 0;
   out_3864429060336208959[64] = 0;
   out_3864429060336208959[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_8112787183996767333) {
  H(in_vec, out_8112787183996767333);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7438452076199970549) {
  err_fun(nom_x, delta_x, out_7438452076199970549);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_9072751160980696045) {
  inv_err_fun(nom_x, true_x, out_9072751160980696045);
}
void live_H_mod_fun(double *state, double *out_3531246140483666849) {
  H_mod_fun(state, out_3531246140483666849);
}
void live_f_fun(double *state, double dt, double *out_5640748228499018316) {
  f_fun(state,  dt, out_5640748228499018316);
}
void live_F_fun(double *state, double dt, double *out_40891815030632395) {
  F_fun(state,  dt, out_40891815030632395);
}
void live_h_4(double *state, double *unused, double *out_5552634738632533904) {
  h_4(state, unused, out_5552634738632533904);
}
void live_H_4(double *state, double *unused, double *out_7051147384659624149) {
  H_4(state, unused, out_7051147384659624149);
}
void live_h_9(double *state, double *unused, double *out_8377485234475286224) {
  h_9(state, unused, out_8377485234475286224);
}
void live_H_9(double *state, double *unused, double *out_236071550604823321) {
  H_9(state, unused, out_236071550604823321);
}
void live_h_10(double *state, double *unused, double *out_743876404820101682) {
  h_10(state, unused, out_743876404820101682);
}
void live_H_10(double *state, double *unused, double *out_3520204588481565727) {
  H_10(state, unused, out_3520204588481565727);
}
void live_h_12(double *state, double *unused, double *out_3690241237526513347) {
  h_12(state, unused, out_3690241237526513347);
}
void live_H_12(double *state, double *unused, double *out_2031690976627662354) {
  H_12(state, unused, out_2031690976627662354);
}
void live_h_31(double *state, double *unused, double *out_453781667833494065) {
  h_31(state, unused, out_453781667833494065);
}
void live_H_31(double *state, double *unused, double *out_713872055697351355) {
  H_31(state, unused, out_713872055697351355);
}
void live_h_32(double *state, double *unused, double *out_6886599282477753184) {
  h_32(state, unused, out_6886599282477753184);
}
void live_H_32(double *state, double *unused, double *out_7903184564958925843) {
  H_32(state, unused, out_7903184564958925843);
}
void live_h_13(double *state, double *unused, double *out_323612180662106075) {
  h_13(state, unused, out_323612180662106075);
}
void live_H_13(double *state, double *unused, double *out_2926532109473779390) {
  H_13(state, unused, out_2926532109473779390);
}
void live_h_14(double *state, double *unused, double *out_8377485234475286224) {
  h_14(state, unused, out_8377485234475286224);
}
void live_H_14(double *state, double *unused, double *out_236071550604823321) {
  H_14(state, unused, out_236071550604823321);
}
void live_h_33(double *state, double *unused, double *out_4490303204228291593) {
  h_33(state, unused, out_4490303204228291593);
}
void live_H_33(double *state, double *unused, double *out_3864429060336208959) {
  H_33(state, unused, out_3864429060336208959);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
