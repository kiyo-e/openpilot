#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_4561219149607775257) {
   out_4561219149607775257[0] = 0;
   out_4561219149607775257[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_4561219149607775257[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_4561219149607775257[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_4561219149607775257[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_4561219149607775257[5] = -sin(in_vec[1]);
   out_4561219149607775257[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4561219149607775257[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4561219149607775257[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_4561219149607775257[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_4561219149607775257[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_4561219149607775257[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_4561219149607775257[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4561219149607775257[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4561219149607775257[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_4561219149607775257[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_4561219149607775257[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_4561219149607775257[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_5714388780541513559) {
   out_5714388780541513559[0] = delta_x[0] + nom_x[0];
   out_5714388780541513559[1] = delta_x[1] + nom_x[1];
   out_5714388780541513559[2] = delta_x[2] + nom_x[2];
   out_5714388780541513559[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_5714388780541513559[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_5714388780541513559[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_5714388780541513559[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_5714388780541513559[7] = delta_x[6] + nom_x[7];
   out_5714388780541513559[8] = delta_x[7] + nom_x[8];
   out_5714388780541513559[9] = delta_x[8] + nom_x[9];
   out_5714388780541513559[10] = delta_x[9] + nom_x[10];
   out_5714388780541513559[11] = delta_x[10] + nom_x[11];
   out_5714388780541513559[12] = delta_x[11] + nom_x[12];
   out_5714388780541513559[13] = delta_x[12] + nom_x[13];
   out_5714388780541513559[14] = delta_x[13] + nom_x[14];
   out_5714388780541513559[15] = delta_x[14] + nom_x[15];
   out_5714388780541513559[16] = delta_x[15] + nom_x[16];
   out_5714388780541513559[17] = delta_x[16] + nom_x[17];
   out_5714388780541513559[18] = delta_x[17] + nom_x[18];
   out_5714388780541513559[19] = delta_x[18] + nom_x[19];
   out_5714388780541513559[20] = delta_x[19] + nom_x[20];
   out_5714388780541513559[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_2722425663997044208) {
   out_2722425663997044208[0] = -nom_x[0] + true_x[0];
   out_2722425663997044208[1] = -nom_x[1] + true_x[1];
   out_2722425663997044208[2] = -nom_x[2] + true_x[2];
   out_2722425663997044208[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_2722425663997044208[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_2722425663997044208[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_2722425663997044208[6] = -nom_x[7] + true_x[7];
   out_2722425663997044208[7] = -nom_x[8] + true_x[8];
   out_2722425663997044208[8] = -nom_x[9] + true_x[9];
   out_2722425663997044208[9] = -nom_x[10] + true_x[10];
   out_2722425663997044208[10] = -nom_x[11] + true_x[11];
   out_2722425663997044208[11] = -nom_x[12] + true_x[12];
   out_2722425663997044208[12] = -nom_x[13] + true_x[13];
   out_2722425663997044208[13] = -nom_x[14] + true_x[14];
   out_2722425663997044208[14] = -nom_x[15] + true_x[15];
   out_2722425663997044208[15] = -nom_x[16] + true_x[16];
   out_2722425663997044208[16] = -nom_x[17] + true_x[17];
   out_2722425663997044208[17] = -nom_x[18] + true_x[18];
   out_2722425663997044208[18] = -nom_x[19] + true_x[19];
   out_2722425663997044208[19] = -nom_x[20] + true_x[20];
   out_2722425663997044208[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_7048599423514714999) {
   out_7048599423514714999[0] = 1.0;
   out_7048599423514714999[1] = 0;
   out_7048599423514714999[2] = 0;
   out_7048599423514714999[3] = 0;
   out_7048599423514714999[4] = 0;
   out_7048599423514714999[5] = 0;
   out_7048599423514714999[6] = 0;
   out_7048599423514714999[7] = 0;
   out_7048599423514714999[8] = 0;
   out_7048599423514714999[9] = 0;
   out_7048599423514714999[10] = 0;
   out_7048599423514714999[11] = 0;
   out_7048599423514714999[12] = 0;
   out_7048599423514714999[13] = 0;
   out_7048599423514714999[14] = 0;
   out_7048599423514714999[15] = 0;
   out_7048599423514714999[16] = 0;
   out_7048599423514714999[17] = 0;
   out_7048599423514714999[18] = 0;
   out_7048599423514714999[19] = 0;
   out_7048599423514714999[20] = 0;
   out_7048599423514714999[21] = 0;
   out_7048599423514714999[22] = 1.0;
   out_7048599423514714999[23] = 0;
   out_7048599423514714999[24] = 0;
   out_7048599423514714999[25] = 0;
   out_7048599423514714999[26] = 0;
   out_7048599423514714999[27] = 0;
   out_7048599423514714999[28] = 0;
   out_7048599423514714999[29] = 0;
   out_7048599423514714999[30] = 0;
   out_7048599423514714999[31] = 0;
   out_7048599423514714999[32] = 0;
   out_7048599423514714999[33] = 0;
   out_7048599423514714999[34] = 0;
   out_7048599423514714999[35] = 0;
   out_7048599423514714999[36] = 0;
   out_7048599423514714999[37] = 0;
   out_7048599423514714999[38] = 0;
   out_7048599423514714999[39] = 0;
   out_7048599423514714999[40] = 0;
   out_7048599423514714999[41] = 0;
   out_7048599423514714999[42] = 0;
   out_7048599423514714999[43] = 0;
   out_7048599423514714999[44] = 1.0;
   out_7048599423514714999[45] = 0;
   out_7048599423514714999[46] = 0;
   out_7048599423514714999[47] = 0;
   out_7048599423514714999[48] = 0;
   out_7048599423514714999[49] = 0;
   out_7048599423514714999[50] = 0;
   out_7048599423514714999[51] = 0;
   out_7048599423514714999[52] = 0;
   out_7048599423514714999[53] = 0;
   out_7048599423514714999[54] = 0;
   out_7048599423514714999[55] = 0;
   out_7048599423514714999[56] = 0;
   out_7048599423514714999[57] = 0;
   out_7048599423514714999[58] = 0;
   out_7048599423514714999[59] = 0;
   out_7048599423514714999[60] = 0;
   out_7048599423514714999[61] = 0;
   out_7048599423514714999[62] = 0;
   out_7048599423514714999[63] = 0;
   out_7048599423514714999[64] = 0;
   out_7048599423514714999[65] = 0;
   out_7048599423514714999[66] = -0.5*state[4];
   out_7048599423514714999[67] = -0.5*state[5];
   out_7048599423514714999[68] = -0.5*state[6];
   out_7048599423514714999[69] = 0;
   out_7048599423514714999[70] = 0;
   out_7048599423514714999[71] = 0;
   out_7048599423514714999[72] = 0;
   out_7048599423514714999[73] = 0;
   out_7048599423514714999[74] = 0;
   out_7048599423514714999[75] = 0;
   out_7048599423514714999[76] = 0;
   out_7048599423514714999[77] = 0;
   out_7048599423514714999[78] = 0;
   out_7048599423514714999[79] = 0;
   out_7048599423514714999[80] = 0;
   out_7048599423514714999[81] = 0;
   out_7048599423514714999[82] = 0;
   out_7048599423514714999[83] = 0;
   out_7048599423514714999[84] = 0;
   out_7048599423514714999[85] = 0;
   out_7048599423514714999[86] = 0;
   out_7048599423514714999[87] = 0.5*state[3];
   out_7048599423514714999[88] = 0.5*state[6];
   out_7048599423514714999[89] = -0.5*state[5];
   out_7048599423514714999[90] = 0;
   out_7048599423514714999[91] = 0;
   out_7048599423514714999[92] = 0;
   out_7048599423514714999[93] = 0;
   out_7048599423514714999[94] = 0;
   out_7048599423514714999[95] = 0;
   out_7048599423514714999[96] = 0;
   out_7048599423514714999[97] = 0;
   out_7048599423514714999[98] = 0;
   out_7048599423514714999[99] = 0;
   out_7048599423514714999[100] = 0;
   out_7048599423514714999[101] = 0;
   out_7048599423514714999[102] = 0;
   out_7048599423514714999[103] = 0;
   out_7048599423514714999[104] = 0;
   out_7048599423514714999[105] = 0;
   out_7048599423514714999[106] = 0;
   out_7048599423514714999[107] = 0;
   out_7048599423514714999[108] = -0.5*state[6];
   out_7048599423514714999[109] = 0.5*state[3];
   out_7048599423514714999[110] = 0.5*state[4];
   out_7048599423514714999[111] = 0;
   out_7048599423514714999[112] = 0;
   out_7048599423514714999[113] = 0;
   out_7048599423514714999[114] = 0;
   out_7048599423514714999[115] = 0;
   out_7048599423514714999[116] = 0;
   out_7048599423514714999[117] = 0;
   out_7048599423514714999[118] = 0;
   out_7048599423514714999[119] = 0;
   out_7048599423514714999[120] = 0;
   out_7048599423514714999[121] = 0;
   out_7048599423514714999[122] = 0;
   out_7048599423514714999[123] = 0;
   out_7048599423514714999[124] = 0;
   out_7048599423514714999[125] = 0;
   out_7048599423514714999[126] = 0;
   out_7048599423514714999[127] = 0;
   out_7048599423514714999[128] = 0;
   out_7048599423514714999[129] = 0.5*state[5];
   out_7048599423514714999[130] = -0.5*state[4];
   out_7048599423514714999[131] = 0.5*state[3];
   out_7048599423514714999[132] = 0;
   out_7048599423514714999[133] = 0;
   out_7048599423514714999[134] = 0;
   out_7048599423514714999[135] = 0;
   out_7048599423514714999[136] = 0;
   out_7048599423514714999[137] = 0;
   out_7048599423514714999[138] = 0;
   out_7048599423514714999[139] = 0;
   out_7048599423514714999[140] = 0;
   out_7048599423514714999[141] = 0;
   out_7048599423514714999[142] = 0;
   out_7048599423514714999[143] = 0;
   out_7048599423514714999[144] = 0;
   out_7048599423514714999[145] = 0;
   out_7048599423514714999[146] = 0;
   out_7048599423514714999[147] = 0;
   out_7048599423514714999[148] = 0;
   out_7048599423514714999[149] = 0;
   out_7048599423514714999[150] = 0;
   out_7048599423514714999[151] = 0;
   out_7048599423514714999[152] = 0;
   out_7048599423514714999[153] = 1.0;
   out_7048599423514714999[154] = 0;
   out_7048599423514714999[155] = 0;
   out_7048599423514714999[156] = 0;
   out_7048599423514714999[157] = 0;
   out_7048599423514714999[158] = 0;
   out_7048599423514714999[159] = 0;
   out_7048599423514714999[160] = 0;
   out_7048599423514714999[161] = 0;
   out_7048599423514714999[162] = 0;
   out_7048599423514714999[163] = 0;
   out_7048599423514714999[164] = 0;
   out_7048599423514714999[165] = 0;
   out_7048599423514714999[166] = 0;
   out_7048599423514714999[167] = 0;
   out_7048599423514714999[168] = 0;
   out_7048599423514714999[169] = 0;
   out_7048599423514714999[170] = 0;
   out_7048599423514714999[171] = 0;
   out_7048599423514714999[172] = 0;
   out_7048599423514714999[173] = 0;
   out_7048599423514714999[174] = 0;
   out_7048599423514714999[175] = 1.0;
   out_7048599423514714999[176] = 0;
   out_7048599423514714999[177] = 0;
   out_7048599423514714999[178] = 0;
   out_7048599423514714999[179] = 0;
   out_7048599423514714999[180] = 0;
   out_7048599423514714999[181] = 0;
   out_7048599423514714999[182] = 0;
   out_7048599423514714999[183] = 0;
   out_7048599423514714999[184] = 0;
   out_7048599423514714999[185] = 0;
   out_7048599423514714999[186] = 0;
   out_7048599423514714999[187] = 0;
   out_7048599423514714999[188] = 0;
   out_7048599423514714999[189] = 0;
   out_7048599423514714999[190] = 0;
   out_7048599423514714999[191] = 0;
   out_7048599423514714999[192] = 0;
   out_7048599423514714999[193] = 0;
   out_7048599423514714999[194] = 0;
   out_7048599423514714999[195] = 0;
   out_7048599423514714999[196] = 0;
   out_7048599423514714999[197] = 1.0;
   out_7048599423514714999[198] = 0;
   out_7048599423514714999[199] = 0;
   out_7048599423514714999[200] = 0;
   out_7048599423514714999[201] = 0;
   out_7048599423514714999[202] = 0;
   out_7048599423514714999[203] = 0;
   out_7048599423514714999[204] = 0;
   out_7048599423514714999[205] = 0;
   out_7048599423514714999[206] = 0;
   out_7048599423514714999[207] = 0;
   out_7048599423514714999[208] = 0;
   out_7048599423514714999[209] = 0;
   out_7048599423514714999[210] = 0;
   out_7048599423514714999[211] = 0;
   out_7048599423514714999[212] = 0;
   out_7048599423514714999[213] = 0;
   out_7048599423514714999[214] = 0;
   out_7048599423514714999[215] = 0;
   out_7048599423514714999[216] = 0;
   out_7048599423514714999[217] = 0;
   out_7048599423514714999[218] = 0;
   out_7048599423514714999[219] = 1.0;
   out_7048599423514714999[220] = 0;
   out_7048599423514714999[221] = 0;
   out_7048599423514714999[222] = 0;
   out_7048599423514714999[223] = 0;
   out_7048599423514714999[224] = 0;
   out_7048599423514714999[225] = 0;
   out_7048599423514714999[226] = 0;
   out_7048599423514714999[227] = 0;
   out_7048599423514714999[228] = 0;
   out_7048599423514714999[229] = 0;
   out_7048599423514714999[230] = 0;
   out_7048599423514714999[231] = 0;
   out_7048599423514714999[232] = 0;
   out_7048599423514714999[233] = 0;
   out_7048599423514714999[234] = 0;
   out_7048599423514714999[235] = 0;
   out_7048599423514714999[236] = 0;
   out_7048599423514714999[237] = 0;
   out_7048599423514714999[238] = 0;
   out_7048599423514714999[239] = 0;
   out_7048599423514714999[240] = 0;
   out_7048599423514714999[241] = 1.0;
   out_7048599423514714999[242] = 0;
   out_7048599423514714999[243] = 0;
   out_7048599423514714999[244] = 0;
   out_7048599423514714999[245] = 0;
   out_7048599423514714999[246] = 0;
   out_7048599423514714999[247] = 0;
   out_7048599423514714999[248] = 0;
   out_7048599423514714999[249] = 0;
   out_7048599423514714999[250] = 0;
   out_7048599423514714999[251] = 0;
   out_7048599423514714999[252] = 0;
   out_7048599423514714999[253] = 0;
   out_7048599423514714999[254] = 0;
   out_7048599423514714999[255] = 0;
   out_7048599423514714999[256] = 0;
   out_7048599423514714999[257] = 0;
   out_7048599423514714999[258] = 0;
   out_7048599423514714999[259] = 0;
   out_7048599423514714999[260] = 0;
   out_7048599423514714999[261] = 0;
   out_7048599423514714999[262] = 0;
   out_7048599423514714999[263] = 1.0;
   out_7048599423514714999[264] = 0;
   out_7048599423514714999[265] = 0;
   out_7048599423514714999[266] = 0;
   out_7048599423514714999[267] = 0;
   out_7048599423514714999[268] = 0;
   out_7048599423514714999[269] = 0;
   out_7048599423514714999[270] = 0;
   out_7048599423514714999[271] = 0;
   out_7048599423514714999[272] = 0;
   out_7048599423514714999[273] = 0;
   out_7048599423514714999[274] = 0;
   out_7048599423514714999[275] = 0;
   out_7048599423514714999[276] = 0;
   out_7048599423514714999[277] = 0;
   out_7048599423514714999[278] = 0;
   out_7048599423514714999[279] = 0;
   out_7048599423514714999[280] = 0;
   out_7048599423514714999[281] = 0;
   out_7048599423514714999[282] = 0;
   out_7048599423514714999[283] = 0;
   out_7048599423514714999[284] = 0;
   out_7048599423514714999[285] = 1.0;
   out_7048599423514714999[286] = 0;
   out_7048599423514714999[287] = 0;
   out_7048599423514714999[288] = 0;
   out_7048599423514714999[289] = 0;
   out_7048599423514714999[290] = 0;
   out_7048599423514714999[291] = 0;
   out_7048599423514714999[292] = 0;
   out_7048599423514714999[293] = 0;
   out_7048599423514714999[294] = 0;
   out_7048599423514714999[295] = 0;
   out_7048599423514714999[296] = 0;
   out_7048599423514714999[297] = 0;
   out_7048599423514714999[298] = 0;
   out_7048599423514714999[299] = 0;
   out_7048599423514714999[300] = 0;
   out_7048599423514714999[301] = 0;
   out_7048599423514714999[302] = 0;
   out_7048599423514714999[303] = 0;
   out_7048599423514714999[304] = 0;
   out_7048599423514714999[305] = 0;
   out_7048599423514714999[306] = 0;
   out_7048599423514714999[307] = 1.0;
   out_7048599423514714999[308] = 0;
   out_7048599423514714999[309] = 0;
   out_7048599423514714999[310] = 0;
   out_7048599423514714999[311] = 0;
   out_7048599423514714999[312] = 0;
   out_7048599423514714999[313] = 0;
   out_7048599423514714999[314] = 0;
   out_7048599423514714999[315] = 0;
   out_7048599423514714999[316] = 0;
   out_7048599423514714999[317] = 0;
   out_7048599423514714999[318] = 0;
   out_7048599423514714999[319] = 0;
   out_7048599423514714999[320] = 0;
   out_7048599423514714999[321] = 0;
   out_7048599423514714999[322] = 0;
   out_7048599423514714999[323] = 0;
   out_7048599423514714999[324] = 0;
   out_7048599423514714999[325] = 0;
   out_7048599423514714999[326] = 0;
   out_7048599423514714999[327] = 0;
   out_7048599423514714999[328] = 0;
   out_7048599423514714999[329] = 1.0;
   out_7048599423514714999[330] = 0;
   out_7048599423514714999[331] = 0;
   out_7048599423514714999[332] = 0;
   out_7048599423514714999[333] = 0;
   out_7048599423514714999[334] = 0;
   out_7048599423514714999[335] = 0;
   out_7048599423514714999[336] = 0;
   out_7048599423514714999[337] = 0;
   out_7048599423514714999[338] = 0;
   out_7048599423514714999[339] = 0;
   out_7048599423514714999[340] = 0;
   out_7048599423514714999[341] = 0;
   out_7048599423514714999[342] = 0;
   out_7048599423514714999[343] = 0;
   out_7048599423514714999[344] = 0;
   out_7048599423514714999[345] = 0;
   out_7048599423514714999[346] = 0;
   out_7048599423514714999[347] = 0;
   out_7048599423514714999[348] = 0;
   out_7048599423514714999[349] = 0;
   out_7048599423514714999[350] = 0;
   out_7048599423514714999[351] = 1.0;
   out_7048599423514714999[352] = 0;
   out_7048599423514714999[353] = 0;
   out_7048599423514714999[354] = 0;
   out_7048599423514714999[355] = 0;
   out_7048599423514714999[356] = 0;
   out_7048599423514714999[357] = 0;
   out_7048599423514714999[358] = 0;
   out_7048599423514714999[359] = 0;
   out_7048599423514714999[360] = 0;
   out_7048599423514714999[361] = 0;
   out_7048599423514714999[362] = 0;
   out_7048599423514714999[363] = 0;
   out_7048599423514714999[364] = 0;
   out_7048599423514714999[365] = 0;
   out_7048599423514714999[366] = 0;
   out_7048599423514714999[367] = 0;
   out_7048599423514714999[368] = 0;
   out_7048599423514714999[369] = 0;
   out_7048599423514714999[370] = 0;
   out_7048599423514714999[371] = 0;
   out_7048599423514714999[372] = 0;
   out_7048599423514714999[373] = 1.0;
   out_7048599423514714999[374] = 0;
   out_7048599423514714999[375] = 0;
   out_7048599423514714999[376] = 0;
   out_7048599423514714999[377] = 0;
   out_7048599423514714999[378] = 0;
   out_7048599423514714999[379] = 0;
   out_7048599423514714999[380] = 0;
   out_7048599423514714999[381] = 0;
   out_7048599423514714999[382] = 0;
   out_7048599423514714999[383] = 0;
   out_7048599423514714999[384] = 0;
   out_7048599423514714999[385] = 0;
   out_7048599423514714999[386] = 0;
   out_7048599423514714999[387] = 0;
   out_7048599423514714999[388] = 0;
   out_7048599423514714999[389] = 0;
   out_7048599423514714999[390] = 0;
   out_7048599423514714999[391] = 0;
   out_7048599423514714999[392] = 0;
   out_7048599423514714999[393] = 0;
   out_7048599423514714999[394] = 0;
   out_7048599423514714999[395] = 1.0;
   out_7048599423514714999[396] = 0;
   out_7048599423514714999[397] = 0;
   out_7048599423514714999[398] = 0;
   out_7048599423514714999[399] = 0;
   out_7048599423514714999[400] = 0;
   out_7048599423514714999[401] = 0;
   out_7048599423514714999[402] = 0;
   out_7048599423514714999[403] = 0;
   out_7048599423514714999[404] = 0;
   out_7048599423514714999[405] = 0;
   out_7048599423514714999[406] = 0;
   out_7048599423514714999[407] = 0;
   out_7048599423514714999[408] = 0;
   out_7048599423514714999[409] = 0;
   out_7048599423514714999[410] = 0;
   out_7048599423514714999[411] = 0;
   out_7048599423514714999[412] = 0;
   out_7048599423514714999[413] = 0;
   out_7048599423514714999[414] = 0;
   out_7048599423514714999[415] = 0;
   out_7048599423514714999[416] = 0;
   out_7048599423514714999[417] = 1.0;
   out_7048599423514714999[418] = 0;
   out_7048599423514714999[419] = 0;
   out_7048599423514714999[420] = 0;
   out_7048599423514714999[421] = 0;
   out_7048599423514714999[422] = 0;
   out_7048599423514714999[423] = 0;
   out_7048599423514714999[424] = 0;
   out_7048599423514714999[425] = 0;
   out_7048599423514714999[426] = 0;
   out_7048599423514714999[427] = 0;
   out_7048599423514714999[428] = 0;
   out_7048599423514714999[429] = 0;
   out_7048599423514714999[430] = 0;
   out_7048599423514714999[431] = 0;
   out_7048599423514714999[432] = 0;
   out_7048599423514714999[433] = 0;
   out_7048599423514714999[434] = 0;
   out_7048599423514714999[435] = 0;
   out_7048599423514714999[436] = 0;
   out_7048599423514714999[437] = 0;
   out_7048599423514714999[438] = 0;
   out_7048599423514714999[439] = 1.0;
   out_7048599423514714999[440] = 0;
   out_7048599423514714999[441] = 0;
   out_7048599423514714999[442] = 0;
   out_7048599423514714999[443] = 0;
   out_7048599423514714999[444] = 0;
   out_7048599423514714999[445] = 0;
   out_7048599423514714999[446] = 0;
   out_7048599423514714999[447] = 0;
   out_7048599423514714999[448] = 0;
   out_7048599423514714999[449] = 0;
   out_7048599423514714999[450] = 0;
   out_7048599423514714999[451] = 0;
   out_7048599423514714999[452] = 0;
   out_7048599423514714999[453] = 0;
   out_7048599423514714999[454] = 0;
   out_7048599423514714999[455] = 0;
   out_7048599423514714999[456] = 0;
   out_7048599423514714999[457] = 0;
   out_7048599423514714999[458] = 0;
   out_7048599423514714999[459] = 0;
   out_7048599423514714999[460] = 0;
   out_7048599423514714999[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_1817294066734651182) {
   out_1817294066734651182[0] = dt*state[7] + state[0];
   out_1817294066734651182[1] = dt*state[8] + state[1];
   out_1817294066734651182[2] = dt*state[9] + state[2];
   out_1817294066734651182[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_1817294066734651182[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_1817294066734651182[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_1817294066734651182[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_1817294066734651182[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_1817294066734651182[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_1817294066734651182[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_1817294066734651182[10] = state[10];
   out_1817294066734651182[11] = state[11];
   out_1817294066734651182[12] = state[12];
   out_1817294066734651182[13] = state[13];
   out_1817294066734651182[14] = state[14];
   out_1817294066734651182[15] = state[15];
   out_1817294066734651182[16] = state[16];
   out_1817294066734651182[17] = state[17];
   out_1817294066734651182[18] = state[18];
   out_1817294066734651182[19] = state[19];
   out_1817294066734651182[20] = state[20];
   out_1817294066734651182[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4034785705381798254) {
   out_4034785705381798254[0] = 1;
   out_4034785705381798254[1] = 0;
   out_4034785705381798254[2] = 0;
   out_4034785705381798254[3] = 0;
   out_4034785705381798254[4] = 0;
   out_4034785705381798254[5] = 0;
   out_4034785705381798254[6] = dt;
   out_4034785705381798254[7] = 0;
   out_4034785705381798254[8] = 0;
   out_4034785705381798254[9] = 0;
   out_4034785705381798254[10] = 0;
   out_4034785705381798254[11] = 0;
   out_4034785705381798254[12] = 0;
   out_4034785705381798254[13] = 0;
   out_4034785705381798254[14] = 0;
   out_4034785705381798254[15] = 0;
   out_4034785705381798254[16] = 0;
   out_4034785705381798254[17] = 0;
   out_4034785705381798254[18] = 0;
   out_4034785705381798254[19] = 0;
   out_4034785705381798254[20] = 0;
   out_4034785705381798254[21] = 0;
   out_4034785705381798254[22] = 1;
   out_4034785705381798254[23] = 0;
   out_4034785705381798254[24] = 0;
   out_4034785705381798254[25] = 0;
   out_4034785705381798254[26] = 0;
   out_4034785705381798254[27] = 0;
   out_4034785705381798254[28] = dt;
   out_4034785705381798254[29] = 0;
   out_4034785705381798254[30] = 0;
   out_4034785705381798254[31] = 0;
   out_4034785705381798254[32] = 0;
   out_4034785705381798254[33] = 0;
   out_4034785705381798254[34] = 0;
   out_4034785705381798254[35] = 0;
   out_4034785705381798254[36] = 0;
   out_4034785705381798254[37] = 0;
   out_4034785705381798254[38] = 0;
   out_4034785705381798254[39] = 0;
   out_4034785705381798254[40] = 0;
   out_4034785705381798254[41] = 0;
   out_4034785705381798254[42] = 0;
   out_4034785705381798254[43] = 0;
   out_4034785705381798254[44] = 1;
   out_4034785705381798254[45] = 0;
   out_4034785705381798254[46] = 0;
   out_4034785705381798254[47] = 0;
   out_4034785705381798254[48] = 0;
   out_4034785705381798254[49] = 0;
   out_4034785705381798254[50] = dt;
   out_4034785705381798254[51] = 0;
   out_4034785705381798254[52] = 0;
   out_4034785705381798254[53] = 0;
   out_4034785705381798254[54] = 0;
   out_4034785705381798254[55] = 0;
   out_4034785705381798254[56] = 0;
   out_4034785705381798254[57] = 0;
   out_4034785705381798254[58] = 0;
   out_4034785705381798254[59] = 0;
   out_4034785705381798254[60] = 0;
   out_4034785705381798254[61] = 0;
   out_4034785705381798254[62] = 0;
   out_4034785705381798254[63] = 0;
   out_4034785705381798254[64] = 0;
   out_4034785705381798254[65] = 0;
   out_4034785705381798254[66] = 1;
   out_4034785705381798254[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4034785705381798254[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4034785705381798254[69] = 0;
   out_4034785705381798254[70] = 0;
   out_4034785705381798254[71] = 0;
   out_4034785705381798254[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4034785705381798254[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4034785705381798254[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4034785705381798254[75] = 0;
   out_4034785705381798254[76] = 0;
   out_4034785705381798254[77] = 0;
   out_4034785705381798254[78] = 0;
   out_4034785705381798254[79] = 0;
   out_4034785705381798254[80] = 0;
   out_4034785705381798254[81] = 0;
   out_4034785705381798254[82] = 0;
   out_4034785705381798254[83] = 0;
   out_4034785705381798254[84] = 0;
   out_4034785705381798254[85] = 0;
   out_4034785705381798254[86] = 0;
   out_4034785705381798254[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4034785705381798254[88] = 1;
   out_4034785705381798254[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4034785705381798254[90] = 0;
   out_4034785705381798254[91] = 0;
   out_4034785705381798254[92] = 0;
   out_4034785705381798254[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4034785705381798254[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4034785705381798254[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4034785705381798254[96] = 0;
   out_4034785705381798254[97] = 0;
   out_4034785705381798254[98] = 0;
   out_4034785705381798254[99] = 0;
   out_4034785705381798254[100] = 0;
   out_4034785705381798254[101] = 0;
   out_4034785705381798254[102] = 0;
   out_4034785705381798254[103] = 0;
   out_4034785705381798254[104] = 0;
   out_4034785705381798254[105] = 0;
   out_4034785705381798254[106] = 0;
   out_4034785705381798254[107] = 0;
   out_4034785705381798254[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4034785705381798254[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4034785705381798254[110] = 1;
   out_4034785705381798254[111] = 0;
   out_4034785705381798254[112] = 0;
   out_4034785705381798254[113] = 0;
   out_4034785705381798254[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4034785705381798254[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4034785705381798254[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4034785705381798254[117] = 0;
   out_4034785705381798254[118] = 0;
   out_4034785705381798254[119] = 0;
   out_4034785705381798254[120] = 0;
   out_4034785705381798254[121] = 0;
   out_4034785705381798254[122] = 0;
   out_4034785705381798254[123] = 0;
   out_4034785705381798254[124] = 0;
   out_4034785705381798254[125] = 0;
   out_4034785705381798254[126] = 0;
   out_4034785705381798254[127] = 0;
   out_4034785705381798254[128] = 0;
   out_4034785705381798254[129] = 0;
   out_4034785705381798254[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4034785705381798254[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4034785705381798254[132] = 1;
   out_4034785705381798254[133] = 0;
   out_4034785705381798254[134] = 0;
   out_4034785705381798254[135] = 0;
   out_4034785705381798254[136] = 0;
   out_4034785705381798254[137] = 0;
   out_4034785705381798254[138] = 0;
   out_4034785705381798254[139] = 0;
   out_4034785705381798254[140] = 0;
   out_4034785705381798254[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4034785705381798254[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4034785705381798254[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4034785705381798254[144] = 0;
   out_4034785705381798254[145] = 0;
   out_4034785705381798254[146] = 0;
   out_4034785705381798254[147] = 0;
   out_4034785705381798254[148] = 0;
   out_4034785705381798254[149] = 0;
   out_4034785705381798254[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4034785705381798254[151] = 0;
   out_4034785705381798254[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4034785705381798254[153] = 0;
   out_4034785705381798254[154] = 1;
   out_4034785705381798254[155] = 0;
   out_4034785705381798254[156] = 0;
   out_4034785705381798254[157] = 0;
   out_4034785705381798254[158] = 0;
   out_4034785705381798254[159] = 0;
   out_4034785705381798254[160] = 0;
   out_4034785705381798254[161] = 0;
   out_4034785705381798254[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4034785705381798254[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4034785705381798254[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4034785705381798254[165] = 0;
   out_4034785705381798254[166] = 0;
   out_4034785705381798254[167] = 0;
   out_4034785705381798254[168] = 0;
   out_4034785705381798254[169] = 0;
   out_4034785705381798254[170] = 0;
   out_4034785705381798254[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4034785705381798254[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4034785705381798254[173] = 0;
   out_4034785705381798254[174] = 0;
   out_4034785705381798254[175] = 0;
   out_4034785705381798254[176] = 1;
   out_4034785705381798254[177] = 0;
   out_4034785705381798254[178] = 0;
   out_4034785705381798254[179] = 0;
   out_4034785705381798254[180] = 0;
   out_4034785705381798254[181] = 0;
   out_4034785705381798254[182] = 0;
   out_4034785705381798254[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4034785705381798254[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4034785705381798254[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4034785705381798254[186] = 0;
   out_4034785705381798254[187] = 0;
   out_4034785705381798254[188] = 0;
   out_4034785705381798254[189] = 0;
   out_4034785705381798254[190] = 0;
   out_4034785705381798254[191] = 0;
   out_4034785705381798254[192] = 0;
   out_4034785705381798254[193] = 0;
   out_4034785705381798254[194] = 0;
   out_4034785705381798254[195] = 0;
   out_4034785705381798254[196] = 0;
   out_4034785705381798254[197] = 0;
   out_4034785705381798254[198] = 1;
   out_4034785705381798254[199] = 0;
   out_4034785705381798254[200] = 0;
   out_4034785705381798254[201] = 0;
   out_4034785705381798254[202] = 0;
   out_4034785705381798254[203] = 0;
   out_4034785705381798254[204] = 0;
   out_4034785705381798254[205] = 0;
   out_4034785705381798254[206] = 0;
   out_4034785705381798254[207] = 0;
   out_4034785705381798254[208] = 0;
   out_4034785705381798254[209] = 0;
   out_4034785705381798254[210] = 0;
   out_4034785705381798254[211] = 0;
   out_4034785705381798254[212] = 0;
   out_4034785705381798254[213] = 0;
   out_4034785705381798254[214] = 0;
   out_4034785705381798254[215] = 0;
   out_4034785705381798254[216] = 0;
   out_4034785705381798254[217] = 0;
   out_4034785705381798254[218] = 0;
   out_4034785705381798254[219] = 0;
   out_4034785705381798254[220] = 1;
   out_4034785705381798254[221] = 0;
   out_4034785705381798254[222] = 0;
   out_4034785705381798254[223] = 0;
   out_4034785705381798254[224] = 0;
   out_4034785705381798254[225] = 0;
   out_4034785705381798254[226] = 0;
   out_4034785705381798254[227] = 0;
   out_4034785705381798254[228] = 0;
   out_4034785705381798254[229] = 0;
   out_4034785705381798254[230] = 0;
   out_4034785705381798254[231] = 0;
   out_4034785705381798254[232] = 0;
   out_4034785705381798254[233] = 0;
   out_4034785705381798254[234] = 0;
   out_4034785705381798254[235] = 0;
   out_4034785705381798254[236] = 0;
   out_4034785705381798254[237] = 0;
   out_4034785705381798254[238] = 0;
   out_4034785705381798254[239] = 0;
   out_4034785705381798254[240] = 0;
   out_4034785705381798254[241] = 0;
   out_4034785705381798254[242] = 1;
   out_4034785705381798254[243] = 0;
   out_4034785705381798254[244] = 0;
   out_4034785705381798254[245] = 0;
   out_4034785705381798254[246] = 0;
   out_4034785705381798254[247] = 0;
   out_4034785705381798254[248] = 0;
   out_4034785705381798254[249] = 0;
   out_4034785705381798254[250] = 0;
   out_4034785705381798254[251] = 0;
   out_4034785705381798254[252] = 0;
   out_4034785705381798254[253] = 0;
   out_4034785705381798254[254] = 0;
   out_4034785705381798254[255] = 0;
   out_4034785705381798254[256] = 0;
   out_4034785705381798254[257] = 0;
   out_4034785705381798254[258] = 0;
   out_4034785705381798254[259] = 0;
   out_4034785705381798254[260] = 0;
   out_4034785705381798254[261] = 0;
   out_4034785705381798254[262] = 0;
   out_4034785705381798254[263] = 0;
   out_4034785705381798254[264] = 1;
   out_4034785705381798254[265] = 0;
   out_4034785705381798254[266] = 0;
   out_4034785705381798254[267] = 0;
   out_4034785705381798254[268] = 0;
   out_4034785705381798254[269] = 0;
   out_4034785705381798254[270] = 0;
   out_4034785705381798254[271] = 0;
   out_4034785705381798254[272] = 0;
   out_4034785705381798254[273] = 0;
   out_4034785705381798254[274] = 0;
   out_4034785705381798254[275] = 0;
   out_4034785705381798254[276] = 0;
   out_4034785705381798254[277] = 0;
   out_4034785705381798254[278] = 0;
   out_4034785705381798254[279] = 0;
   out_4034785705381798254[280] = 0;
   out_4034785705381798254[281] = 0;
   out_4034785705381798254[282] = 0;
   out_4034785705381798254[283] = 0;
   out_4034785705381798254[284] = 0;
   out_4034785705381798254[285] = 0;
   out_4034785705381798254[286] = 1;
   out_4034785705381798254[287] = 0;
   out_4034785705381798254[288] = 0;
   out_4034785705381798254[289] = 0;
   out_4034785705381798254[290] = 0;
   out_4034785705381798254[291] = 0;
   out_4034785705381798254[292] = 0;
   out_4034785705381798254[293] = 0;
   out_4034785705381798254[294] = 0;
   out_4034785705381798254[295] = 0;
   out_4034785705381798254[296] = 0;
   out_4034785705381798254[297] = 0;
   out_4034785705381798254[298] = 0;
   out_4034785705381798254[299] = 0;
   out_4034785705381798254[300] = 0;
   out_4034785705381798254[301] = 0;
   out_4034785705381798254[302] = 0;
   out_4034785705381798254[303] = 0;
   out_4034785705381798254[304] = 0;
   out_4034785705381798254[305] = 0;
   out_4034785705381798254[306] = 0;
   out_4034785705381798254[307] = 0;
   out_4034785705381798254[308] = 1;
   out_4034785705381798254[309] = 0;
   out_4034785705381798254[310] = 0;
   out_4034785705381798254[311] = 0;
   out_4034785705381798254[312] = 0;
   out_4034785705381798254[313] = 0;
   out_4034785705381798254[314] = 0;
   out_4034785705381798254[315] = 0;
   out_4034785705381798254[316] = 0;
   out_4034785705381798254[317] = 0;
   out_4034785705381798254[318] = 0;
   out_4034785705381798254[319] = 0;
   out_4034785705381798254[320] = 0;
   out_4034785705381798254[321] = 0;
   out_4034785705381798254[322] = 0;
   out_4034785705381798254[323] = 0;
   out_4034785705381798254[324] = 0;
   out_4034785705381798254[325] = 0;
   out_4034785705381798254[326] = 0;
   out_4034785705381798254[327] = 0;
   out_4034785705381798254[328] = 0;
   out_4034785705381798254[329] = 0;
   out_4034785705381798254[330] = 1;
   out_4034785705381798254[331] = 0;
   out_4034785705381798254[332] = 0;
   out_4034785705381798254[333] = 0;
   out_4034785705381798254[334] = 0;
   out_4034785705381798254[335] = 0;
   out_4034785705381798254[336] = 0;
   out_4034785705381798254[337] = 0;
   out_4034785705381798254[338] = 0;
   out_4034785705381798254[339] = 0;
   out_4034785705381798254[340] = 0;
   out_4034785705381798254[341] = 0;
   out_4034785705381798254[342] = 0;
   out_4034785705381798254[343] = 0;
   out_4034785705381798254[344] = 0;
   out_4034785705381798254[345] = 0;
   out_4034785705381798254[346] = 0;
   out_4034785705381798254[347] = 0;
   out_4034785705381798254[348] = 0;
   out_4034785705381798254[349] = 0;
   out_4034785705381798254[350] = 0;
   out_4034785705381798254[351] = 0;
   out_4034785705381798254[352] = 1;
   out_4034785705381798254[353] = 0;
   out_4034785705381798254[354] = 0;
   out_4034785705381798254[355] = 0;
   out_4034785705381798254[356] = 0;
   out_4034785705381798254[357] = 0;
   out_4034785705381798254[358] = 0;
   out_4034785705381798254[359] = 0;
   out_4034785705381798254[360] = 0;
   out_4034785705381798254[361] = 0;
   out_4034785705381798254[362] = 0;
   out_4034785705381798254[363] = 0;
   out_4034785705381798254[364] = 0;
   out_4034785705381798254[365] = 0;
   out_4034785705381798254[366] = 0;
   out_4034785705381798254[367] = 0;
   out_4034785705381798254[368] = 0;
   out_4034785705381798254[369] = 0;
   out_4034785705381798254[370] = 0;
   out_4034785705381798254[371] = 0;
   out_4034785705381798254[372] = 0;
   out_4034785705381798254[373] = 0;
   out_4034785705381798254[374] = 1;
   out_4034785705381798254[375] = 0;
   out_4034785705381798254[376] = 0;
   out_4034785705381798254[377] = 0;
   out_4034785705381798254[378] = 0;
   out_4034785705381798254[379] = 0;
   out_4034785705381798254[380] = 0;
   out_4034785705381798254[381] = 0;
   out_4034785705381798254[382] = 0;
   out_4034785705381798254[383] = 0;
   out_4034785705381798254[384] = 0;
   out_4034785705381798254[385] = 0;
   out_4034785705381798254[386] = 0;
   out_4034785705381798254[387] = 0;
   out_4034785705381798254[388] = 0;
   out_4034785705381798254[389] = 0;
   out_4034785705381798254[390] = 0;
   out_4034785705381798254[391] = 0;
   out_4034785705381798254[392] = 0;
   out_4034785705381798254[393] = 0;
   out_4034785705381798254[394] = 0;
   out_4034785705381798254[395] = 0;
   out_4034785705381798254[396] = 1;
   out_4034785705381798254[397] = 0;
   out_4034785705381798254[398] = 0;
   out_4034785705381798254[399] = 0;
   out_4034785705381798254[400] = 0;
   out_4034785705381798254[401] = 0;
   out_4034785705381798254[402] = 0;
   out_4034785705381798254[403] = 0;
   out_4034785705381798254[404] = 0;
   out_4034785705381798254[405] = 0;
   out_4034785705381798254[406] = 0;
   out_4034785705381798254[407] = 0;
   out_4034785705381798254[408] = 0;
   out_4034785705381798254[409] = 0;
   out_4034785705381798254[410] = 0;
   out_4034785705381798254[411] = 0;
   out_4034785705381798254[412] = 0;
   out_4034785705381798254[413] = 0;
   out_4034785705381798254[414] = 0;
   out_4034785705381798254[415] = 0;
   out_4034785705381798254[416] = 0;
   out_4034785705381798254[417] = 0;
   out_4034785705381798254[418] = 1;
   out_4034785705381798254[419] = 0;
   out_4034785705381798254[420] = 0;
   out_4034785705381798254[421] = 0;
   out_4034785705381798254[422] = 0;
   out_4034785705381798254[423] = 0;
   out_4034785705381798254[424] = 0;
   out_4034785705381798254[425] = 0;
   out_4034785705381798254[426] = 0;
   out_4034785705381798254[427] = 0;
   out_4034785705381798254[428] = 0;
   out_4034785705381798254[429] = 0;
   out_4034785705381798254[430] = 0;
   out_4034785705381798254[431] = 0;
   out_4034785705381798254[432] = 0;
   out_4034785705381798254[433] = 0;
   out_4034785705381798254[434] = 0;
   out_4034785705381798254[435] = 0;
   out_4034785705381798254[436] = 0;
   out_4034785705381798254[437] = 0;
   out_4034785705381798254[438] = 0;
   out_4034785705381798254[439] = 0;
   out_4034785705381798254[440] = 1;
}
void h_4(double *state, double *unused, double *out_6581286902000104292) {
   out_6581286902000104292[0] = state[10] + state[13];
   out_6581286902000104292[1] = state[11] + state[14];
   out_6581286902000104292[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_8537832987797683486) {
   out_8537832987797683486[0] = 0;
   out_8537832987797683486[1] = 0;
   out_8537832987797683486[2] = 0;
   out_8537832987797683486[3] = 0;
   out_8537832987797683486[4] = 0;
   out_8537832987797683486[5] = 0;
   out_8537832987797683486[6] = 0;
   out_8537832987797683486[7] = 0;
   out_8537832987797683486[8] = 0;
   out_8537832987797683486[9] = 0;
   out_8537832987797683486[10] = 1;
   out_8537832987797683486[11] = 0;
   out_8537832987797683486[12] = 0;
   out_8537832987797683486[13] = 1;
   out_8537832987797683486[14] = 0;
   out_8537832987797683486[15] = 0;
   out_8537832987797683486[16] = 0;
   out_8537832987797683486[17] = 0;
   out_8537832987797683486[18] = 0;
   out_8537832987797683486[19] = 0;
   out_8537832987797683486[20] = 0;
   out_8537832987797683486[21] = 0;
   out_8537832987797683486[22] = 0;
   out_8537832987797683486[23] = 0;
   out_8537832987797683486[24] = 0;
   out_8537832987797683486[25] = 0;
   out_8537832987797683486[26] = 0;
   out_8537832987797683486[27] = 0;
   out_8537832987797683486[28] = 0;
   out_8537832987797683486[29] = 0;
   out_8537832987797683486[30] = 0;
   out_8537832987797683486[31] = 0;
   out_8537832987797683486[32] = 0;
   out_8537832987797683486[33] = 1;
   out_8537832987797683486[34] = 0;
   out_8537832987797683486[35] = 0;
   out_8537832987797683486[36] = 1;
   out_8537832987797683486[37] = 0;
   out_8537832987797683486[38] = 0;
   out_8537832987797683486[39] = 0;
   out_8537832987797683486[40] = 0;
   out_8537832987797683486[41] = 0;
   out_8537832987797683486[42] = 0;
   out_8537832987797683486[43] = 0;
   out_8537832987797683486[44] = 0;
   out_8537832987797683486[45] = 0;
   out_8537832987797683486[46] = 0;
   out_8537832987797683486[47] = 0;
   out_8537832987797683486[48] = 0;
   out_8537832987797683486[49] = 0;
   out_8537832987797683486[50] = 0;
   out_8537832987797683486[51] = 0;
   out_8537832987797683486[52] = 0;
   out_8537832987797683486[53] = 0;
   out_8537832987797683486[54] = 0;
   out_8537832987797683486[55] = 0;
   out_8537832987797683486[56] = 1;
   out_8537832987797683486[57] = 0;
   out_8537832987797683486[58] = 0;
   out_8537832987797683486[59] = 1;
   out_8537832987797683486[60] = 0;
   out_8537832987797683486[61] = 0;
   out_8537832987797683486[62] = 0;
   out_8537832987797683486[63] = 0;
   out_8537832987797683486[64] = 0;
   out_8537832987797683486[65] = 0;
}
void h_9(double *state, double *unused, double *out_1016674407698141864) {
   out_1016674407698141864[0] = state[10];
   out_1016674407698141864[1] = state[11];
   out_1016674407698141864[2] = state[12];
}
void H_9(double *state, double *unused, double *out_8296643341168092841) {
   out_8296643341168092841[0] = 0;
   out_8296643341168092841[1] = 0;
   out_8296643341168092841[2] = 0;
   out_8296643341168092841[3] = 0;
   out_8296643341168092841[4] = 0;
   out_8296643341168092841[5] = 0;
   out_8296643341168092841[6] = 0;
   out_8296643341168092841[7] = 0;
   out_8296643341168092841[8] = 0;
   out_8296643341168092841[9] = 0;
   out_8296643341168092841[10] = 1;
   out_8296643341168092841[11] = 0;
   out_8296643341168092841[12] = 0;
   out_8296643341168092841[13] = 0;
   out_8296643341168092841[14] = 0;
   out_8296643341168092841[15] = 0;
   out_8296643341168092841[16] = 0;
   out_8296643341168092841[17] = 0;
   out_8296643341168092841[18] = 0;
   out_8296643341168092841[19] = 0;
   out_8296643341168092841[20] = 0;
   out_8296643341168092841[21] = 0;
   out_8296643341168092841[22] = 0;
   out_8296643341168092841[23] = 0;
   out_8296643341168092841[24] = 0;
   out_8296643341168092841[25] = 0;
   out_8296643341168092841[26] = 0;
   out_8296643341168092841[27] = 0;
   out_8296643341168092841[28] = 0;
   out_8296643341168092841[29] = 0;
   out_8296643341168092841[30] = 0;
   out_8296643341168092841[31] = 0;
   out_8296643341168092841[32] = 0;
   out_8296643341168092841[33] = 1;
   out_8296643341168092841[34] = 0;
   out_8296643341168092841[35] = 0;
   out_8296643341168092841[36] = 0;
   out_8296643341168092841[37] = 0;
   out_8296643341168092841[38] = 0;
   out_8296643341168092841[39] = 0;
   out_8296643341168092841[40] = 0;
   out_8296643341168092841[41] = 0;
   out_8296643341168092841[42] = 0;
   out_8296643341168092841[43] = 0;
   out_8296643341168092841[44] = 0;
   out_8296643341168092841[45] = 0;
   out_8296643341168092841[46] = 0;
   out_8296643341168092841[47] = 0;
   out_8296643341168092841[48] = 0;
   out_8296643341168092841[49] = 0;
   out_8296643341168092841[50] = 0;
   out_8296643341168092841[51] = 0;
   out_8296643341168092841[52] = 0;
   out_8296643341168092841[53] = 0;
   out_8296643341168092841[54] = 0;
   out_8296643341168092841[55] = 0;
   out_8296643341168092841[56] = 1;
   out_8296643341168092841[57] = 0;
   out_8296643341168092841[58] = 0;
   out_8296643341168092841[59] = 0;
   out_8296643341168092841[60] = 0;
   out_8296643341168092841[61] = 0;
   out_8296643341168092841[62] = 0;
   out_8296643341168092841[63] = 0;
   out_8296643341168092841[64] = 0;
   out_8296643341168092841[65] = 0;
}
void h_10(double *state, double *unused, double *out_4115902024506385539) {
   out_4115902024506385539[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_4115902024506385539[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_4115902024506385539[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6970232624066594959) {
   out_6970232624066594959[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6970232624066594959[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6970232624066594959[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6970232624066594959[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6970232624066594959[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6970232624066594959[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6970232624066594959[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6970232624066594959[7] = 0;
   out_6970232624066594959[8] = 0;
   out_6970232624066594959[9] = 0;
   out_6970232624066594959[10] = 0;
   out_6970232624066594959[11] = 0;
   out_6970232624066594959[12] = 0;
   out_6970232624066594959[13] = 0;
   out_6970232624066594959[14] = 0;
   out_6970232624066594959[15] = 0;
   out_6970232624066594959[16] = 1;
   out_6970232624066594959[17] = 0;
   out_6970232624066594959[18] = 0;
   out_6970232624066594959[19] = 1;
   out_6970232624066594959[20] = 0;
   out_6970232624066594959[21] = 0;
   out_6970232624066594959[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6970232624066594959[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6970232624066594959[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6970232624066594959[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6970232624066594959[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6970232624066594959[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6970232624066594959[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6970232624066594959[29] = 0;
   out_6970232624066594959[30] = 0;
   out_6970232624066594959[31] = 0;
   out_6970232624066594959[32] = 0;
   out_6970232624066594959[33] = 0;
   out_6970232624066594959[34] = 0;
   out_6970232624066594959[35] = 0;
   out_6970232624066594959[36] = 0;
   out_6970232624066594959[37] = 0;
   out_6970232624066594959[38] = 0;
   out_6970232624066594959[39] = 1;
   out_6970232624066594959[40] = 0;
   out_6970232624066594959[41] = 0;
   out_6970232624066594959[42] = 1;
   out_6970232624066594959[43] = 0;
   out_6970232624066594959[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6970232624066594959[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6970232624066594959[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6970232624066594959[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6970232624066594959[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6970232624066594959[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6970232624066594959[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6970232624066594959[51] = 0;
   out_6970232624066594959[52] = 0;
   out_6970232624066594959[53] = 0;
   out_6970232624066594959[54] = 0;
   out_6970232624066594959[55] = 0;
   out_6970232624066594959[56] = 0;
   out_6970232624066594959[57] = 0;
   out_6970232624066594959[58] = 0;
   out_6970232624066594959[59] = 0;
   out_6970232624066594959[60] = 0;
   out_6970232624066594959[61] = 0;
   out_6970232624066594959[62] = 1;
   out_6970232624066594959[63] = 0;
   out_6970232624066594959[64] = 0;
   out_6970232624066594959[65] = 1;
}
void h_12(double *state, double *unused, double *out_687751758443620076) {
   out_687751758443620076[0] = state[0];
   out_687751758443620076[1] = state[1];
   out_687751758443620076[2] = state[2];
}
void H_12(double *state, double *unused, double *out_3518376579765721691) {
   out_3518376579765721691[0] = 1;
   out_3518376579765721691[1] = 0;
   out_3518376579765721691[2] = 0;
   out_3518376579765721691[3] = 0;
   out_3518376579765721691[4] = 0;
   out_3518376579765721691[5] = 0;
   out_3518376579765721691[6] = 0;
   out_3518376579765721691[7] = 0;
   out_3518376579765721691[8] = 0;
   out_3518376579765721691[9] = 0;
   out_3518376579765721691[10] = 0;
   out_3518376579765721691[11] = 0;
   out_3518376579765721691[12] = 0;
   out_3518376579765721691[13] = 0;
   out_3518376579765721691[14] = 0;
   out_3518376579765721691[15] = 0;
   out_3518376579765721691[16] = 0;
   out_3518376579765721691[17] = 0;
   out_3518376579765721691[18] = 0;
   out_3518376579765721691[19] = 0;
   out_3518376579765721691[20] = 0;
   out_3518376579765721691[21] = 0;
   out_3518376579765721691[22] = 0;
   out_3518376579765721691[23] = 1;
   out_3518376579765721691[24] = 0;
   out_3518376579765721691[25] = 0;
   out_3518376579765721691[26] = 0;
   out_3518376579765721691[27] = 0;
   out_3518376579765721691[28] = 0;
   out_3518376579765721691[29] = 0;
   out_3518376579765721691[30] = 0;
   out_3518376579765721691[31] = 0;
   out_3518376579765721691[32] = 0;
   out_3518376579765721691[33] = 0;
   out_3518376579765721691[34] = 0;
   out_3518376579765721691[35] = 0;
   out_3518376579765721691[36] = 0;
   out_3518376579765721691[37] = 0;
   out_3518376579765721691[38] = 0;
   out_3518376579765721691[39] = 0;
   out_3518376579765721691[40] = 0;
   out_3518376579765721691[41] = 0;
   out_3518376579765721691[42] = 0;
   out_3518376579765721691[43] = 0;
   out_3518376579765721691[44] = 0;
   out_3518376579765721691[45] = 0;
   out_3518376579765721691[46] = 1;
   out_3518376579765721691[47] = 0;
   out_3518376579765721691[48] = 0;
   out_3518376579765721691[49] = 0;
   out_3518376579765721691[50] = 0;
   out_3518376579765721691[51] = 0;
   out_3518376579765721691[52] = 0;
   out_3518376579765721691[53] = 0;
   out_3518376579765721691[54] = 0;
   out_3518376579765721691[55] = 0;
   out_3518376579765721691[56] = 0;
   out_3518376579765721691[57] = 0;
   out_3518376579765721691[58] = 0;
   out_3518376579765721691[59] = 0;
   out_3518376579765721691[60] = 0;
   out_3518376579765721691[61] = 0;
   out_3518376579765721691[62] = 0;
   out_3518376579765721691[63] = 0;
   out_3518376579765721691[64] = 0;
   out_3518376579765721691[65] = 0;
}
void h_31(double *state, double *unused, double *out_1281509209662324245) {
   out_1281509209662324245[0] = state[7];
   out_1281509209662324245[1] = state[8];
   out_1281509209662324245[2] = state[9];
}
void H_31(double *state, double *unused, double *out_5171170930425076110) {
   out_5171170930425076110[0] = 0;
   out_5171170930425076110[1] = 0;
   out_5171170930425076110[2] = 0;
   out_5171170930425076110[3] = 0;
   out_5171170930425076110[4] = 0;
   out_5171170930425076110[5] = 0;
   out_5171170930425076110[6] = 0;
   out_5171170930425076110[7] = 1;
   out_5171170930425076110[8] = 0;
   out_5171170930425076110[9] = 0;
   out_5171170930425076110[10] = 0;
   out_5171170930425076110[11] = 0;
   out_5171170930425076110[12] = 0;
   out_5171170930425076110[13] = 0;
   out_5171170930425076110[14] = 0;
   out_5171170930425076110[15] = 0;
   out_5171170930425076110[16] = 0;
   out_5171170930425076110[17] = 0;
   out_5171170930425076110[18] = 0;
   out_5171170930425076110[19] = 0;
   out_5171170930425076110[20] = 0;
   out_5171170930425076110[21] = 0;
   out_5171170930425076110[22] = 0;
   out_5171170930425076110[23] = 0;
   out_5171170930425076110[24] = 0;
   out_5171170930425076110[25] = 0;
   out_5171170930425076110[26] = 0;
   out_5171170930425076110[27] = 0;
   out_5171170930425076110[28] = 0;
   out_5171170930425076110[29] = 0;
   out_5171170930425076110[30] = 1;
   out_5171170930425076110[31] = 0;
   out_5171170930425076110[32] = 0;
   out_5171170930425076110[33] = 0;
   out_5171170930425076110[34] = 0;
   out_5171170930425076110[35] = 0;
   out_5171170930425076110[36] = 0;
   out_5171170930425076110[37] = 0;
   out_5171170930425076110[38] = 0;
   out_5171170930425076110[39] = 0;
   out_5171170930425076110[40] = 0;
   out_5171170930425076110[41] = 0;
   out_5171170930425076110[42] = 0;
   out_5171170930425076110[43] = 0;
   out_5171170930425076110[44] = 0;
   out_5171170930425076110[45] = 0;
   out_5171170930425076110[46] = 0;
   out_5171170930425076110[47] = 0;
   out_5171170930425076110[48] = 0;
   out_5171170930425076110[49] = 0;
   out_5171170930425076110[50] = 0;
   out_5171170930425076110[51] = 0;
   out_5171170930425076110[52] = 0;
   out_5171170930425076110[53] = 1;
   out_5171170930425076110[54] = 0;
   out_5171170930425076110[55] = 0;
   out_5171170930425076110[56] = 0;
   out_5171170930425076110[57] = 0;
   out_5171170930425076110[58] = 0;
   out_5171170930425076110[59] = 0;
   out_5171170930425076110[60] = 0;
   out_5171170930425076110[61] = 0;
   out_5171170930425076110[62] = 0;
   out_5171170930425076110[63] = 0;
   out_5171170930425076110[64] = 0;
   out_5171170930425076110[65] = 0;
}
void h_32(double *state, double *unused, double *out_4292634007224965488) {
   out_4292634007224965488[0] = state[3];
   out_4292634007224965488[1] = state[4];
   out_4292634007224965488[2] = state[5];
   out_4292634007224965488[3] = state[6];
}
void H_32(double *state, double *unused, double *out_2010844616977709611) {
   out_2010844616977709611[0] = 0;
   out_2010844616977709611[1] = 0;
   out_2010844616977709611[2] = 0;
   out_2010844616977709611[3] = 1;
   out_2010844616977709611[4] = 0;
   out_2010844616977709611[5] = 0;
   out_2010844616977709611[6] = 0;
   out_2010844616977709611[7] = 0;
   out_2010844616977709611[8] = 0;
   out_2010844616977709611[9] = 0;
   out_2010844616977709611[10] = 0;
   out_2010844616977709611[11] = 0;
   out_2010844616977709611[12] = 0;
   out_2010844616977709611[13] = 0;
   out_2010844616977709611[14] = 0;
   out_2010844616977709611[15] = 0;
   out_2010844616977709611[16] = 0;
   out_2010844616977709611[17] = 0;
   out_2010844616977709611[18] = 0;
   out_2010844616977709611[19] = 0;
   out_2010844616977709611[20] = 0;
   out_2010844616977709611[21] = 0;
   out_2010844616977709611[22] = 0;
   out_2010844616977709611[23] = 0;
   out_2010844616977709611[24] = 0;
   out_2010844616977709611[25] = 0;
   out_2010844616977709611[26] = 1;
   out_2010844616977709611[27] = 0;
   out_2010844616977709611[28] = 0;
   out_2010844616977709611[29] = 0;
   out_2010844616977709611[30] = 0;
   out_2010844616977709611[31] = 0;
   out_2010844616977709611[32] = 0;
   out_2010844616977709611[33] = 0;
   out_2010844616977709611[34] = 0;
   out_2010844616977709611[35] = 0;
   out_2010844616977709611[36] = 0;
   out_2010844616977709611[37] = 0;
   out_2010844616977709611[38] = 0;
   out_2010844616977709611[39] = 0;
   out_2010844616977709611[40] = 0;
   out_2010844616977709611[41] = 0;
   out_2010844616977709611[42] = 0;
   out_2010844616977709611[43] = 0;
   out_2010844616977709611[44] = 0;
   out_2010844616977709611[45] = 0;
   out_2010844616977709611[46] = 0;
   out_2010844616977709611[47] = 0;
   out_2010844616977709611[48] = 0;
   out_2010844616977709611[49] = 1;
   out_2010844616977709611[50] = 0;
   out_2010844616977709611[51] = 0;
   out_2010844616977709611[52] = 0;
   out_2010844616977709611[53] = 0;
   out_2010844616977709611[54] = 0;
   out_2010844616977709611[55] = 0;
   out_2010844616977709611[56] = 0;
   out_2010844616977709611[57] = 0;
   out_2010844616977709611[58] = 0;
   out_2010844616977709611[59] = 0;
   out_2010844616977709611[60] = 0;
   out_2010844616977709611[61] = 0;
   out_2010844616977709611[62] = 0;
   out_2010844616977709611[63] = 0;
   out_2010844616977709611[64] = 0;
   out_2010844616977709611[65] = 0;
   out_2010844616977709611[66] = 0;
   out_2010844616977709611[67] = 0;
   out_2010844616977709611[68] = 0;
   out_2010844616977709611[69] = 0;
   out_2010844616977709611[70] = 0;
   out_2010844616977709611[71] = 0;
   out_2010844616977709611[72] = 1;
   out_2010844616977709611[73] = 0;
   out_2010844616977709611[74] = 0;
   out_2010844616977709611[75] = 0;
   out_2010844616977709611[76] = 0;
   out_2010844616977709611[77] = 0;
   out_2010844616977709611[78] = 0;
   out_2010844616977709611[79] = 0;
   out_2010844616977709611[80] = 0;
   out_2010844616977709611[81] = 0;
   out_2010844616977709611[82] = 0;
   out_2010844616977709611[83] = 0;
   out_2010844616977709611[84] = 0;
   out_2010844616977709611[85] = 0;
   out_2010844616977709611[86] = 0;
   out_2010844616977709611[87] = 0;
}
void h_13(double *state, double *unused, double *out_5591226189252689606) {
   out_5591226189252689606[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_5591226189252689606[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_5591226189252689606[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_8965909042930030514) {
   out_8965909042930030514[0] = 0;
   out_8965909042930030514[1] = 0;
   out_8965909042930030514[2] = 0;
   out_8965909042930030514[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8965909042930030514[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8965909042930030514[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_8965909042930030514[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8965909042930030514[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_8965909042930030514[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_8965909042930030514[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_8965909042930030514[10] = 0;
   out_8965909042930030514[11] = 0;
   out_8965909042930030514[12] = 0;
   out_8965909042930030514[13] = 0;
   out_8965909042930030514[14] = 0;
   out_8965909042930030514[15] = 0;
   out_8965909042930030514[16] = 0;
   out_8965909042930030514[17] = 0;
   out_8965909042930030514[18] = 0;
   out_8965909042930030514[19] = 0;
   out_8965909042930030514[20] = 0;
   out_8965909042930030514[21] = 0;
   out_8965909042930030514[22] = 0;
   out_8965909042930030514[23] = 0;
   out_8965909042930030514[24] = 0;
   out_8965909042930030514[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8965909042930030514[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8965909042930030514[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8965909042930030514[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_8965909042930030514[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_8965909042930030514[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_8965909042930030514[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_8965909042930030514[32] = 0;
   out_8965909042930030514[33] = 0;
   out_8965909042930030514[34] = 0;
   out_8965909042930030514[35] = 0;
   out_8965909042930030514[36] = 0;
   out_8965909042930030514[37] = 0;
   out_8965909042930030514[38] = 0;
   out_8965909042930030514[39] = 0;
   out_8965909042930030514[40] = 0;
   out_8965909042930030514[41] = 0;
   out_8965909042930030514[42] = 0;
   out_8965909042930030514[43] = 0;
   out_8965909042930030514[44] = 0;
   out_8965909042930030514[45] = 0;
   out_8965909042930030514[46] = 0;
   out_8965909042930030514[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8965909042930030514[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_8965909042930030514[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8965909042930030514[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8965909042930030514[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_8965909042930030514[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_8965909042930030514[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_8965909042930030514[54] = 0;
   out_8965909042930030514[55] = 0;
   out_8965909042930030514[56] = 0;
   out_8965909042930030514[57] = 0;
   out_8965909042930030514[58] = 0;
   out_8965909042930030514[59] = 0;
   out_8965909042930030514[60] = 0;
   out_8965909042930030514[61] = 0;
   out_8965909042930030514[62] = 0;
   out_8965909042930030514[63] = 0;
   out_8965909042930030514[64] = 0;
   out_8965909042930030514[65] = 0;
}
void h_14(double *state, double *unused, double *out_1016674407698141864) {
   out_1016674407698141864[0] = state[10];
   out_1016674407698141864[1] = state[11];
   out_1016674407698141864[2] = state[12];
}
void H_14(double *state, double *unused, double *out_8296643341168092841) {
   out_8296643341168092841[0] = 0;
   out_8296643341168092841[1] = 0;
   out_8296643341168092841[2] = 0;
   out_8296643341168092841[3] = 0;
   out_8296643341168092841[4] = 0;
   out_8296643341168092841[5] = 0;
   out_8296643341168092841[6] = 0;
   out_8296643341168092841[7] = 0;
   out_8296643341168092841[8] = 0;
   out_8296643341168092841[9] = 0;
   out_8296643341168092841[10] = 1;
   out_8296643341168092841[11] = 0;
   out_8296643341168092841[12] = 0;
   out_8296643341168092841[13] = 0;
   out_8296643341168092841[14] = 0;
   out_8296643341168092841[15] = 0;
   out_8296643341168092841[16] = 0;
   out_8296643341168092841[17] = 0;
   out_8296643341168092841[18] = 0;
   out_8296643341168092841[19] = 0;
   out_8296643341168092841[20] = 0;
   out_8296643341168092841[21] = 0;
   out_8296643341168092841[22] = 0;
   out_8296643341168092841[23] = 0;
   out_8296643341168092841[24] = 0;
   out_8296643341168092841[25] = 0;
   out_8296643341168092841[26] = 0;
   out_8296643341168092841[27] = 0;
   out_8296643341168092841[28] = 0;
   out_8296643341168092841[29] = 0;
   out_8296643341168092841[30] = 0;
   out_8296643341168092841[31] = 0;
   out_8296643341168092841[32] = 0;
   out_8296643341168092841[33] = 1;
   out_8296643341168092841[34] = 0;
   out_8296643341168092841[35] = 0;
   out_8296643341168092841[36] = 0;
   out_8296643341168092841[37] = 0;
   out_8296643341168092841[38] = 0;
   out_8296643341168092841[39] = 0;
   out_8296643341168092841[40] = 0;
   out_8296643341168092841[41] = 0;
   out_8296643341168092841[42] = 0;
   out_8296643341168092841[43] = 0;
   out_8296643341168092841[44] = 0;
   out_8296643341168092841[45] = 0;
   out_8296643341168092841[46] = 0;
   out_8296643341168092841[47] = 0;
   out_8296643341168092841[48] = 0;
   out_8296643341168092841[49] = 0;
   out_8296643341168092841[50] = 0;
   out_8296643341168092841[51] = 0;
   out_8296643341168092841[52] = 0;
   out_8296643341168092841[53] = 0;
   out_8296643341168092841[54] = 0;
   out_8296643341168092841[55] = 0;
   out_8296643341168092841[56] = 1;
   out_8296643341168092841[57] = 0;
   out_8296643341168092841[58] = 0;
   out_8296643341168092841[59] = 0;
   out_8296643341168092841[60] = 0;
   out_8296643341168092841[61] = 0;
   out_8296643341168092841[62] = 0;
   out_8296643341168092841[63] = 0;
   out_8296643341168092841[64] = 0;
   out_8296643341168092841[65] = 0;
}
void h_33(double *state, double *unused, double *out_8226086700540071770) {
   out_8226086700540071770[0] = state[16];
   out_8226086700540071770[1] = state[17];
   out_8226086700540071770[2] = state[18];
}
void H_33(double *state, double *unused, double *out_2020613925786218506) {
   out_2020613925786218506[0] = 0;
   out_2020613925786218506[1] = 0;
   out_2020613925786218506[2] = 0;
   out_2020613925786218506[3] = 0;
   out_2020613925786218506[4] = 0;
   out_2020613925786218506[5] = 0;
   out_2020613925786218506[6] = 0;
   out_2020613925786218506[7] = 0;
   out_2020613925786218506[8] = 0;
   out_2020613925786218506[9] = 0;
   out_2020613925786218506[10] = 0;
   out_2020613925786218506[11] = 0;
   out_2020613925786218506[12] = 0;
   out_2020613925786218506[13] = 0;
   out_2020613925786218506[14] = 0;
   out_2020613925786218506[15] = 0;
   out_2020613925786218506[16] = 1;
   out_2020613925786218506[17] = 0;
   out_2020613925786218506[18] = 0;
   out_2020613925786218506[19] = 0;
   out_2020613925786218506[20] = 0;
   out_2020613925786218506[21] = 0;
   out_2020613925786218506[22] = 0;
   out_2020613925786218506[23] = 0;
   out_2020613925786218506[24] = 0;
   out_2020613925786218506[25] = 0;
   out_2020613925786218506[26] = 0;
   out_2020613925786218506[27] = 0;
   out_2020613925786218506[28] = 0;
   out_2020613925786218506[29] = 0;
   out_2020613925786218506[30] = 0;
   out_2020613925786218506[31] = 0;
   out_2020613925786218506[32] = 0;
   out_2020613925786218506[33] = 0;
   out_2020613925786218506[34] = 0;
   out_2020613925786218506[35] = 0;
   out_2020613925786218506[36] = 0;
   out_2020613925786218506[37] = 0;
   out_2020613925786218506[38] = 0;
   out_2020613925786218506[39] = 1;
   out_2020613925786218506[40] = 0;
   out_2020613925786218506[41] = 0;
   out_2020613925786218506[42] = 0;
   out_2020613925786218506[43] = 0;
   out_2020613925786218506[44] = 0;
   out_2020613925786218506[45] = 0;
   out_2020613925786218506[46] = 0;
   out_2020613925786218506[47] = 0;
   out_2020613925786218506[48] = 0;
   out_2020613925786218506[49] = 0;
   out_2020613925786218506[50] = 0;
   out_2020613925786218506[51] = 0;
   out_2020613925786218506[52] = 0;
   out_2020613925786218506[53] = 0;
   out_2020613925786218506[54] = 0;
   out_2020613925786218506[55] = 0;
   out_2020613925786218506[56] = 0;
   out_2020613925786218506[57] = 0;
   out_2020613925786218506[58] = 0;
   out_2020613925786218506[59] = 0;
   out_2020613925786218506[60] = 0;
   out_2020613925786218506[61] = 0;
   out_2020613925786218506[62] = 1;
   out_2020613925786218506[63] = 0;
   out_2020613925786218506[64] = 0;
   out_2020613925786218506[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_4561219149607775257) {
  H(in_vec, out_4561219149607775257);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_5714388780541513559) {
  err_fun(nom_x, delta_x, out_5714388780541513559);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_2722425663997044208) {
  inv_err_fun(nom_x, true_x, out_2722425663997044208);
}
void live_H_mod_fun(double *state, double *out_7048599423514714999) {
  H_mod_fun(state, out_7048599423514714999);
}
void live_f_fun(double *state, double dt, double *out_1817294066734651182) {
  f_fun(state,  dt, out_1817294066734651182);
}
void live_F_fun(double *state, double dt, double *out_4034785705381798254) {
  F_fun(state,  dt, out_4034785705381798254);
}
void live_h_4(double *state, double *unused, double *out_6581286902000104292) {
  h_4(state, unused, out_6581286902000104292);
}
void live_H_4(double *state, double *unused, double *out_8537832987797683486) {
  H_4(state, unused, out_8537832987797683486);
}
void live_h_9(double *state, double *unused, double *out_1016674407698141864) {
  h_9(state, unused, out_1016674407698141864);
}
void live_H_9(double *state, double *unused, double *out_8296643341168092841) {
  H_9(state, unused, out_8296643341168092841);
}
void live_h_10(double *state, double *unused, double *out_4115902024506385539) {
  h_10(state, unused, out_4115902024506385539);
}
void live_H_10(double *state, double *unused, double *out_6970232624066594959) {
  H_10(state, unused, out_6970232624066594959);
}
void live_h_12(double *state, double *unused, double *out_687751758443620076) {
  h_12(state, unused, out_687751758443620076);
}
void live_H_12(double *state, double *unused, double *out_3518376579765721691) {
  H_12(state, unused, out_3518376579765721691);
}
void live_h_31(double *state, double *unused, double *out_1281509209662324245) {
  h_31(state, unused, out_1281509209662324245);
}
void live_H_31(double *state, double *unused, double *out_5171170930425076110) {
  H_31(state, unused, out_5171170930425076110);
}
void live_h_32(double *state, double *unused, double *out_4292634007224965488) {
  h_32(state, unused, out_4292634007224965488);
}
void live_H_32(double *state, double *unused, double *out_2010844616977709611) {
  H_32(state, unused, out_2010844616977709611);
}
void live_h_13(double *state, double *unused, double *out_5591226189252689606) {
  h_13(state, unused, out_5591226189252689606);
}
void live_H_13(double *state, double *unused, double *out_8965909042930030514) {
  H_13(state, unused, out_8965909042930030514);
}
void live_h_14(double *state, double *unused, double *out_1016674407698141864) {
  h_14(state, unused, out_1016674407698141864);
}
void live_H_14(double *state, double *unused, double *out_8296643341168092841) {
  H_14(state, unused, out_8296643341168092841);
}
void live_h_33(double *state, double *unused, double *out_8226086700540071770) {
  h_33(state, unused, out_8226086700540071770);
}
void live_H_33(double *state, double *unused, double *out_2020613925786218506) {
  H_33(state, unused, out_2020613925786218506);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
