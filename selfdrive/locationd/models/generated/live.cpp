#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_664870032555571696) {
   out_664870032555571696[0] = 0;
   out_664870032555571696[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_664870032555571696[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_664870032555571696[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_664870032555571696[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_664870032555571696[5] = -sin(in_vec[1]);
   out_664870032555571696[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_664870032555571696[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_664870032555571696[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_664870032555571696[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_664870032555571696[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_664870032555571696[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_664870032555571696[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_664870032555571696[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_664870032555571696[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_664870032555571696[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_664870032555571696[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_664870032555571696[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_515850225930482518) {
   out_515850225930482518[0] = delta_x[0] + nom_x[0];
   out_515850225930482518[1] = delta_x[1] + nom_x[1];
   out_515850225930482518[2] = delta_x[2] + nom_x[2];
   out_515850225930482518[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_515850225930482518[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_515850225930482518[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_515850225930482518[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_515850225930482518[7] = delta_x[6] + nom_x[7];
   out_515850225930482518[8] = delta_x[7] + nom_x[8];
   out_515850225930482518[9] = delta_x[8] + nom_x[9];
   out_515850225930482518[10] = delta_x[9] + nom_x[10];
   out_515850225930482518[11] = delta_x[10] + nom_x[11];
   out_515850225930482518[12] = delta_x[11] + nom_x[12];
   out_515850225930482518[13] = delta_x[12] + nom_x[13];
   out_515850225930482518[14] = delta_x[13] + nom_x[14];
   out_515850225930482518[15] = delta_x[14] + nom_x[15];
   out_515850225930482518[16] = delta_x[15] + nom_x[16];
   out_515850225930482518[17] = delta_x[16] + nom_x[17];
   out_515850225930482518[18] = delta_x[17] + nom_x[18];
   out_515850225930482518[19] = delta_x[18] + nom_x[19];
   out_515850225930482518[20] = delta_x[19] + nom_x[20];
   out_515850225930482518[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5678167244921416369) {
   out_5678167244921416369[0] = -nom_x[0] + true_x[0];
   out_5678167244921416369[1] = -nom_x[1] + true_x[1];
   out_5678167244921416369[2] = -nom_x[2] + true_x[2];
   out_5678167244921416369[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5678167244921416369[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5678167244921416369[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5678167244921416369[6] = -nom_x[7] + true_x[7];
   out_5678167244921416369[7] = -nom_x[8] + true_x[8];
   out_5678167244921416369[8] = -nom_x[9] + true_x[9];
   out_5678167244921416369[9] = -nom_x[10] + true_x[10];
   out_5678167244921416369[10] = -nom_x[11] + true_x[11];
   out_5678167244921416369[11] = -nom_x[12] + true_x[12];
   out_5678167244921416369[12] = -nom_x[13] + true_x[13];
   out_5678167244921416369[13] = -nom_x[14] + true_x[14];
   out_5678167244921416369[14] = -nom_x[15] + true_x[15];
   out_5678167244921416369[15] = -nom_x[16] + true_x[16];
   out_5678167244921416369[16] = -nom_x[17] + true_x[17];
   out_5678167244921416369[17] = -nom_x[18] + true_x[18];
   out_5678167244921416369[18] = -nom_x[19] + true_x[19];
   out_5678167244921416369[19] = -nom_x[20] + true_x[20];
   out_5678167244921416369[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_7147677672942268557) {
   out_7147677672942268557[0] = 1.0;
   out_7147677672942268557[1] = 0;
   out_7147677672942268557[2] = 0;
   out_7147677672942268557[3] = 0;
   out_7147677672942268557[4] = 0;
   out_7147677672942268557[5] = 0;
   out_7147677672942268557[6] = 0;
   out_7147677672942268557[7] = 0;
   out_7147677672942268557[8] = 0;
   out_7147677672942268557[9] = 0;
   out_7147677672942268557[10] = 0;
   out_7147677672942268557[11] = 0;
   out_7147677672942268557[12] = 0;
   out_7147677672942268557[13] = 0;
   out_7147677672942268557[14] = 0;
   out_7147677672942268557[15] = 0;
   out_7147677672942268557[16] = 0;
   out_7147677672942268557[17] = 0;
   out_7147677672942268557[18] = 0;
   out_7147677672942268557[19] = 0;
   out_7147677672942268557[20] = 0;
   out_7147677672942268557[21] = 0;
   out_7147677672942268557[22] = 1.0;
   out_7147677672942268557[23] = 0;
   out_7147677672942268557[24] = 0;
   out_7147677672942268557[25] = 0;
   out_7147677672942268557[26] = 0;
   out_7147677672942268557[27] = 0;
   out_7147677672942268557[28] = 0;
   out_7147677672942268557[29] = 0;
   out_7147677672942268557[30] = 0;
   out_7147677672942268557[31] = 0;
   out_7147677672942268557[32] = 0;
   out_7147677672942268557[33] = 0;
   out_7147677672942268557[34] = 0;
   out_7147677672942268557[35] = 0;
   out_7147677672942268557[36] = 0;
   out_7147677672942268557[37] = 0;
   out_7147677672942268557[38] = 0;
   out_7147677672942268557[39] = 0;
   out_7147677672942268557[40] = 0;
   out_7147677672942268557[41] = 0;
   out_7147677672942268557[42] = 0;
   out_7147677672942268557[43] = 0;
   out_7147677672942268557[44] = 1.0;
   out_7147677672942268557[45] = 0;
   out_7147677672942268557[46] = 0;
   out_7147677672942268557[47] = 0;
   out_7147677672942268557[48] = 0;
   out_7147677672942268557[49] = 0;
   out_7147677672942268557[50] = 0;
   out_7147677672942268557[51] = 0;
   out_7147677672942268557[52] = 0;
   out_7147677672942268557[53] = 0;
   out_7147677672942268557[54] = 0;
   out_7147677672942268557[55] = 0;
   out_7147677672942268557[56] = 0;
   out_7147677672942268557[57] = 0;
   out_7147677672942268557[58] = 0;
   out_7147677672942268557[59] = 0;
   out_7147677672942268557[60] = 0;
   out_7147677672942268557[61] = 0;
   out_7147677672942268557[62] = 0;
   out_7147677672942268557[63] = 0;
   out_7147677672942268557[64] = 0;
   out_7147677672942268557[65] = 0;
   out_7147677672942268557[66] = -0.5*state[4];
   out_7147677672942268557[67] = -0.5*state[5];
   out_7147677672942268557[68] = -0.5*state[6];
   out_7147677672942268557[69] = 0;
   out_7147677672942268557[70] = 0;
   out_7147677672942268557[71] = 0;
   out_7147677672942268557[72] = 0;
   out_7147677672942268557[73] = 0;
   out_7147677672942268557[74] = 0;
   out_7147677672942268557[75] = 0;
   out_7147677672942268557[76] = 0;
   out_7147677672942268557[77] = 0;
   out_7147677672942268557[78] = 0;
   out_7147677672942268557[79] = 0;
   out_7147677672942268557[80] = 0;
   out_7147677672942268557[81] = 0;
   out_7147677672942268557[82] = 0;
   out_7147677672942268557[83] = 0;
   out_7147677672942268557[84] = 0;
   out_7147677672942268557[85] = 0;
   out_7147677672942268557[86] = 0;
   out_7147677672942268557[87] = 0.5*state[3];
   out_7147677672942268557[88] = 0.5*state[6];
   out_7147677672942268557[89] = -0.5*state[5];
   out_7147677672942268557[90] = 0;
   out_7147677672942268557[91] = 0;
   out_7147677672942268557[92] = 0;
   out_7147677672942268557[93] = 0;
   out_7147677672942268557[94] = 0;
   out_7147677672942268557[95] = 0;
   out_7147677672942268557[96] = 0;
   out_7147677672942268557[97] = 0;
   out_7147677672942268557[98] = 0;
   out_7147677672942268557[99] = 0;
   out_7147677672942268557[100] = 0;
   out_7147677672942268557[101] = 0;
   out_7147677672942268557[102] = 0;
   out_7147677672942268557[103] = 0;
   out_7147677672942268557[104] = 0;
   out_7147677672942268557[105] = 0;
   out_7147677672942268557[106] = 0;
   out_7147677672942268557[107] = 0;
   out_7147677672942268557[108] = -0.5*state[6];
   out_7147677672942268557[109] = 0.5*state[3];
   out_7147677672942268557[110] = 0.5*state[4];
   out_7147677672942268557[111] = 0;
   out_7147677672942268557[112] = 0;
   out_7147677672942268557[113] = 0;
   out_7147677672942268557[114] = 0;
   out_7147677672942268557[115] = 0;
   out_7147677672942268557[116] = 0;
   out_7147677672942268557[117] = 0;
   out_7147677672942268557[118] = 0;
   out_7147677672942268557[119] = 0;
   out_7147677672942268557[120] = 0;
   out_7147677672942268557[121] = 0;
   out_7147677672942268557[122] = 0;
   out_7147677672942268557[123] = 0;
   out_7147677672942268557[124] = 0;
   out_7147677672942268557[125] = 0;
   out_7147677672942268557[126] = 0;
   out_7147677672942268557[127] = 0;
   out_7147677672942268557[128] = 0;
   out_7147677672942268557[129] = 0.5*state[5];
   out_7147677672942268557[130] = -0.5*state[4];
   out_7147677672942268557[131] = 0.5*state[3];
   out_7147677672942268557[132] = 0;
   out_7147677672942268557[133] = 0;
   out_7147677672942268557[134] = 0;
   out_7147677672942268557[135] = 0;
   out_7147677672942268557[136] = 0;
   out_7147677672942268557[137] = 0;
   out_7147677672942268557[138] = 0;
   out_7147677672942268557[139] = 0;
   out_7147677672942268557[140] = 0;
   out_7147677672942268557[141] = 0;
   out_7147677672942268557[142] = 0;
   out_7147677672942268557[143] = 0;
   out_7147677672942268557[144] = 0;
   out_7147677672942268557[145] = 0;
   out_7147677672942268557[146] = 0;
   out_7147677672942268557[147] = 0;
   out_7147677672942268557[148] = 0;
   out_7147677672942268557[149] = 0;
   out_7147677672942268557[150] = 0;
   out_7147677672942268557[151] = 0;
   out_7147677672942268557[152] = 0;
   out_7147677672942268557[153] = 1.0;
   out_7147677672942268557[154] = 0;
   out_7147677672942268557[155] = 0;
   out_7147677672942268557[156] = 0;
   out_7147677672942268557[157] = 0;
   out_7147677672942268557[158] = 0;
   out_7147677672942268557[159] = 0;
   out_7147677672942268557[160] = 0;
   out_7147677672942268557[161] = 0;
   out_7147677672942268557[162] = 0;
   out_7147677672942268557[163] = 0;
   out_7147677672942268557[164] = 0;
   out_7147677672942268557[165] = 0;
   out_7147677672942268557[166] = 0;
   out_7147677672942268557[167] = 0;
   out_7147677672942268557[168] = 0;
   out_7147677672942268557[169] = 0;
   out_7147677672942268557[170] = 0;
   out_7147677672942268557[171] = 0;
   out_7147677672942268557[172] = 0;
   out_7147677672942268557[173] = 0;
   out_7147677672942268557[174] = 0;
   out_7147677672942268557[175] = 1.0;
   out_7147677672942268557[176] = 0;
   out_7147677672942268557[177] = 0;
   out_7147677672942268557[178] = 0;
   out_7147677672942268557[179] = 0;
   out_7147677672942268557[180] = 0;
   out_7147677672942268557[181] = 0;
   out_7147677672942268557[182] = 0;
   out_7147677672942268557[183] = 0;
   out_7147677672942268557[184] = 0;
   out_7147677672942268557[185] = 0;
   out_7147677672942268557[186] = 0;
   out_7147677672942268557[187] = 0;
   out_7147677672942268557[188] = 0;
   out_7147677672942268557[189] = 0;
   out_7147677672942268557[190] = 0;
   out_7147677672942268557[191] = 0;
   out_7147677672942268557[192] = 0;
   out_7147677672942268557[193] = 0;
   out_7147677672942268557[194] = 0;
   out_7147677672942268557[195] = 0;
   out_7147677672942268557[196] = 0;
   out_7147677672942268557[197] = 1.0;
   out_7147677672942268557[198] = 0;
   out_7147677672942268557[199] = 0;
   out_7147677672942268557[200] = 0;
   out_7147677672942268557[201] = 0;
   out_7147677672942268557[202] = 0;
   out_7147677672942268557[203] = 0;
   out_7147677672942268557[204] = 0;
   out_7147677672942268557[205] = 0;
   out_7147677672942268557[206] = 0;
   out_7147677672942268557[207] = 0;
   out_7147677672942268557[208] = 0;
   out_7147677672942268557[209] = 0;
   out_7147677672942268557[210] = 0;
   out_7147677672942268557[211] = 0;
   out_7147677672942268557[212] = 0;
   out_7147677672942268557[213] = 0;
   out_7147677672942268557[214] = 0;
   out_7147677672942268557[215] = 0;
   out_7147677672942268557[216] = 0;
   out_7147677672942268557[217] = 0;
   out_7147677672942268557[218] = 0;
   out_7147677672942268557[219] = 1.0;
   out_7147677672942268557[220] = 0;
   out_7147677672942268557[221] = 0;
   out_7147677672942268557[222] = 0;
   out_7147677672942268557[223] = 0;
   out_7147677672942268557[224] = 0;
   out_7147677672942268557[225] = 0;
   out_7147677672942268557[226] = 0;
   out_7147677672942268557[227] = 0;
   out_7147677672942268557[228] = 0;
   out_7147677672942268557[229] = 0;
   out_7147677672942268557[230] = 0;
   out_7147677672942268557[231] = 0;
   out_7147677672942268557[232] = 0;
   out_7147677672942268557[233] = 0;
   out_7147677672942268557[234] = 0;
   out_7147677672942268557[235] = 0;
   out_7147677672942268557[236] = 0;
   out_7147677672942268557[237] = 0;
   out_7147677672942268557[238] = 0;
   out_7147677672942268557[239] = 0;
   out_7147677672942268557[240] = 0;
   out_7147677672942268557[241] = 1.0;
   out_7147677672942268557[242] = 0;
   out_7147677672942268557[243] = 0;
   out_7147677672942268557[244] = 0;
   out_7147677672942268557[245] = 0;
   out_7147677672942268557[246] = 0;
   out_7147677672942268557[247] = 0;
   out_7147677672942268557[248] = 0;
   out_7147677672942268557[249] = 0;
   out_7147677672942268557[250] = 0;
   out_7147677672942268557[251] = 0;
   out_7147677672942268557[252] = 0;
   out_7147677672942268557[253] = 0;
   out_7147677672942268557[254] = 0;
   out_7147677672942268557[255] = 0;
   out_7147677672942268557[256] = 0;
   out_7147677672942268557[257] = 0;
   out_7147677672942268557[258] = 0;
   out_7147677672942268557[259] = 0;
   out_7147677672942268557[260] = 0;
   out_7147677672942268557[261] = 0;
   out_7147677672942268557[262] = 0;
   out_7147677672942268557[263] = 1.0;
   out_7147677672942268557[264] = 0;
   out_7147677672942268557[265] = 0;
   out_7147677672942268557[266] = 0;
   out_7147677672942268557[267] = 0;
   out_7147677672942268557[268] = 0;
   out_7147677672942268557[269] = 0;
   out_7147677672942268557[270] = 0;
   out_7147677672942268557[271] = 0;
   out_7147677672942268557[272] = 0;
   out_7147677672942268557[273] = 0;
   out_7147677672942268557[274] = 0;
   out_7147677672942268557[275] = 0;
   out_7147677672942268557[276] = 0;
   out_7147677672942268557[277] = 0;
   out_7147677672942268557[278] = 0;
   out_7147677672942268557[279] = 0;
   out_7147677672942268557[280] = 0;
   out_7147677672942268557[281] = 0;
   out_7147677672942268557[282] = 0;
   out_7147677672942268557[283] = 0;
   out_7147677672942268557[284] = 0;
   out_7147677672942268557[285] = 1.0;
   out_7147677672942268557[286] = 0;
   out_7147677672942268557[287] = 0;
   out_7147677672942268557[288] = 0;
   out_7147677672942268557[289] = 0;
   out_7147677672942268557[290] = 0;
   out_7147677672942268557[291] = 0;
   out_7147677672942268557[292] = 0;
   out_7147677672942268557[293] = 0;
   out_7147677672942268557[294] = 0;
   out_7147677672942268557[295] = 0;
   out_7147677672942268557[296] = 0;
   out_7147677672942268557[297] = 0;
   out_7147677672942268557[298] = 0;
   out_7147677672942268557[299] = 0;
   out_7147677672942268557[300] = 0;
   out_7147677672942268557[301] = 0;
   out_7147677672942268557[302] = 0;
   out_7147677672942268557[303] = 0;
   out_7147677672942268557[304] = 0;
   out_7147677672942268557[305] = 0;
   out_7147677672942268557[306] = 0;
   out_7147677672942268557[307] = 1.0;
   out_7147677672942268557[308] = 0;
   out_7147677672942268557[309] = 0;
   out_7147677672942268557[310] = 0;
   out_7147677672942268557[311] = 0;
   out_7147677672942268557[312] = 0;
   out_7147677672942268557[313] = 0;
   out_7147677672942268557[314] = 0;
   out_7147677672942268557[315] = 0;
   out_7147677672942268557[316] = 0;
   out_7147677672942268557[317] = 0;
   out_7147677672942268557[318] = 0;
   out_7147677672942268557[319] = 0;
   out_7147677672942268557[320] = 0;
   out_7147677672942268557[321] = 0;
   out_7147677672942268557[322] = 0;
   out_7147677672942268557[323] = 0;
   out_7147677672942268557[324] = 0;
   out_7147677672942268557[325] = 0;
   out_7147677672942268557[326] = 0;
   out_7147677672942268557[327] = 0;
   out_7147677672942268557[328] = 0;
   out_7147677672942268557[329] = 1.0;
   out_7147677672942268557[330] = 0;
   out_7147677672942268557[331] = 0;
   out_7147677672942268557[332] = 0;
   out_7147677672942268557[333] = 0;
   out_7147677672942268557[334] = 0;
   out_7147677672942268557[335] = 0;
   out_7147677672942268557[336] = 0;
   out_7147677672942268557[337] = 0;
   out_7147677672942268557[338] = 0;
   out_7147677672942268557[339] = 0;
   out_7147677672942268557[340] = 0;
   out_7147677672942268557[341] = 0;
   out_7147677672942268557[342] = 0;
   out_7147677672942268557[343] = 0;
   out_7147677672942268557[344] = 0;
   out_7147677672942268557[345] = 0;
   out_7147677672942268557[346] = 0;
   out_7147677672942268557[347] = 0;
   out_7147677672942268557[348] = 0;
   out_7147677672942268557[349] = 0;
   out_7147677672942268557[350] = 0;
   out_7147677672942268557[351] = 1.0;
   out_7147677672942268557[352] = 0;
   out_7147677672942268557[353] = 0;
   out_7147677672942268557[354] = 0;
   out_7147677672942268557[355] = 0;
   out_7147677672942268557[356] = 0;
   out_7147677672942268557[357] = 0;
   out_7147677672942268557[358] = 0;
   out_7147677672942268557[359] = 0;
   out_7147677672942268557[360] = 0;
   out_7147677672942268557[361] = 0;
   out_7147677672942268557[362] = 0;
   out_7147677672942268557[363] = 0;
   out_7147677672942268557[364] = 0;
   out_7147677672942268557[365] = 0;
   out_7147677672942268557[366] = 0;
   out_7147677672942268557[367] = 0;
   out_7147677672942268557[368] = 0;
   out_7147677672942268557[369] = 0;
   out_7147677672942268557[370] = 0;
   out_7147677672942268557[371] = 0;
   out_7147677672942268557[372] = 0;
   out_7147677672942268557[373] = 1.0;
   out_7147677672942268557[374] = 0;
   out_7147677672942268557[375] = 0;
   out_7147677672942268557[376] = 0;
   out_7147677672942268557[377] = 0;
   out_7147677672942268557[378] = 0;
   out_7147677672942268557[379] = 0;
   out_7147677672942268557[380] = 0;
   out_7147677672942268557[381] = 0;
   out_7147677672942268557[382] = 0;
   out_7147677672942268557[383] = 0;
   out_7147677672942268557[384] = 0;
   out_7147677672942268557[385] = 0;
   out_7147677672942268557[386] = 0;
   out_7147677672942268557[387] = 0;
   out_7147677672942268557[388] = 0;
   out_7147677672942268557[389] = 0;
   out_7147677672942268557[390] = 0;
   out_7147677672942268557[391] = 0;
   out_7147677672942268557[392] = 0;
   out_7147677672942268557[393] = 0;
   out_7147677672942268557[394] = 0;
   out_7147677672942268557[395] = 1.0;
   out_7147677672942268557[396] = 0;
   out_7147677672942268557[397] = 0;
   out_7147677672942268557[398] = 0;
   out_7147677672942268557[399] = 0;
   out_7147677672942268557[400] = 0;
   out_7147677672942268557[401] = 0;
   out_7147677672942268557[402] = 0;
   out_7147677672942268557[403] = 0;
   out_7147677672942268557[404] = 0;
   out_7147677672942268557[405] = 0;
   out_7147677672942268557[406] = 0;
   out_7147677672942268557[407] = 0;
   out_7147677672942268557[408] = 0;
   out_7147677672942268557[409] = 0;
   out_7147677672942268557[410] = 0;
   out_7147677672942268557[411] = 0;
   out_7147677672942268557[412] = 0;
   out_7147677672942268557[413] = 0;
   out_7147677672942268557[414] = 0;
   out_7147677672942268557[415] = 0;
   out_7147677672942268557[416] = 0;
   out_7147677672942268557[417] = 1.0;
   out_7147677672942268557[418] = 0;
   out_7147677672942268557[419] = 0;
   out_7147677672942268557[420] = 0;
   out_7147677672942268557[421] = 0;
   out_7147677672942268557[422] = 0;
   out_7147677672942268557[423] = 0;
   out_7147677672942268557[424] = 0;
   out_7147677672942268557[425] = 0;
   out_7147677672942268557[426] = 0;
   out_7147677672942268557[427] = 0;
   out_7147677672942268557[428] = 0;
   out_7147677672942268557[429] = 0;
   out_7147677672942268557[430] = 0;
   out_7147677672942268557[431] = 0;
   out_7147677672942268557[432] = 0;
   out_7147677672942268557[433] = 0;
   out_7147677672942268557[434] = 0;
   out_7147677672942268557[435] = 0;
   out_7147677672942268557[436] = 0;
   out_7147677672942268557[437] = 0;
   out_7147677672942268557[438] = 0;
   out_7147677672942268557[439] = 1.0;
   out_7147677672942268557[440] = 0;
   out_7147677672942268557[441] = 0;
   out_7147677672942268557[442] = 0;
   out_7147677672942268557[443] = 0;
   out_7147677672942268557[444] = 0;
   out_7147677672942268557[445] = 0;
   out_7147677672942268557[446] = 0;
   out_7147677672942268557[447] = 0;
   out_7147677672942268557[448] = 0;
   out_7147677672942268557[449] = 0;
   out_7147677672942268557[450] = 0;
   out_7147677672942268557[451] = 0;
   out_7147677672942268557[452] = 0;
   out_7147677672942268557[453] = 0;
   out_7147677672942268557[454] = 0;
   out_7147677672942268557[455] = 0;
   out_7147677672942268557[456] = 0;
   out_7147677672942268557[457] = 0;
   out_7147677672942268557[458] = 0;
   out_7147677672942268557[459] = 0;
   out_7147677672942268557[460] = 0;
   out_7147677672942268557[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_792155603275649113) {
   out_792155603275649113[0] = dt*state[7] + state[0];
   out_792155603275649113[1] = dt*state[8] + state[1];
   out_792155603275649113[2] = dt*state[9] + state[2];
   out_792155603275649113[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_792155603275649113[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_792155603275649113[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_792155603275649113[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_792155603275649113[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_792155603275649113[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_792155603275649113[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_792155603275649113[10] = state[10];
   out_792155603275649113[11] = state[11];
   out_792155603275649113[12] = state[12];
   out_792155603275649113[13] = state[13];
   out_792155603275649113[14] = state[14];
   out_792155603275649113[15] = state[15];
   out_792155603275649113[16] = state[16];
   out_792155603275649113[17] = state[17];
   out_792155603275649113[18] = state[18];
   out_792155603275649113[19] = state[19];
   out_792155603275649113[20] = state[20];
   out_792155603275649113[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4421713706834801602) {
   out_4421713706834801602[0] = 1;
   out_4421713706834801602[1] = 0;
   out_4421713706834801602[2] = 0;
   out_4421713706834801602[3] = 0;
   out_4421713706834801602[4] = 0;
   out_4421713706834801602[5] = 0;
   out_4421713706834801602[6] = dt;
   out_4421713706834801602[7] = 0;
   out_4421713706834801602[8] = 0;
   out_4421713706834801602[9] = 0;
   out_4421713706834801602[10] = 0;
   out_4421713706834801602[11] = 0;
   out_4421713706834801602[12] = 0;
   out_4421713706834801602[13] = 0;
   out_4421713706834801602[14] = 0;
   out_4421713706834801602[15] = 0;
   out_4421713706834801602[16] = 0;
   out_4421713706834801602[17] = 0;
   out_4421713706834801602[18] = 0;
   out_4421713706834801602[19] = 0;
   out_4421713706834801602[20] = 0;
   out_4421713706834801602[21] = 0;
   out_4421713706834801602[22] = 1;
   out_4421713706834801602[23] = 0;
   out_4421713706834801602[24] = 0;
   out_4421713706834801602[25] = 0;
   out_4421713706834801602[26] = 0;
   out_4421713706834801602[27] = 0;
   out_4421713706834801602[28] = dt;
   out_4421713706834801602[29] = 0;
   out_4421713706834801602[30] = 0;
   out_4421713706834801602[31] = 0;
   out_4421713706834801602[32] = 0;
   out_4421713706834801602[33] = 0;
   out_4421713706834801602[34] = 0;
   out_4421713706834801602[35] = 0;
   out_4421713706834801602[36] = 0;
   out_4421713706834801602[37] = 0;
   out_4421713706834801602[38] = 0;
   out_4421713706834801602[39] = 0;
   out_4421713706834801602[40] = 0;
   out_4421713706834801602[41] = 0;
   out_4421713706834801602[42] = 0;
   out_4421713706834801602[43] = 0;
   out_4421713706834801602[44] = 1;
   out_4421713706834801602[45] = 0;
   out_4421713706834801602[46] = 0;
   out_4421713706834801602[47] = 0;
   out_4421713706834801602[48] = 0;
   out_4421713706834801602[49] = 0;
   out_4421713706834801602[50] = dt;
   out_4421713706834801602[51] = 0;
   out_4421713706834801602[52] = 0;
   out_4421713706834801602[53] = 0;
   out_4421713706834801602[54] = 0;
   out_4421713706834801602[55] = 0;
   out_4421713706834801602[56] = 0;
   out_4421713706834801602[57] = 0;
   out_4421713706834801602[58] = 0;
   out_4421713706834801602[59] = 0;
   out_4421713706834801602[60] = 0;
   out_4421713706834801602[61] = 0;
   out_4421713706834801602[62] = 0;
   out_4421713706834801602[63] = 0;
   out_4421713706834801602[64] = 0;
   out_4421713706834801602[65] = 0;
   out_4421713706834801602[66] = 1;
   out_4421713706834801602[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4421713706834801602[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4421713706834801602[69] = 0;
   out_4421713706834801602[70] = 0;
   out_4421713706834801602[71] = 0;
   out_4421713706834801602[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4421713706834801602[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4421713706834801602[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4421713706834801602[75] = 0;
   out_4421713706834801602[76] = 0;
   out_4421713706834801602[77] = 0;
   out_4421713706834801602[78] = 0;
   out_4421713706834801602[79] = 0;
   out_4421713706834801602[80] = 0;
   out_4421713706834801602[81] = 0;
   out_4421713706834801602[82] = 0;
   out_4421713706834801602[83] = 0;
   out_4421713706834801602[84] = 0;
   out_4421713706834801602[85] = 0;
   out_4421713706834801602[86] = 0;
   out_4421713706834801602[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4421713706834801602[88] = 1;
   out_4421713706834801602[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4421713706834801602[90] = 0;
   out_4421713706834801602[91] = 0;
   out_4421713706834801602[92] = 0;
   out_4421713706834801602[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4421713706834801602[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4421713706834801602[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4421713706834801602[96] = 0;
   out_4421713706834801602[97] = 0;
   out_4421713706834801602[98] = 0;
   out_4421713706834801602[99] = 0;
   out_4421713706834801602[100] = 0;
   out_4421713706834801602[101] = 0;
   out_4421713706834801602[102] = 0;
   out_4421713706834801602[103] = 0;
   out_4421713706834801602[104] = 0;
   out_4421713706834801602[105] = 0;
   out_4421713706834801602[106] = 0;
   out_4421713706834801602[107] = 0;
   out_4421713706834801602[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4421713706834801602[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4421713706834801602[110] = 1;
   out_4421713706834801602[111] = 0;
   out_4421713706834801602[112] = 0;
   out_4421713706834801602[113] = 0;
   out_4421713706834801602[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4421713706834801602[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4421713706834801602[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4421713706834801602[117] = 0;
   out_4421713706834801602[118] = 0;
   out_4421713706834801602[119] = 0;
   out_4421713706834801602[120] = 0;
   out_4421713706834801602[121] = 0;
   out_4421713706834801602[122] = 0;
   out_4421713706834801602[123] = 0;
   out_4421713706834801602[124] = 0;
   out_4421713706834801602[125] = 0;
   out_4421713706834801602[126] = 0;
   out_4421713706834801602[127] = 0;
   out_4421713706834801602[128] = 0;
   out_4421713706834801602[129] = 0;
   out_4421713706834801602[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4421713706834801602[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4421713706834801602[132] = 1;
   out_4421713706834801602[133] = 0;
   out_4421713706834801602[134] = 0;
   out_4421713706834801602[135] = 0;
   out_4421713706834801602[136] = 0;
   out_4421713706834801602[137] = 0;
   out_4421713706834801602[138] = 0;
   out_4421713706834801602[139] = 0;
   out_4421713706834801602[140] = 0;
   out_4421713706834801602[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4421713706834801602[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4421713706834801602[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4421713706834801602[144] = 0;
   out_4421713706834801602[145] = 0;
   out_4421713706834801602[146] = 0;
   out_4421713706834801602[147] = 0;
   out_4421713706834801602[148] = 0;
   out_4421713706834801602[149] = 0;
   out_4421713706834801602[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4421713706834801602[151] = 0;
   out_4421713706834801602[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4421713706834801602[153] = 0;
   out_4421713706834801602[154] = 1;
   out_4421713706834801602[155] = 0;
   out_4421713706834801602[156] = 0;
   out_4421713706834801602[157] = 0;
   out_4421713706834801602[158] = 0;
   out_4421713706834801602[159] = 0;
   out_4421713706834801602[160] = 0;
   out_4421713706834801602[161] = 0;
   out_4421713706834801602[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4421713706834801602[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4421713706834801602[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4421713706834801602[165] = 0;
   out_4421713706834801602[166] = 0;
   out_4421713706834801602[167] = 0;
   out_4421713706834801602[168] = 0;
   out_4421713706834801602[169] = 0;
   out_4421713706834801602[170] = 0;
   out_4421713706834801602[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4421713706834801602[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4421713706834801602[173] = 0;
   out_4421713706834801602[174] = 0;
   out_4421713706834801602[175] = 0;
   out_4421713706834801602[176] = 1;
   out_4421713706834801602[177] = 0;
   out_4421713706834801602[178] = 0;
   out_4421713706834801602[179] = 0;
   out_4421713706834801602[180] = 0;
   out_4421713706834801602[181] = 0;
   out_4421713706834801602[182] = 0;
   out_4421713706834801602[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4421713706834801602[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4421713706834801602[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4421713706834801602[186] = 0;
   out_4421713706834801602[187] = 0;
   out_4421713706834801602[188] = 0;
   out_4421713706834801602[189] = 0;
   out_4421713706834801602[190] = 0;
   out_4421713706834801602[191] = 0;
   out_4421713706834801602[192] = 0;
   out_4421713706834801602[193] = 0;
   out_4421713706834801602[194] = 0;
   out_4421713706834801602[195] = 0;
   out_4421713706834801602[196] = 0;
   out_4421713706834801602[197] = 0;
   out_4421713706834801602[198] = 1;
   out_4421713706834801602[199] = 0;
   out_4421713706834801602[200] = 0;
   out_4421713706834801602[201] = 0;
   out_4421713706834801602[202] = 0;
   out_4421713706834801602[203] = 0;
   out_4421713706834801602[204] = 0;
   out_4421713706834801602[205] = 0;
   out_4421713706834801602[206] = 0;
   out_4421713706834801602[207] = 0;
   out_4421713706834801602[208] = 0;
   out_4421713706834801602[209] = 0;
   out_4421713706834801602[210] = 0;
   out_4421713706834801602[211] = 0;
   out_4421713706834801602[212] = 0;
   out_4421713706834801602[213] = 0;
   out_4421713706834801602[214] = 0;
   out_4421713706834801602[215] = 0;
   out_4421713706834801602[216] = 0;
   out_4421713706834801602[217] = 0;
   out_4421713706834801602[218] = 0;
   out_4421713706834801602[219] = 0;
   out_4421713706834801602[220] = 1;
   out_4421713706834801602[221] = 0;
   out_4421713706834801602[222] = 0;
   out_4421713706834801602[223] = 0;
   out_4421713706834801602[224] = 0;
   out_4421713706834801602[225] = 0;
   out_4421713706834801602[226] = 0;
   out_4421713706834801602[227] = 0;
   out_4421713706834801602[228] = 0;
   out_4421713706834801602[229] = 0;
   out_4421713706834801602[230] = 0;
   out_4421713706834801602[231] = 0;
   out_4421713706834801602[232] = 0;
   out_4421713706834801602[233] = 0;
   out_4421713706834801602[234] = 0;
   out_4421713706834801602[235] = 0;
   out_4421713706834801602[236] = 0;
   out_4421713706834801602[237] = 0;
   out_4421713706834801602[238] = 0;
   out_4421713706834801602[239] = 0;
   out_4421713706834801602[240] = 0;
   out_4421713706834801602[241] = 0;
   out_4421713706834801602[242] = 1;
   out_4421713706834801602[243] = 0;
   out_4421713706834801602[244] = 0;
   out_4421713706834801602[245] = 0;
   out_4421713706834801602[246] = 0;
   out_4421713706834801602[247] = 0;
   out_4421713706834801602[248] = 0;
   out_4421713706834801602[249] = 0;
   out_4421713706834801602[250] = 0;
   out_4421713706834801602[251] = 0;
   out_4421713706834801602[252] = 0;
   out_4421713706834801602[253] = 0;
   out_4421713706834801602[254] = 0;
   out_4421713706834801602[255] = 0;
   out_4421713706834801602[256] = 0;
   out_4421713706834801602[257] = 0;
   out_4421713706834801602[258] = 0;
   out_4421713706834801602[259] = 0;
   out_4421713706834801602[260] = 0;
   out_4421713706834801602[261] = 0;
   out_4421713706834801602[262] = 0;
   out_4421713706834801602[263] = 0;
   out_4421713706834801602[264] = 1;
   out_4421713706834801602[265] = 0;
   out_4421713706834801602[266] = 0;
   out_4421713706834801602[267] = 0;
   out_4421713706834801602[268] = 0;
   out_4421713706834801602[269] = 0;
   out_4421713706834801602[270] = 0;
   out_4421713706834801602[271] = 0;
   out_4421713706834801602[272] = 0;
   out_4421713706834801602[273] = 0;
   out_4421713706834801602[274] = 0;
   out_4421713706834801602[275] = 0;
   out_4421713706834801602[276] = 0;
   out_4421713706834801602[277] = 0;
   out_4421713706834801602[278] = 0;
   out_4421713706834801602[279] = 0;
   out_4421713706834801602[280] = 0;
   out_4421713706834801602[281] = 0;
   out_4421713706834801602[282] = 0;
   out_4421713706834801602[283] = 0;
   out_4421713706834801602[284] = 0;
   out_4421713706834801602[285] = 0;
   out_4421713706834801602[286] = 1;
   out_4421713706834801602[287] = 0;
   out_4421713706834801602[288] = 0;
   out_4421713706834801602[289] = 0;
   out_4421713706834801602[290] = 0;
   out_4421713706834801602[291] = 0;
   out_4421713706834801602[292] = 0;
   out_4421713706834801602[293] = 0;
   out_4421713706834801602[294] = 0;
   out_4421713706834801602[295] = 0;
   out_4421713706834801602[296] = 0;
   out_4421713706834801602[297] = 0;
   out_4421713706834801602[298] = 0;
   out_4421713706834801602[299] = 0;
   out_4421713706834801602[300] = 0;
   out_4421713706834801602[301] = 0;
   out_4421713706834801602[302] = 0;
   out_4421713706834801602[303] = 0;
   out_4421713706834801602[304] = 0;
   out_4421713706834801602[305] = 0;
   out_4421713706834801602[306] = 0;
   out_4421713706834801602[307] = 0;
   out_4421713706834801602[308] = 1;
   out_4421713706834801602[309] = 0;
   out_4421713706834801602[310] = 0;
   out_4421713706834801602[311] = 0;
   out_4421713706834801602[312] = 0;
   out_4421713706834801602[313] = 0;
   out_4421713706834801602[314] = 0;
   out_4421713706834801602[315] = 0;
   out_4421713706834801602[316] = 0;
   out_4421713706834801602[317] = 0;
   out_4421713706834801602[318] = 0;
   out_4421713706834801602[319] = 0;
   out_4421713706834801602[320] = 0;
   out_4421713706834801602[321] = 0;
   out_4421713706834801602[322] = 0;
   out_4421713706834801602[323] = 0;
   out_4421713706834801602[324] = 0;
   out_4421713706834801602[325] = 0;
   out_4421713706834801602[326] = 0;
   out_4421713706834801602[327] = 0;
   out_4421713706834801602[328] = 0;
   out_4421713706834801602[329] = 0;
   out_4421713706834801602[330] = 1;
   out_4421713706834801602[331] = 0;
   out_4421713706834801602[332] = 0;
   out_4421713706834801602[333] = 0;
   out_4421713706834801602[334] = 0;
   out_4421713706834801602[335] = 0;
   out_4421713706834801602[336] = 0;
   out_4421713706834801602[337] = 0;
   out_4421713706834801602[338] = 0;
   out_4421713706834801602[339] = 0;
   out_4421713706834801602[340] = 0;
   out_4421713706834801602[341] = 0;
   out_4421713706834801602[342] = 0;
   out_4421713706834801602[343] = 0;
   out_4421713706834801602[344] = 0;
   out_4421713706834801602[345] = 0;
   out_4421713706834801602[346] = 0;
   out_4421713706834801602[347] = 0;
   out_4421713706834801602[348] = 0;
   out_4421713706834801602[349] = 0;
   out_4421713706834801602[350] = 0;
   out_4421713706834801602[351] = 0;
   out_4421713706834801602[352] = 1;
   out_4421713706834801602[353] = 0;
   out_4421713706834801602[354] = 0;
   out_4421713706834801602[355] = 0;
   out_4421713706834801602[356] = 0;
   out_4421713706834801602[357] = 0;
   out_4421713706834801602[358] = 0;
   out_4421713706834801602[359] = 0;
   out_4421713706834801602[360] = 0;
   out_4421713706834801602[361] = 0;
   out_4421713706834801602[362] = 0;
   out_4421713706834801602[363] = 0;
   out_4421713706834801602[364] = 0;
   out_4421713706834801602[365] = 0;
   out_4421713706834801602[366] = 0;
   out_4421713706834801602[367] = 0;
   out_4421713706834801602[368] = 0;
   out_4421713706834801602[369] = 0;
   out_4421713706834801602[370] = 0;
   out_4421713706834801602[371] = 0;
   out_4421713706834801602[372] = 0;
   out_4421713706834801602[373] = 0;
   out_4421713706834801602[374] = 1;
   out_4421713706834801602[375] = 0;
   out_4421713706834801602[376] = 0;
   out_4421713706834801602[377] = 0;
   out_4421713706834801602[378] = 0;
   out_4421713706834801602[379] = 0;
   out_4421713706834801602[380] = 0;
   out_4421713706834801602[381] = 0;
   out_4421713706834801602[382] = 0;
   out_4421713706834801602[383] = 0;
   out_4421713706834801602[384] = 0;
   out_4421713706834801602[385] = 0;
   out_4421713706834801602[386] = 0;
   out_4421713706834801602[387] = 0;
   out_4421713706834801602[388] = 0;
   out_4421713706834801602[389] = 0;
   out_4421713706834801602[390] = 0;
   out_4421713706834801602[391] = 0;
   out_4421713706834801602[392] = 0;
   out_4421713706834801602[393] = 0;
   out_4421713706834801602[394] = 0;
   out_4421713706834801602[395] = 0;
   out_4421713706834801602[396] = 1;
   out_4421713706834801602[397] = 0;
   out_4421713706834801602[398] = 0;
   out_4421713706834801602[399] = 0;
   out_4421713706834801602[400] = 0;
   out_4421713706834801602[401] = 0;
   out_4421713706834801602[402] = 0;
   out_4421713706834801602[403] = 0;
   out_4421713706834801602[404] = 0;
   out_4421713706834801602[405] = 0;
   out_4421713706834801602[406] = 0;
   out_4421713706834801602[407] = 0;
   out_4421713706834801602[408] = 0;
   out_4421713706834801602[409] = 0;
   out_4421713706834801602[410] = 0;
   out_4421713706834801602[411] = 0;
   out_4421713706834801602[412] = 0;
   out_4421713706834801602[413] = 0;
   out_4421713706834801602[414] = 0;
   out_4421713706834801602[415] = 0;
   out_4421713706834801602[416] = 0;
   out_4421713706834801602[417] = 0;
   out_4421713706834801602[418] = 1;
   out_4421713706834801602[419] = 0;
   out_4421713706834801602[420] = 0;
   out_4421713706834801602[421] = 0;
   out_4421713706834801602[422] = 0;
   out_4421713706834801602[423] = 0;
   out_4421713706834801602[424] = 0;
   out_4421713706834801602[425] = 0;
   out_4421713706834801602[426] = 0;
   out_4421713706834801602[427] = 0;
   out_4421713706834801602[428] = 0;
   out_4421713706834801602[429] = 0;
   out_4421713706834801602[430] = 0;
   out_4421713706834801602[431] = 0;
   out_4421713706834801602[432] = 0;
   out_4421713706834801602[433] = 0;
   out_4421713706834801602[434] = 0;
   out_4421713706834801602[435] = 0;
   out_4421713706834801602[436] = 0;
   out_4421713706834801602[437] = 0;
   out_4421713706834801602[438] = 0;
   out_4421713706834801602[439] = 0;
   out_4421713706834801602[440] = 1;
}
void h_4(double *state, double *unused, double *out_7627615084599271767) {
   out_7627615084599271767[0] = state[10] + state[13];
   out_7627615084599271767[1] = state[11] + state[14];
   out_7627615084599271767[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_660110156520424923) {
   out_660110156520424923[0] = 0;
   out_660110156520424923[1] = 0;
   out_660110156520424923[2] = 0;
   out_660110156520424923[3] = 0;
   out_660110156520424923[4] = 0;
   out_660110156520424923[5] = 0;
   out_660110156520424923[6] = 0;
   out_660110156520424923[7] = 0;
   out_660110156520424923[8] = 0;
   out_660110156520424923[9] = 0;
   out_660110156520424923[10] = 1;
   out_660110156520424923[11] = 0;
   out_660110156520424923[12] = 0;
   out_660110156520424923[13] = 1;
   out_660110156520424923[14] = 0;
   out_660110156520424923[15] = 0;
   out_660110156520424923[16] = 0;
   out_660110156520424923[17] = 0;
   out_660110156520424923[18] = 0;
   out_660110156520424923[19] = 0;
   out_660110156520424923[20] = 0;
   out_660110156520424923[21] = 0;
   out_660110156520424923[22] = 0;
   out_660110156520424923[23] = 0;
   out_660110156520424923[24] = 0;
   out_660110156520424923[25] = 0;
   out_660110156520424923[26] = 0;
   out_660110156520424923[27] = 0;
   out_660110156520424923[28] = 0;
   out_660110156520424923[29] = 0;
   out_660110156520424923[30] = 0;
   out_660110156520424923[31] = 0;
   out_660110156520424923[32] = 0;
   out_660110156520424923[33] = 1;
   out_660110156520424923[34] = 0;
   out_660110156520424923[35] = 0;
   out_660110156520424923[36] = 1;
   out_660110156520424923[37] = 0;
   out_660110156520424923[38] = 0;
   out_660110156520424923[39] = 0;
   out_660110156520424923[40] = 0;
   out_660110156520424923[41] = 0;
   out_660110156520424923[42] = 0;
   out_660110156520424923[43] = 0;
   out_660110156520424923[44] = 0;
   out_660110156520424923[45] = 0;
   out_660110156520424923[46] = 0;
   out_660110156520424923[47] = 0;
   out_660110156520424923[48] = 0;
   out_660110156520424923[49] = 0;
   out_660110156520424923[50] = 0;
   out_660110156520424923[51] = 0;
   out_660110156520424923[52] = 0;
   out_660110156520424923[53] = 0;
   out_660110156520424923[54] = 0;
   out_660110156520424923[55] = 0;
   out_660110156520424923[56] = 1;
   out_660110156520424923[57] = 0;
   out_660110156520424923[58] = 0;
   out_660110156520424923[59] = 1;
   out_660110156520424923[60] = 0;
   out_660110156520424923[61] = 0;
   out_660110156520424923[62] = 0;
   out_660110156520424923[63] = 0;
   out_660110156520424923[64] = 0;
   out_660110156520424923[65] = 0;
}
void h_9(double *state, double *unused, double *out_1645483601582419251) {
   out_1645483601582419251[0] = state[10];
   out_1645483601582419251[1] = state[11];
   out_1645483601582419251[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7947329091784872393) {
   out_7947329091784872393[0] = 0;
   out_7947329091784872393[1] = 0;
   out_7947329091784872393[2] = 0;
   out_7947329091784872393[3] = 0;
   out_7947329091784872393[4] = 0;
   out_7947329091784872393[5] = 0;
   out_7947329091784872393[6] = 0;
   out_7947329091784872393[7] = 0;
   out_7947329091784872393[8] = 0;
   out_7947329091784872393[9] = 0;
   out_7947329091784872393[10] = 1;
   out_7947329091784872393[11] = 0;
   out_7947329091784872393[12] = 0;
   out_7947329091784872393[13] = 0;
   out_7947329091784872393[14] = 0;
   out_7947329091784872393[15] = 0;
   out_7947329091784872393[16] = 0;
   out_7947329091784872393[17] = 0;
   out_7947329091784872393[18] = 0;
   out_7947329091784872393[19] = 0;
   out_7947329091784872393[20] = 0;
   out_7947329091784872393[21] = 0;
   out_7947329091784872393[22] = 0;
   out_7947329091784872393[23] = 0;
   out_7947329091784872393[24] = 0;
   out_7947329091784872393[25] = 0;
   out_7947329091784872393[26] = 0;
   out_7947329091784872393[27] = 0;
   out_7947329091784872393[28] = 0;
   out_7947329091784872393[29] = 0;
   out_7947329091784872393[30] = 0;
   out_7947329091784872393[31] = 0;
   out_7947329091784872393[32] = 0;
   out_7947329091784872393[33] = 1;
   out_7947329091784872393[34] = 0;
   out_7947329091784872393[35] = 0;
   out_7947329091784872393[36] = 0;
   out_7947329091784872393[37] = 0;
   out_7947329091784872393[38] = 0;
   out_7947329091784872393[39] = 0;
   out_7947329091784872393[40] = 0;
   out_7947329091784872393[41] = 0;
   out_7947329091784872393[42] = 0;
   out_7947329091784872393[43] = 0;
   out_7947329091784872393[44] = 0;
   out_7947329091784872393[45] = 0;
   out_7947329091784872393[46] = 0;
   out_7947329091784872393[47] = 0;
   out_7947329091784872393[48] = 0;
   out_7947329091784872393[49] = 0;
   out_7947329091784872393[50] = 0;
   out_7947329091784872393[51] = 0;
   out_7947329091784872393[52] = 0;
   out_7947329091784872393[53] = 0;
   out_7947329091784872393[54] = 0;
   out_7947329091784872393[55] = 0;
   out_7947329091784872393[56] = 1;
   out_7947329091784872393[57] = 0;
   out_7947329091784872393[58] = 0;
   out_7947329091784872393[59] = 0;
   out_7947329091784872393[60] = 0;
   out_7947329091784872393[61] = 0;
   out_7947329091784872393[62] = 0;
   out_7947329091784872393[63] = 0;
   out_7947329091784872393[64] = 0;
   out_7947329091784872393[65] = 0;
}
void h_10(double *state, double *unused, double *out_5341847282855306581) {
   out_5341847282855306581[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_5341847282855306581[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_5341847282855306581[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_3248568946624199813) {
   out_3248568946624199813[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3248568946624199813[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3248568946624199813[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_3248568946624199813[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3248568946624199813[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3248568946624199813[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3248568946624199813[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3248568946624199813[7] = 0;
   out_3248568946624199813[8] = 0;
   out_3248568946624199813[9] = 0;
   out_3248568946624199813[10] = 0;
   out_3248568946624199813[11] = 0;
   out_3248568946624199813[12] = 0;
   out_3248568946624199813[13] = 0;
   out_3248568946624199813[14] = 0;
   out_3248568946624199813[15] = 0;
   out_3248568946624199813[16] = 1;
   out_3248568946624199813[17] = 0;
   out_3248568946624199813[18] = 0;
   out_3248568946624199813[19] = 1;
   out_3248568946624199813[20] = 0;
   out_3248568946624199813[21] = 0;
   out_3248568946624199813[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3248568946624199813[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3248568946624199813[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_3248568946624199813[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3248568946624199813[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3248568946624199813[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3248568946624199813[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3248568946624199813[29] = 0;
   out_3248568946624199813[30] = 0;
   out_3248568946624199813[31] = 0;
   out_3248568946624199813[32] = 0;
   out_3248568946624199813[33] = 0;
   out_3248568946624199813[34] = 0;
   out_3248568946624199813[35] = 0;
   out_3248568946624199813[36] = 0;
   out_3248568946624199813[37] = 0;
   out_3248568946624199813[38] = 0;
   out_3248568946624199813[39] = 1;
   out_3248568946624199813[40] = 0;
   out_3248568946624199813[41] = 0;
   out_3248568946624199813[42] = 1;
   out_3248568946624199813[43] = 0;
   out_3248568946624199813[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_3248568946624199813[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_3248568946624199813[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3248568946624199813[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3248568946624199813[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3248568946624199813[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3248568946624199813[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3248568946624199813[51] = 0;
   out_3248568946624199813[52] = 0;
   out_3248568946624199813[53] = 0;
   out_3248568946624199813[54] = 0;
   out_3248568946624199813[55] = 0;
   out_3248568946624199813[56] = 0;
   out_3248568946624199813[57] = 0;
   out_3248568946624199813[58] = 0;
   out_3248568946624199813[59] = 0;
   out_3248568946624199813[60] = 0;
   out_3248568946624199813[61] = 0;
   out_3248568946624199813[62] = 1;
   out_3248568946624199813[63] = 0;
   out_3248568946624199813[64] = 0;
   out_3248568946624199813[65] = 1;
}
void h_12(double *state, double *unused, double *out_3244330558587092924) {
   out_3244330558587092924[0] = state[0];
   out_3244330558587092924[1] = state[1];
   out_3244330558587092924[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5679566564552386718) {
   out_5679566564552386718[0] = 1;
   out_5679566564552386718[1] = 0;
   out_5679566564552386718[2] = 0;
   out_5679566564552386718[3] = 0;
   out_5679566564552386718[4] = 0;
   out_5679566564552386718[5] = 0;
   out_5679566564552386718[6] = 0;
   out_5679566564552386718[7] = 0;
   out_5679566564552386718[8] = 0;
   out_5679566564552386718[9] = 0;
   out_5679566564552386718[10] = 0;
   out_5679566564552386718[11] = 0;
   out_5679566564552386718[12] = 0;
   out_5679566564552386718[13] = 0;
   out_5679566564552386718[14] = 0;
   out_5679566564552386718[15] = 0;
   out_5679566564552386718[16] = 0;
   out_5679566564552386718[17] = 0;
   out_5679566564552386718[18] = 0;
   out_5679566564552386718[19] = 0;
   out_5679566564552386718[20] = 0;
   out_5679566564552386718[21] = 0;
   out_5679566564552386718[22] = 0;
   out_5679566564552386718[23] = 1;
   out_5679566564552386718[24] = 0;
   out_5679566564552386718[25] = 0;
   out_5679566564552386718[26] = 0;
   out_5679566564552386718[27] = 0;
   out_5679566564552386718[28] = 0;
   out_5679566564552386718[29] = 0;
   out_5679566564552386718[30] = 0;
   out_5679566564552386718[31] = 0;
   out_5679566564552386718[32] = 0;
   out_5679566564552386718[33] = 0;
   out_5679566564552386718[34] = 0;
   out_5679566564552386718[35] = 0;
   out_5679566564552386718[36] = 0;
   out_5679566564552386718[37] = 0;
   out_5679566564552386718[38] = 0;
   out_5679566564552386718[39] = 0;
   out_5679566564552386718[40] = 0;
   out_5679566564552386718[41] = 0;
   out_5679566564552386718[42] = 0;
   out_5679566564552386718[43] = 0;
   out_5679566564552386718[44] = 0;
   out_5679566564552386718[45] = 0;
   out_5679566564552386718[46] = 1;
   out_5679566564552386718[47] = 0;
   out_5679566564552386718[48] = 0;
   out_5679566564552386718[49] = 0;
   out_5679566564552386718[50] = 0;
   out_5679566564552386718[51] = 0;
   out_5679566564552386718[52] = 0;
   out_5679566564552386718[53] = 0;
   out_5679566564552386718[54] = 0;
   out_5679566564552386718[55] = 0;
   out_5679566564552386718[56] = 0;
   out_5679566564552386718[57] = 0;
   out_5679566564552386718[58] = 0;
   out_5679566564552386718[59] = 0;
   out_5679566564552386718[60] = 0;
   out_5679566564552386718[61] = 0;
   out_5679566564552386718[62] = 0;
   out_5679566564552386718[63] = 0;
   out_5679566564552386718[64] = 0;
   out_5679566564552386718[65] = 0;
}
void h_31(double *state, double *unused, double *out_4675634228744983158) {
   out_4675634228744983158[0] = state[7];
   out_4675634228744983158[1] = state[8];
   out_4675634228744983158[2] = state[9];
}
void H_31(double *state, double *unused, double *out_4026772213893032299) {
   out_4026772213893032299[0] = 0;
   out_4026772213893032299[1] = 0;
   out_4026772213893032299[2] = 0;
   out_4026772213893032299[3] = 0;
   out_4026772213893032299[4] = 0;
   out_4026772213893032299[5] = 0;
   out_4026772213893032299[6] = 0;
   out_4026772213893032299[7] = 1;
   out_4026772213893032299[8] = 0;
   out_4026772213893032299[9] = 0;
   out_4026772213893032299[10] = 0;
   out_4026772213893032299[11] = 0;
   out_4026772213893032299[12] = 0;
   out_4026772213893032299[13] = 0;
   out_4026772213893032299[14] = 0;
   out_4026772213893032299[15] = 0;
   out_4026772213893032299[16] = 0;
   out_4026772213893032299[17] = 0;
   out_4026772213893032299[18] = 0;
   out_4026772213893032299[19] = 0;
   out_4026772213893032299[20] = 0;
   out_4026772213893032299[21] = 0;
   out_4026772213893032299[22] = 0;
   out_4026772213893032299[23] = 0;
   out_4026772213893032299[24] = 0;
   out_4026772213893032299[25] = 0;
   out_4026772213893032299[26] = 0;
   out_4026772213893032299[27] = 0;
   out_4026772213893032299[28] = 0;
   out_4026772213893032299[29] = 0;
   out_4026772213893032299[30] = 1;
   out_4026772213893032299[31] = 0;
   out_4026772213893032299[32] = 0;
   out_4026772213893032299[33] = 0;
   out_4026772213893032299[34] = 0;
   out_4026772213893032299[35] = 0;
   out_4026772213893032299[36] = 0;
   out_4026772213893032299[37] = 0;
   out_4026772213893032299[38] = 0;
   out_4026772213893032299[39] = 0;
   out_4026772213893032299[40] = 0;
   out_4026772213893032299[41] = 0;
   out_4026772213893032299[42] = 0;
   out_4026772213893032299[43] = 0;
   out_4026772213893032299[44] = 0;
   out_4026772213893032299[45] = 0;
   out_4026772213893032299[46] = 0;
   out_4026772213893032299[47] = 0;
   out_4026772213893032299[48] = 0;
   out_4026772213893032299[49] = 0;
   out_4026772213893032299[50] = 0;
   out_4026772213893032299[51] = 0;
   out_4026772213893032299[52] = 0;
   out_4026772213893032299[53] = 1;
   out_4026772213893032299[54] = 0;
   out_4026772213893032299[55] = 0;
   out_4026772213893032299[56] = 0;
   out_4026772213893032299[57] = 0;
   out_4026772213893032299[58] = 0;
   out_4026772213893032299[59] = 0;
   out_4026772213893032299[60] = 0;
   out_4026772213893032299[61] = 0;
   out_4026772213893032299[62] = 0;
   out_4026772213893032299[63] = 0;
   out_4026772213893032299[64] = 0;
   out_4026772213893032299[65] = 0;
}
void h_32(double *state, double *unused, double *out_249585325447370776) {
   out_249585325447370776[0] = state[3];
   out_249585325447370776[1] = state[4];
   out_249585325447370776[2] = state[5];
   out_249585325447370776[3] = state[6];
}
void H_32(double *state, double *unused, double *out_2381932704182132697) {
   out_2381932704182132697[0] = 0;
   out_2381932704182132697[1] = 0;
   out_2381932704182132697[2] = 0;
   out_2381932704182132697[3] = 1;
   out_2381932704182132697[4] = 0;
   out_2381932704182132697[5] = 0;
   out_2381932704182132697[6] = 0;
   out_2381932704182132697[7] = 0;
   out_2381932704182132697[8] = 0;
   out_2381932704182132697[9] = 0;
   out_2381932704182132697[10] = 0;
   out_2381932704182132697[11] = 0;
   out_2381932704182132697[12] = 0;
   out_2381932704182132697[13] = 0;
   out_2381932704182132697[14] = 0;
   out_2381932704182132697[15] = 0;
   out_2381932704182132697[16] = 0;
   out_2381932704182132697[17] = 0;
   out_2381932704182132697[18] = 0;
   out_2381932704182132697[19] = 0;
   out_2381932704182132697[20] = 0;
   out_2381932704182132697[21] = 0;
   out_2381932704182132697[22] = 0;
   out_2381932704182132697[23] = 0;
   out_2381932704182132697[24] = 0;
   out_2381932704182132697[25] = 0;
   out_2381932704182132697[26] = 1;
   out_2381932704182132697[27] = 0;
   out_2381932704182132697[28] = 0;
   out_2381932704182132697[29] = 0;
   out_2381932704182132697[30] = 0;
   out_2381932704182132697[31] = 0;
   out_2381932704182132697[32] = 0;
   out_2381932704182132697[33] = 0;
   out_2381932704182132697[34] = 0;
   out_2381932704182132697[35] = 0;
   out_2381932704182132697[36] = 0;
   out_2381932704182132697[37] = 0;
   out_2381932704182132697[38] = 0;
   out_2381932704182132697[39] = 0;
   out_2381932704182132697[40] = 0;
   out_2381932704182132697[41] = 0;
   out_2381932704182132697[42] = 0;
   out_2381932704182132697[43] = 0;
   out_2381932704182132697[44] = 0;
   out_2381932704182132697[45] = 0;
   out_2381932704182132697[46] = 0;
   out_2381932704182132697[47] = 0;
   out_2381932704182132697[48] = 0;
   out_2381932704182132697[49] = 1;
   out_2381932704182132697[50] = 0;
   out_2381932704182132697[51] = 0;
   out_2381932704182132697[52] = 0;
   out_2381932704182132697[53] = 0;
   out_2381932704182132697[54] = 0;
   out_2381932704182132697[55] = 0;
   out_2381932704182132697[56] = 0;
   out_2381932704182132697[57] = 0;
   out_2381932704182132697[58] = 0;
   out_2381932704182132697[59] = 0;
   out_2381932704182132697[60] = 0;
   out_2381932704182132697[61] = 0;
   out_2381932704182132697[62] = 0;
   out_2381932704182132697[63] = 0;
   out_2381932704182132697[64] = 0;
   out_2381932704182132697[65] = 0;
   out_2381932704182132697[66] = 0;
   out_2381932704182132697[67] = 0;
   out_2381932704182132697[68] = 0;
   out_2381932704182132697[69] = 0;
   out_2381932704182132697[70] = 0;
   out_2381932704182132697[71] = 0;
   out_2381932704182132697[72] = 1;
   out_2381932704182132697[73] = 0;
   out_2381932704182132697[74] = 0;
   out_2381932704182132697[75] = 0;
   out_2381932704182132697[76] = 0;
   out_2381932704182132697[77] = 0;
   out_2381932704182132697[78] = 0;
   out_2381932704182132697[79] = 0;
   out_2381932704182132697[80] = 0;
   out_2381932704182132697[81] = 0;
   out_2381932704182132697[82] = 0;
   out_2381932704182132697[83] = 0;
   out_2381932704182132697[84] = 0;
   out_2381932704182132697[85] = 0;
   out_2381932704182132697[86] = 0;
   out_2381932704182132697[87] = 0;
}
void h_13(double *state, double *unused, double *out_6925078624835144738) {
   out_6925078624835144738[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6925078624835144738[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6925078624835144738[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_7496803675139196446) {
   out_7496803675139196446[0] = 0;
   out_7496803675139196446[1] = 0;
   out_7496803675139196446[2] = 0;
   out_7496803675139196446[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7496803675139196446[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7496803675139196446[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_7496803675139196446[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7496803675139196446[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_7496803675139196446[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_7496803675139196446[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_7496803675139196446[10] = 0;
   out_7496803675139196446[11] = 0;
   out_7496803675139196446[12] = 0;
   out_7496803675139196446[13] = 0;
   out_7496803675139196446[14] = 0;
   out_7496803675139196446[15] = 0;
   out_7496803675139196446[16] = 0;
   out_7496803675139196446[17] = 0;
   out_7496803675139196446[18] = 0;
   out_7496803675139196446[19] = 0;
   out_7496803675139196446[20] = 0;
   out_7496803675139196446[21] = 0;
   out_7496803675139196446[22] = 0;
   out_7496803675139196446[23] = 0;
   out_7496803675139196446[24] = 0;
   out_7496803675139196446[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7496803675139196446[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7496803675139196446[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7496803675139196446[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_7496803675139196446[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_7496803675139196446[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_7496803675139196446[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_7496803675139196446[32] = 0;
   out_7496803675139196446[33] = 0;
   out_7496803675139196446[34] = 0;
   out_7496803675139196446[35] = 0;
   out_7496803675139196446[36] = 0;
   out_7496803675139196446[37] = 0;
   out_7496803675139196446[38] = 0;
   out_7496803675139196446[39] = 0;
   out_7496803675139196446[40] = 0;
   out_7496803675139196446[41] = 0;
   out_7496803675139196446[42] = 0;
   out_7496803675139196446[43] = 0;
   out_7496803675139196446[44] = 0;
   out_7496803675139196446[45] = 0;
   out_7496803675139196446[46] = 0;
   out_7496803675139196446[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7496803675139196446[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_7496803675139196446[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7496803675139196446[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7496803675139196446[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_7496803675139196446[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_7496803675139196446[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_7496803675139196446[54] = 0;
   out_7496803675139196446[55] = 0;
   out_7496803675139196446[56] = 0;
   out_7496803675139196446[57] = 0;
   out_7496803675139196446[58] = 0;
   out_7496803675139196446[59] = 0;
   out_7496803675139196446[60] = 0;
   out_7496803675139196446[61] = 0;
   out_7496803675139196446[62] = 0;
   out_7496803675139196446[63] = 0;
   out_7496803675139196446[64] = 0;
   out_7496803675139196446[65] = 0;
}
void h_14(double *state, double *unused, double *out_1645483601582419251) {
   out_1645483601582419251[0] = state[10];
   out_1645483601582419251[1] = state[11];
   out_1645483601582419251[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7947329091784872393) {
   out_7947329091784872393[0] = 0;
   out_7947329091784872393[1] = 0;
   out_7947329091784872393[2] = 0;
   out_7947329091784872393[3] = 0;
   out_7947329091784872393[4] = 0;
   out_7947329091784872393[5] = 0;
   out_7947329091784872393[6] = 0;
   out_7947329091784872393[7] = 0;
   out_7947329091784872393[8] = 0;
   out_7947329091784872393[9] = 0;
   out_7947329091784872393[10] = 1;
   out_7947329091784872393[11] = 0;
   out_7947329091784872393[12] = 0;
   out_7947329091784872393[13] = 0;
   out_7947329091784872393[14] = 0;
   out_7947329091784872393[15] = 0;
   out_7947329091784872393[16] = 0;
   out_7947329091784872393[17] = 0;
   out_7947329091784872393[18] = 0;
   out_7947329091784872393[19] = 0;
   out_7947329091784872393[20] = 0;
   out_7947329091784872393[21] = 0;
   out_7947329091784872393[22] = 0;
   out_7947329091784872393[23] = 0;
   out_7947329091784872393[24] = 0;
   out_7947329091784872393[25] = 0;
   out_7947329091784872393[26] = 0;
   out_7947329091784872393[27] = 0;
   out_7947329091784872393[28] = 0;
   out_7947329091784872393[29] = 0;
   out_7947329091784872393[30] = 0;
   out_7947329091784872393[31] = 0;
   out_7947329091784872393[32] = 0;
   out_7947329091784872393[33] = 1;
   out_7947329091784872393[34] = 0;
   out_7947329091784872393[35] = 0;
   out_7947329091784872393[36] = 0;
   out_7947329091784872393[37] = 0;
   out_7947329091784872393[38] = 0;
   out_7947329091784872393[39] = 0;
   out_7947329091784872393[40] = 0;
   out_7947329091784872393[41] = 0;
   out_7947329091784872393[42] = 0;
   out_7947329091784872393[43] = 0;
   out_7947329091784872393[44] = 0;
   out_7947329091784872393[45] = 0;
   out_7947329091784872393[46] = 0;
   out_7947329091784872393[47] = 0;
   out_7947329091784872393[48] = 0;
   out_7947329091784872393[49] = 0;
   out_7947329091784872393[50] = 0;
   out_7947329091784872393[51] = 0;
   out_7947329091784872393[52] = 0;
   out_7947329091784872393[53] = 0;
   out_7947329091784872393[54] = 0;
   out_7947329091784872393[55] = 0;
   out_7947329091784872393[56] = 1;
   out_7947329091784872393[57] = 0;
   out_7947329091784872393[58] = 0;
   out_7947329091784872393[59] = 0;
   out_7947329091784872393[60] = 0;
   out_7947329091784872393[61] = 0;
   out_7947329091784872393[62] = 0;
   out_7947329091784872393[63] = 0;
   out_7947329091784872393[64] = 0;
   out_7947329091784872393[65] = 0;
}
void h_33(double *state, double *unused, double *out_1678862661483315476) {
   out_1678862661483315476[0] = state[16];
   out_1678862661483315476[1] = state[17];
   out_1678862661483315476[2] = state[18];
}
void H_33(double *state, double *unused, double *out_7177329218531889903) {
   out_7177329218531889903[0] = 0;
   out_7177329218531889903[1] = 0;
   out_7177329218531889903[2] = 0;
   out_7177329218531889903[3] = 0;
   out_7177329218531889903[4] = 0;
   out_7177329218531889903[5] = 0;
   out_7177329218531889903[6] = 0;
   out_7177329218531889903[7] = 0;
   out_7177329218531889903[8] = 0;
   out_7177329218531889903[9] = 0;
   out_7177329218531889903[10] = 0;
   out_7177329218531889903[11] = 0;
   out_7177329218531889903[12] = 0;
   out_7177329218531889903[13] = 0;
   out_7177329218531889903[14] = 0;
   out_7177329218531889903[15] = 0;
   out_7177329218531889903[16] = 1;
   out_7177329218531889903[17] = 0;
   out_7177329218531889903[18] = 0;
   out_7177329218531889903[19] = 0;
   out_7177329218531889903[20] = 0;
   out_7177329218531889903[21] = 0;
   out_7177329218531889903[22] = 0;
   out_7177329218531889903[23] = 0;
   out_7177329218531889903[24] = 0;
   out_7177329218531889903[25] = 0;
   out_7177329218531889903[26] = 0;
   out_7177329218531889903[27] = 0;
   out_7177329218531889903[28] = 0;
   out_7177329218531889903[29] = 0;
   out_7177329218531889903[30] = 0;
   out_7177329218531889903[31] = 0;
   out_7177329218531889903[32] = 0;
   out_7177329218531889903[33] = 0;
   out_7177329218531889903[34] = 0;
   out_7177329218531889903[35] = 0;
   out_7177329218531889903[36] = 0;
   out_7177329218531889903[37] = 0;
   out_7177329218531889903[38] = 0;
   out_7177329218531889903[39] = 1;
   out_7177329218531889903[40] = 0;
   out_7177329218531889903[41] = 0;
   out_7177329218531889903[42] = 0;
   out_7177329218531889903[43] = 0;
   out_7177329218531889903[44] = 0;
   out_7177329218531889903[45] = 0;
   out_7177329218531889903[46] = 0;
   out_7177329218531889903[47] = 0;
   out_7177329218531889903[48] = 0;
   out_7177329218531889903[49] = 0;
   out_7177329218531889903[50] = 0;
   out_7177329218531889903[51] = 0;
   out_7177329218531889903[52] = 0;
   out_7177329218531889903[53] = 0;
   out_7177329218531889903[54] = 0;
   out_7177329218531889903[55] = 0;
   out_7177329218531889903[56] = 0;
   out_7177329218531889903[57] = 0;
   out_7177329218531889903[58] = 0;
   out_7177329218531889903[59] = 0;
   out_7177329218531889903[60] = 0;
   out_7177329218531889903[61] = 0;
   out_7177329218531889903[62] = 1;
   out_7177329218531889903[63] = 0;
   out_7177329218531889903[64] = 0;
   out_7177329218531889903[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_664870032555571696) {
  H(in_vec, out_664870032555571696);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_515850225930482518) {
  err_fun(nom_x, delta_x, out_515850225930482518);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5678167244921416369) {
  inv_err_fun(nom_x, true_x, out_5678167244921416369);
}
void live_H_mod_fun(double *state, double *out_7147677672942268557) {
  H_mod_fun(state, out_7147677672942268557);
}
void live_f_fun(double *state, double dt, double *out_792155603275649113) {
  f_fun(state,  dt, out_792155603275649113);
}
void live_F_fun(double *state, double dt, double *out_4421713706834801602) {
  F_fun(state,  dt, out_4421713706834801602);
}
void live_h_4(double *state, double *unused, double *out_7627615084599271767) {
  h_4(state, unused, out_7627615084599271767);
}
void live_H_4(double *state, double *unused, double *out_660110156520424923) {
  H_4(state, unused, out_660110156520424923);
}
void live_h_9(double *state, double *unused, double *out_1645483601582419251) {
  h_9(state, unused, out_1645483601582419251);
}
void live_H_9(double *state, double *unused, double *out_7947329091784872393) {
  H_9(state, unused, out_7947329091784872393);
}
void live_h_10(double *state, double *unused, double *out_5341847282855306581) {
  h_10(state, unused, out_5341847282855306581);
}
void live_H_10(double *state, double *unused, double *out_3248568946624199813) {
  H_10(state, unused, out_3248568946624199813);
}
void live_h_12(double *state, double *unused, double *out_3244330558587092924) {
  h_12(state, unused, out_3244330558587092924);
}
void live_H_12(double *state, double *unused, double *out_5679566564552386718) {
  H_12(state, unused, out_5679566564552386718);
}
void live_h_31(double *state, double *unused, double *out_4675634228744983158) {
  h_31(state, unused, out_4675634228744983158);
}
void live_H_31(double *state, double *unused, double *out_4026772213893032299) {
  H_31(state, unused, out_4026772213893032299);
}
void live_h_32(double *state, double *unused, double *out_249585325447370776) {
  h_32(state, unused, out_249585325447370776);
}
void live_H_32(double *state, double *unused, double *out_2381932704182132697) {
  H_32(state, unused, out_2381932704182132697);
}
void live_h_13(double *state, double *unused, double *out_6925078624835144738) {
  h_13(state, unused, out_6925078624835144738);
}
void live_H_13(double *state, double *unused, double *out_7496803675139196446) {
  H_13(state, unused, out_7496803675139196446);
}
void live_h_14(double *state, double *unused, double *out_1645483601582419251) {
  h_14(state, unused, out_1645483601582419251);
}
void live_H_14(double *state, double *unused, double *out_7947329091784872393) {
  H_14(state, unused, out_7947329091784872393);
}
void live_h_33(double *state, double *unused, double *out_1678862661483315476) {
  h_33(state, unused, out_1678862661483315476);
}
void live_H_33(double *state, double *unused, double *out_7177329218531889903) {
  H_33(state, unused, out_7177329218531889903);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
